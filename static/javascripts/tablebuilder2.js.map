{"version":3,"sources":["tablebuilder2.js","rd-builder.js","rd-data-tools.js"],"names":["presets","table_data","current_data","current_settings","unselectedOptionString","getEthnicityColumn","headers","index","length","toLowerCase","trim","indexOf","getEthnicityValues","data","all_data","_","clone","column","shift","pluck","getIsSimpleData","values","uniq","getNumberFormat","format","$","val","multiplier","prefix","suffix","min","max","getTips","basicErrors","validateTable","missingFields","checkRequiredFields","ethnicityColumn","getEthnicityColumnHeader","secondaryColumn","getSecondaryColumnHeader","validateData","document","ready","handleNewData","on_success","tabbedData","textToData","message","html","listWithNone","listWithRequired","dropdownHtmlWithDefault","ethnicity_data","ajax","type","url","url_get_classifications","dataType","JSON","stringify","contentType","success","response","p","preset","code","populateEthnicityPresets","show","hide","failure","console","log","error","err","defaultValue","defaultLabel","stripped","exclude","h","header","push","strippedHeaders","dataColumnChange","evt","selected_column_name","this","id","new_column_name","preview","tips","children","tipsOfType","MISSING_FIELD_ERROR","ETHNICITY_ERROR","RECTANGLE_ERROR","DATA_ERROR_DUPLICATION","DATA_ERROR_MISSING_DATA","displayTips","tableObject","innerBuildTableObject","title","text","drawTable","getElementById","dispatchEvent","Event","displayTable","errorType","filter","tip","getTablePageSettings","tableOptions","dataStyle","selection","order","data_style","getTableTypeOptions","tableValues","table_title","table_column_1","table_column_1_name","table_column_2","table_column_2_name","table_column_3","table_column_3_name","table_column_4","table_column_4_name","table_column_5","table_column_5_name","table_index_column_name","version","notNullOrNone","buildTableColumns","columns","each","idx","buildTableColumnNames","value","getPresetWithCode","buildTableObject","buildDataWithPreset","all_table_columns","concat","rows","body","lowHeaders","map","indices","col","lowCol","r","item","row","selectDataStyle","modifyIndexColumnNameAndPreview","indexColumnName","setupTablebuilderWithSettings","settings","NONE_VALUE","click","focus","attr","tableBuilderSettings","src","series","i","isNaN","y","url_save_table_to_page","source","tableBuilderVersion","location","reload","window","replace","url_edit_dimension","change","data_text","d","join","initialiseForm","field","search","pasteJson","json","data_text_area","DATA_ERROR_SETTINGS_ERROR","DATA_ERROR_COMPLEX_DATA","categoryColumn","groupColumn","dataRows","headerRow","lowerHeaderRow","m","categoryIndex","index_of_column_named","groupIndex","validateGroupedData","validateSimpleData","validateDataDuplicatesOnly","validateGroupedDataDuplicates","duplicateErrors","uniqueCategories","dict","forEach","category","completeErrors","validateGroupedDataCompleteness","rowItems","columnItems","errors","mapOfPairs","object","contains","group","groupValuesUsedByCategory","categoryValue","groupValue","errorDescription","errorResolutionHint","exports","require","dataTools","filterData","applyFilter","textFilterToIndexFilter","numerateColumns","numerateColumn","toFloat","textFilter","indexFilter","key","data2","filteredRows","datum","itemPassesFilter","unshift","formatNumber","numStr","number","replaceAll","formatted","toLocaleString","formatNumberWithDecimalPlaces","dp","match","minimumFractionDigits","maximumFractionDigits","seriesDecimalPlaces","maxDp","s","decimalPlaces","seriesCouldBeYear","valueStr","decimalFigureMatch","String","uniqueDataInColumn","slice","start","sort","uniqueDataInColumnOrdered","order_column","sorted","sortBy","uniqueDataInColumnMaintainOrder","used","textData","cleanData","split","line","VALUE_ERROR","validateChart","hasHeader","isRectangular","found","str","size","nonNumericData","nonNumeric"],"mappings":"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","file":"tablebuilder2.js","sourcesContent":["/*\n    Functionality of tablebuilder including the main methods that run each stage\n\n\n    On open **initialiseForm()**\n    - grab current_settings from dimension.table_2_source_data if such a thing exists\n    - if current_settings doesn't exist open with the data area open.\n    - otherwise set the current_settings from file, paste data into the data panel and run the On new data routine below\n\n    On new data (changing data in the data panel area and clicking Okay) **handleNewData()**\n    - use an AJAX call to the /get-valid-presets-for-data endpoint to add extra values **buildDataWithPreset()**\n    - populate the table builder dropdowns with correct values **populateTableOptions(), populateEthnicityPresets()**\n    - if any settings currently exist apply as many as are still relevant **setupTablebuilderWithSettings()**\n\n    On settings changes\n    - validate they will make a viable table **getTips()**\n    - if so use the rd table object factory and renderer to display a preview **preview()**\n    - otherwise display an error and tip to fix it **displayTips()**\n\n    On save\n    - build a table object with the rd-table-object factory **buildTableObject()**\n    - create a table_settings lump of json **getTablePageSettings()**\n    - post both to <dimension>/create-table endpoint **postTableObject()**\n\n */\n\n// The main working data variables\nvar presets = [];\nvar table_data = null;\n\n// Variables that needs to be maintained when the user makes changes to the text data\nvar current_data = \"\";\nvar current_settings = null;\n\nvar unselectedOptionString = \"Please select\";\n\nfunction getEthnicityColumn(headers) {\n    for (var index = 0; index < headers.length; index++) {\n        var cleanHeader = headers[index].toLowerCase().trim();\n        if (cleanHeader.indexOf('ethnic') >= 0) {\n            return index\n        }\n    }\n    return -1;\n}\n\nfunction getEthnicityValues(data) {\n    var all_data = _.clone(data);\n    var headers = all_data.shift();\n\n    var column = getEthnicityColumn(headers);\n    if (column >= 0) {\n        return _.pluck(all_data, column);\n    }\n    return [];\n}\n\nfunction getIsSimpleData(data) {\n    var values = getEthnicityValues(data);\n    values = _.uniq(values);\n    return values.length === data.length - 1\n}\n\n$(document).ready(function () {\n\n    // add events to buttons\n    $('#preview').click(preview);\n    $('#confirm-data').click(setTableData);\n    $('#edit-data').click(editTableData);\n    $('#cancel-edit-data').click(cancelEditData);\n    $('#save').click(saveTable);\n    $('#exit').click(back);\n\n    function back(evt) {\n        window.location.replace(url_edit_dimension);\n    }\n\n    /*\n        Events from the DATA ENTRY PANEL\n     */\n\n    function setTableData(evt) {\n        handleNewData(function () {\n            if (current_settings) {\n                setupTablebuilderWithSettings(current_settings)\n            }\n            preview()\n        });\n        $('#data-panel').hide();\n        $('#edit-panel').show();\n    }\n\n    function editTableData(evt) {\n        current_data = $('#data_text_area').val();\n        current_settings = getTablePageSettings();\n        $('#data-panel').show();\n        $('#data_text_area').focus();\n        $('#edit-panel').hide();\n    }\n\n    function cancelEditData(evt) {\n        $('#data_text_area').val(current_data);\n        $('#data-panel').hide();\n        $('#edit-panel').show();\n    }\n\n\n    /*\n        Initialise the main editor after DATA ENTRY PANEL change\n    */\n\n    function handleNewData(on_success) {\n\n        // get the data\n        var tabbedData = $(\"#data_text_area\").val();\n\n        // set the DATA DISPLAY content\n        table_data = textToData(tabbedData);\n        if (table_data.length > 0) {\n            message = table_data.length - 1 + ' rows by ' + table_data[0].length + ' columns'\n        }\n        $('#data-description').html(message);\n\n        // update options in drop-downs\n        var headers = table_data[0];\n        populateTableOptions(headers);\n\n        // call the backend to do the presets heavy lifting\n        var ethnicity_data = getEthnicityValues(table_data);\n        $.ajax({\n            type: \"post\",\n            url: url_get_classifications,\n            dataType: 'json',\n            data: JSON.stringify({ 'data': ethnicity_data }),\n            contentType: 'application/json; charset=utf-8',\n            success: function (response) {\n                // upon heavy lifting complete\n\n                // populate the ethnicity presets from the response\n                presets = response['presets'];\n                populateEthnicityPresets(presets);\n\n                // show the presets (step 2) and table type (step 3) section\n                $('#ethnicity_settings_section').show();\n\n                if (getIsSimpleData(table_data)) {\n                    $('#simple_table_options').show();\n                    $('#complex_table_options').hide();\n                } else {\n                    $('#simple_table_options').hide();\n                    $('#complex_table_options').show();\n                }\n\n                // any further processing\n                if (on_success) {\n                    on_success();\n                }\n            },\n            failure: function () {\n                console.log('failed to get ethnicity classifications');\n            },\n            error: function (err) {\n                console.log(err);\n            }\n        });\n    }\n\n\n    /*\n        SETUP\n    */\n\n    function populateTableOptions(headers) {\n        var listWithNone = dropdownHtmlWithDefault(headers, 'none', '[None]');\n        var listWithSquareNone = dropdownHtmlWithDefault(headers, '[None]', '[None]');\n        var listWithRequired = dropdownHtmlWithDefault(headers, unselectedOptionString, unselectedOptionString);\n\n        $('#ethnicity-as-row__columns').html(listWithRequired);\n        $('#ethnicity-as-row__column-order').html(listWithRequired);\n        $('#ethnicity-as-column__rows').html(listWithRequired);\n        $('#ethnicity-as-column__row-order').html(listWithRequired);\n\n        $('#table_column_1').html(listWithRequired);\n        $('#table_column_2').html(listWithNone);\n        $('#table_column_3').html(listWithNone);\n        $('#table_column_4').html(listWithNone);\n        $('#table_column_5').html(listWithNone);\n\n        $('#index_column_name').val('Ethnicity')\n    }\n\n    function selectDropdown(dropdown_id, value) {\n        var dropdown = document.getElementById(dropdown_id);\n        for (var i = 0; i < dropdown.length; i++) {\n            dropdown[i].selected = (dropdown[i].value === value)\n        }\n    }\n\n\n    function populateEthnicityPresets(presets) {\n        var html = '';\n        for (var p in presets) {\n            var preset = presets[p]['preset']['name'];\n            var code = presets[p]['preset']['code'];\n            if (p === 0) {\n                html = html + '<option value=\"' + code + '\" selected>' + preset + '</option>';\n            } else {\n                html = html + '<option value=\"' + code + '\" >' + preset + '</option>';\n            }\n        }\n        $('#ethnicity_settings').html(html);\n    }\n\n    function strippedHeaders(headers) {\n        var exclude = [];\n        var stripped = [];\n        for (h in headers) {\n            var header = headers[h];\n            if (exclude.indexOf(header) < 0) {\n                stripped.push(header);\n            }\n        }\n        return stripped;\n    }\n\n    function dropdownHtmlWithDefault(headers, defaultValue, defaultLabel) {\n        var html = '<option value=\"' + defaultValue + '\" selected>' + defaultLabel + '</option>';\n        var stripped = strippedHeaders(headers);\n        for (var h in stripped) {\n            var header = stripped[h];\n            html = html + '<option value=\"' + header + '\">' + header + '</option>';\n        }\n        return html;\n    }\n\n    /*\n        PREVIEW\n        Render the table as a preview using drawTable() from rd-graph.js\n        (this the exact same method that is used front-end)\n    */\n\n    function dataColumnChange(evt) {\n        var selected_column_name = $('#' + this.id + ' option:selected').val();\n\n        var new_column_name = (selected_column_name === unselectedOptionString) ? \"\" : selected_column_name;\n\n        $('#' + this.id + '_name').val(new_column_name);\n\n        preview(evt);\n    }\n\n    function preview(evt) {\n        var tips = getTips();\n        if (tips.length > 0) {\n            displayTips(tips);\n        } else {\n            displayTable();\n        }\n    }\n\n    function displayTips(tips) {\n        $('#tips_container').show();\n        $('#preview_container').hide();\n\n        $(\"#notes_container\").hide();\n        $(\"#errors_container\").hide();\n\n        $(\"#tip-list\").children().hide();\n\n        if (tipsOfType(tips, MISSING_FIELD_ERROR).length > 0) {\n            $(\"#notes_container\").show();\n        }\n        if (tipsOfType(tips, ETHNICITY_ERROR).length > 0) {\n            $(\"#errors_container\").show();\n            $('#tip__ethnicity-column').show();\n        }\n        if (tipsOfType(tips, RECTANGLE_ERROR).length > 0) {\n            $(\"#errors_container\").show();\n            $('#tip__rectangular-data').show();\n        }\n        if (tipsOfType(tips, DATA_ERROR_DUPLICATION).length > 0) {\n            $(\"#errors_container\").show();\n            $('#tip__duplicate-data').show();\n        }\n        if (tipsOfType(tips, DATA_ERROR_MISSING_DATA).length > 0) {\n            $(\"#errors_container\").show();\n            $('#tip__missing-data').show();\n        }\n\n    }\n\n    function tipsOfType(tips, errorType) {\n        return _.filter(tips, function (tip) {\n            return tip.errorType === errorType;\n        })\n    }\n\n    function displayTable() {\n        $('#tips_container').hide();\n        $('#preview_container').show();\n\n        var tableObject = innerBuildTableObject();\n        if (tableObject) {\n            if (tableObject.title && tableObject.title.text) {\n                $('#title-container').html('<h3 class=\"heading-small\">' + tableObject.title.text + '</h3>');\n            }\n            tableObject.title = '';\n            drawTable('container', tableObject);\n\n            $('#save_section').show();\n        }\n        document.getElementById('table_title').dispatchEvent(new Event(\"input\"));\n    }\n\n    /*\n        SAVE\n        Save the table by building a tableObject and bundling up all the setting then sending it to the backend\n    */\n\n    function saveTable(evt) {\n\n        $('#save').attr('disabled', 'disabled');\n\n        var tableObject = innerBuildTableObject();\n        var tableBuilderSettings = getTablePageSettings();\n        if (tableObject) {\n            postTableObject(tableObject, tableBuilderSettings);\n        }\n    }\n\n    function postTableObject(tableObject, src) {\n        if (tableObject) {\n            // adjust for null data\n            $.each(tableObject.series, function () {\n                for (var i = 0; i < this.data.length; i++) {\n                    if (isNaN(this.data[i].y)) {\n                        this.data[i].y = 0;\n                    }\n                }\n            });\n\n            $.ajax({\n                type: \"POST\",\n                url: url_save_table_to_page,\n                dataType: 'json',\n                data: JSON.stringify({ 'tableObject': tableObject, 'source': src, 'tableBuilderVersion': 2 }),\n                contentType: 'application/json',\n                success: function () {\n                    location.reload();\n                }\n            });\n        }\n    }\n\n    function getTablePageSettings() {\n        // get the data\n        var tabbedData = $(\"#data_text_area\").val();\n        return {\n            'data': textToData(tabbedData),\n            'preset': getPresetCode(),\n            'tableOptions': getTableTypeOptions(),\n            'tableValues': getTableValues(),\n            'version': '2.0'\n        }\n    }\n\n    function getTableTypeOptions() {\n        if (getIsSimpleData(table_data)) {\n            return {};\n        }\n        else {\n            var dataStyle = $('#complex-table__data-style').val();\n\n            var selection = dataStyle === 'ethnicity_as_row' ? $('#ethnicity-as-row__columns').val() : $('#ethnicity-as-column__rows').val();\n            var order = dataStyle === 'ethnicity_as_row' ? $('#ethnicity-as-row__column-order').val() : $('#ethnicity-as-column__row-order').val();\n\n            return {\n                'data_style': $('#complex-table__data-style').val(),\n                'selection': selection,\n                'order': order,\n            }\n        }\n    }\n\n    function getTableValues() {\n        return {\n            'table_title': $('#table_title').val(),\n            'table_column_1': $('#table_column_1').val(),\n            'table_column_1_name': $('#table_column_1_name').val(),\n            'table_column_2': $('#table_column_2').val(),\n            'table_column_2_name': $('#table_column_2_name').val(),\n            'table_column_3': $('#table_column_3').val(),\n            'table_column_3_name': $('#table_column_3_name').val(),\n            'table_column_4': $('#table_column_4').val(),\n            'table_column_4_name': $('#table_column_4_name').val(),\n            'table_column_5': $('#table_column_5').val(),\n            'table_column_5_name': $('#table_column_5_name').val(),\n            'table_index_column_name': $('#index_column_name').val(),\n        }\n    }\n\n    function getPresetCode() {\n        return $('#ethnicity_settings').val();\n    }\n    \n    function notNullOrNone(val) {  // We ingest some weird/inconsistent data from table builder v1 so this check helps prevent errors.\n        return val !== null & val != 'none'\n    }\n\n    function buildTableColumns() {\n        var columns = []\n        $('.column_option_picker').each(function (idx) { if (notNullOrNone($(this).val())) { columns.push($(this).val()); }; });\n        return columns\n    }\n\n    function buildEthnicityByRowColumns() {\n        var columns = [$('#ethnicity-as-row__columns').val()]\n        if (notNullOrNone($('#ethnicity-as-row__column-order').val())) {\n            columns.push($('#ethnicity-as-row__column-order').val())\n        }\n        return columns\n    }\n\n    function buildEthnicityByColumnColumns() {\n        var columns = [$('#ethnicity-as-column__rows').val()]\n        if (notNullOrNone($('#ethnicity-as-column__row-order').val())) {\n            columns.push($('#ethnicity-as-column__row-order').val())\n        }\n        return columns\n    }\n\n    // This function examines the HTML page and returns an array of headings for columns\n    // being used.\n    //\n    // Note that a column may have no header, and that this is represented by a empty string,\n    // eg ['']. This is important as the length of this array is also used to determine the\n    // number of columns in use.\n    function buildTableColumnNames() {\n        var columns = []\n\n        $('.column_option_picker').each(function(index) {\n\n            if($(this).val() !== 'none') {\n                columns.push($('.column_option_picker_name')[index].value)\n            }\n\n        })\n\n        return columns\n    }\n\n\n    function innerBuildTableObject() {\n        var tableObject = null;\n        var preset = getPresetWithCode($('#ethnicity_settings').val());\n        if (getIsSimpleData(table_data)) {\n            tableObject = buildTableObject(buildDataWithPreset(preset, table_data, buildTableColumns()),\n                $('#table_title').val(),\n                '',\n                '',\n                'Ethnicity',\n                'Ethnicity-parent',\n                '[None]',\n                'Ethnicity-order',\n                buildTableColumns(),\n                buildTableColumnNames(),\n                $('#index_column_name').val(),\n                '[None]');\n        } else {\n            if ($('#complex-table__data-style').val() === 'ethnicity_as_row') {\n                var all_table_columns = buildTableColumns().concat(buildEthnicityByRowColumns());\n                tableObject = buildTableObject(buildDataWithPreset(preset, table_data, all_table_columns),\n                    $('#table_title').val(),\n                    '',\n                    '',\n                    'Ethnicity',\n                    'Ethnicity-parent',\n                    $('#ethnicity-as-row__columns').val(),\n                    'Ethnicity-order',\n                    buildTableColumns(),\n                    buildTableColumnNames(),\n                    $('#index_column_name').val(),\n                    $('#ethnicity-as-row__column-order').val());\n            } else {\n                var all_table_columns = buildTableColumns().concat(buildEthnicityByColumnColumns());\n                tableObject = buildTableObject(buildDataWithPreset(preset, table_data, all_table_columns),\n                    $('#table_title').val(),\n                    '',\n                    '',\n                    $('#ethnicity-as-column__rows').val(),\n                    '',\n                    'Ethnicity',\n                    $('#ethnicity-as-column__row-order').val(),\n                    buildTableColumns(),\n                    buildTableColumnNames(),\n                    $('#index_column_name').val(),\n                    'Ethnicity-order');\n            }\n        }\n        return tableObject;\n    }\n\n    function buildDataWithPreset(preset, data, columns) {\n        var rows = [['Ethnicity', 'Ethnicity-parent', 'Ethnicity-order'].concat(columns)];\n\n        var body = _.clone(data);\n        var headers = body.shift();\n        var lowHeaders = _.map(headers, function (header) {\n            return header.toLowerCase().trim()\n        });\n        var indices = _.map(columns, function (col) {\n            var lowCol = col.toLowerCase().trim();\n            return lowHeaders.indexOf(lowCol);\n        });\n\n        for (var r in preset['data']) {\n            var item = preset['data'][r];\n            var row = [item['preset'], item['parent'], item['order']];\n            row = row.concat(_.map(indices, function (index) {\n                return index === -1 ? '' : body[r][index]\n            }));\n            rows = rows.concat([row])\n        }\n\n        return rows;\n    }\n\n    function getPresetWithCode(code) {\n        for (p in presets) {\n            if (presets[p].preset.code === code) {\n                return presets[p];\n            }\n        }\n        return null;\n    }\n\n\n    /*\n        EVENT HANDLERS\n    */\n    // Switch TABLE_OPTIONS panels\n    $('#ethnicity_settings').change(preview);\n\n    function selectPreset(preset) {\n        $('#ethnicity_settings').val(preset);\n    }\n\n    /*\n        TABLE PANEL events\n    */\n\n    // COMPLEX TABLE events\n    $('#complex-table__data-style').change(function () {\n        selectDataStyle();\n        modifyIndexColumnNameAndPreview();\n    });\n    $('#ethnicity-as-row__columns').change(function () {\n        setColumnOrdering();\n        modifyIndexColumnNameAndPreview();\n    });\n    $('#ethnicity-as-row__column-order').change(preview);\n    $('#ethnicity-as-column__rows').change(function () {\n        setRowOrdering();\n        modifyIndexColumnNameAndPreview();\n    });\n    $('#ethnicity-as-column__row-order').change(preview);\n    \n    $('#grouped-bar__bar_order').change(preview);\n    $('#grouped-bar__groups_order').change(preview);\n\n    $('#table_column_1_name').change(preview);\n    $('#table_column_1').change(dataColumnChange);\n    $('#table_column_2_name').change(preview);\n    $('#table_column_2').change(dataColumnChange);\n    $('#table_column_3_name').change(preview);\n    $('#table_column_3').change(dataColumnChange);\n    $('#table_column_4_name').change(preview);\n    $('#table_column_4').change(dataColumnChange);\n    $('#table_column_5_name').change(preview);\n    $('#table_column_5').change(dataColumnChange);\n\n    $('#index_column_name').change(preview);\n\n    function selectDataStyle() {\n        if ($('#complex-table__data-style').val() === \"ethnicity_as_row\") {\n            $('#complex-table__ethnicity-is-row').show();\n            $('#complex-table__ethnicity-is-column').hide();\n        } else {\n            $('#complex-table__ethnicity-is-row').hide();\n            $('#complex-table__ethnicity-is-column').show();\n        }\n    }\n\n\n    // Show-hide NUMBER-FORMAT__OTHER panel\n    $('#number_format').change(function () {\n        if ($(this).val() === 'other') {\n            $('#other_number_format').show()\n        } else {\n            $('#other_number_format').hide()\n        }\n        preview();\n    });\n\n    function modifyIndexColumnNameAndPreview(evt) {\n        var indexColumnName = $('#index_column_name').val()\n        var headers = table_data[0]\n\n        // If index_column_name has not been modified change if possible\n        if(headers.indexOf(indexColumnName) >= 0 || indexColumnName === unselectedOptionString) {\n            if ($('#complex-table__data-style').val() === \"ethnicity_as_column\") {\n                $('#index_column_name').val($('#ethnicity-as-column__rows').val())\n            } else {\n                $('#index_column_name').val('Ethnicity')\n            }\n        }\n\n        preview(evt)\n    }\n    \n    function setRowOrdering(evt) {\n        $('#ethnicity-as-column__row-order').val($('#ethnicity-as-column__rows').val())\n    }\n    \n    function setColumnOrdering(evt) {\n        $('#ethnicity-as-row__column-order').val($('#ethnicity-as-row__columns').val())\n    }\n\n    function initialiseForm() {\n        if (settings.data) {\n            var data_text = _.map(settings.data, function (d) {\n                return d.join('\\t')\n            }).join('\\n');\n            $('#data_text_area').val(data_text);\n\n            handleNewData(function () {\n                $('#data-panel').hide();\n                $('#edit-panel').show();\n                setupTablebuilderWithSettings(settings);\n                preview()\n            })\n        }\n    };\n\n    function setupTablebuilderWithSettings(settings) {\n        if (settings.preset) {\n            selectPreset(settings.preset);\n        }\n\n        $('#table_title').val(settings.tableValues.table_title);\n        \n        $('#complex-table__data-style').val(settings.tableOptions.data_style);\n        \n        /*\n        If a table has no explicit row ordering, there are some circumstances in which the live table can have data cells\n        transposed - resulting in an inaccurate table. We will prevent this by enforcing an explicit row order. If one\n        hasn't been provided previously, we'll assume the table should be sorted (alphabetically) by the current\n        row/column selection.\n        https://trello.com/c/mrtsskDU/1103 \n        */\n        if (settings.tableOptions.order == NONE_VALUE) {\n            settings.tableOptions.order = settings.tableOptions.selection\n        }\n\n        if (settings.tableOptions.data_style === 'ethnicity_as_row') {\n            $('#ethnicity-as-row__columns').val(settings.tableOptions.selection);\n            $('#ethnicity-as-row__column-order').val(settings.tableOptions.order);\n        } else {\n            $('#ethnicity-as-column__rows').val(settings.tableOptions.selection);\n            $('#ethnicity-as-column__row-order').val(settings.tableOptions.order);\n        }\n\n        selectDataStyle();\n\n        $('#table_column_1').val(settings.tableValues.table_column_1);\n        $('#table_column_1_name').val(settings.tableValues.table_column_1_name);\n        $('#table_column_2').val(settings.tableValues.table_column_2);\n        $('#table_column_2_name').val(settings.tableValues.table_column_2_name);\n        $('#table_column_3').val(settings.tableValues.table_column_3);\n        $('#table_column_3_name').val(settings.tableValues.table_column_3_name);\n        $('#table_column_4').val(settings.tableValues.table_column_4);\n        $('#table_column_4_name').val(settings.tableValues.table_column_4_name);\n        $('#table_column_5').val(settings.tableValues.table_column_5);\n        $('#table_column_5_name').val(settings.tableValues.table_column_5_name);\n\n        $('#index_column_name').val(settings.tableValues.table_index_column_name);\n    }\n\n    initialiseForm();\n});\n\n/*\n Custom number format is far more complicated than it needs to be\n However it is viable to just use this function to grab it until it becomes a problem\n*/\n\nfunction getNumberFormat() {\n    var format = $('#number_format').val();\n    if (format === 'none') {\n        return { 'multiplier': 1.0, 'prefix': '', 'suffix': '', 'min': '', 'max': '' }\n    } else if (format === 'percent') {\n        return { 'multiplier': 1.0, 'prefix': '', 'suffix': '%', 'min': 0.0, 'max': 100.0 }\n    } else if (format === 'other') {\n        return {\n            'multiplier': 1.0,\n            'prefix': $('#number_format_prefix').val(),\n            'suffix': $('#number_format_suffix').val(),\n            'min': $('#number_format_min').val(),\n            'max': $('#number_format_max').val()\n        }\n    }\n}\n\nfunction getTips() {\n\n    // 1. Basics\n    var basicErrors = validateTable(table_data);\n    if (basicErrors.length !== 0) {\n        return basicErrors;\n    }\n\n    // 2. Required fields\n    var missingFields = checkRequiredFields();\n    if (missingFields.length !== 0) {\n        return missingFields\n    }\n\n    // 3. Data errors\n    var ethnicityColumn = getEthnicityColumnHeader();\n    var secondaryColumn = getSecondaryColumnHeader();\n\n    var dataErrors = validateData(table_data, ethnicityColumn, secondaryColumn);\n    return dataErrors;\n}\n\nvar MISSING_FIELD_ERROR = 'Missing field error';\n\nfunction checkRequiredFields() {\n    if (getIsSimpleData(table_data) === false) {\n        if ($('#complex-table__data-style').val() === 'ethnicity_as_row') {\n            if ($('#ethnicity-as-row__columns').val() === unselectedOptionString) {\n                return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'ethnicity-as-row__columns' }]\n            };\n            if ($('#ethnicity-as-row__column-order').val() === unselectedOptionString) {\n                return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'ethnicity-as-row__column-order' }]\n            };\n        } else {\n            if ($('#ethnicity-as-column__rows').val() === unselectedOptionString) {\n                return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'ethnicity-as-column__rows' }]\n            };\n            if ($('#ethnicity-as-column__row-order').val() === unselectedOptionString) {\n                return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'ethnicity-as-column__row-order' }]\n            };\n        }\n    }\n\n    if ($('#table_column_1').val() === unselectedOptionString) {\n        return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'table_column_1' }]\n    }\n\n    return [];\n}\n\nfunction getEthnicityColumnHeader() {\n    for (var i in table_data[0]) {\n        var lower = table_data[0][i].toLowerCase();\n        if (lower.search('ethnic') >= 0) {\n            return table_data[0][i]\n        }\n    }\n    return null\n}\n\nfunction getSecondaryColumnHeader() {\n    if (getIsSimpleData(table_data)) {\n        return null;\n    } else {\n        if ($('#complex-table__data-style').val() === 'ethnicity_as_row') {\n            return $('#ethnicity-as-row__columns').val()\n        } else {\n            return $('#ethnicity-as-column__rows').val()\n        }\n    }\n}\n\n/*\n    Helper for selenium tests\n*/\n\nfunction pasteJson(json) {\n    var data_text_area = document.getElementById('data_text_area');\n\n    data_text_area.value = _.map(json, function (row) {\n        return row.join('\\t');\n    }).join('\\n');\n    data_text_area.dispatchEvent(new Event(\"keyup\"));\n}\n","/**\n * Created by Tom.Ridd on 25/02/2018.\n\n rd-builder provides common functions that are required by both the chartbuilder and tablebuilder screens\n\n specifically\n - validate that data does not have multiple rows that correspond to a single data point\n - validate that data has coverage of every data point\n - provide useful error messages when data is invalid\n\n */\n\n// Forms of data error\nvar DATA_ERROR_DUPLICATION = \"duplication\";\nvar DATA_ERROR_MISSING_DATA = \"missing data\";\nvar DATA_ERROR_SETTINGS_ERROR = \"settings\";\nvar DATA_ERROR_COMPLEX_DATA = \"complex data\";\n\n\n// ---------------------------------------------------------------------------\n// PUBLIC\n// ---------------------------------------------------------------------------\n\n\nfunction validateData(data, categoryColumn, groupColumn) {\n    var errors = [];\n    var dataRows = _.clone(data);\n    var headerRow = dataRows.shift();\n    var lowerHeaderRow = _.map(headerRow, function (m) {\n        return m.trim().toLowerCase()\n    })\n\n    var categoryIndex = index_of_column_named(lowerHeaderRow, categoryColumn);\n    if (categoryIndex === null) {\n        return [{\n            'error': 'could not find data column',\n            'column': categoryColumn,\n            'errorType': DATA_ERROR_SETTINGS_ERROR\n        }]\n    }\n    if (groupColumn !== null) {\n        var groupIndex = index_of_column_named(lowerHeaderRow, groupColumn);\n        if (groupIndex === null) {\n            return [{\n                'error': 'could not find data column',\n                'column': groupColumn,\n                'errorType': DATA_ERROR_SETTINGS_ERROR\n            }]\n        } else {\n            return validateGroupedData(dataRows, categoryIndex, groupIndex, categoryColumn, groupColumn)\n        }\n    } else {\n        return validateSimpleData(dataRows, categoryIndex, categoryColumn)\n    }\n}\n\nfunction validateDataDuplicatesOnly(data, categoryColumn, groupColumn) {\n    var errors = [];\n    var dataRows = _.clone(data);\n    var headerRow = dataRows.shift();\n    var lowerHeaderRow = _.map(headerRow, function (m) {\n        return m.trim().toLowerCase();\n    });\n    var categoryIndex = index_of_column_named(lowerHeaderRow, categoryColumn);\n\n    if (categoryIndex === null) {\n        return [{'error': 'could not find data column', 'column': categoryColumn}]\n    }\n    if (groupColumn !== null) {\n        var groupIndex = index_of_column_named(lowerHeaderRow, groupColumn);\n\n        if (groupIndex === null) {\n            return [{'error': 'could not find data column', 'column': groupColumn}]\n        } else {\n            return validateGroupedDataDuplicates(dataRows, categoryIndex, groupIndex)\n        }\n    } else {\n        return validateSimpleData(dataRows, categoryIndex)\n    }\n}\n\n\n// ---------------------------------------------------------------------------\n// SIMPLE DATA (not cross tab, multiseries, panel, etc...)\n// ---------------------------------------------------------------------------\n\nfunction validateSimpleData(data, categoryIndex, categoryColumn) {\n    var duplicateErrors = [];\n\n    var uniqueCategories = _.uniq(_.map(data, function (row) {\n        return row[categoryIndex];\n    }));\n\n    if (uniqueCategories.length === data.length) {\n        return [];\n    } else if (data.length % uniqueCategories.length === 0) {\n        return [{'errorType': DATA_ERROR_COMPLEX_DATA}]\n    } else {\n        var dict = {};\n        _.forEach(data, function (row) {\n            var value = row[categoryIndex];\n            if (value in dict) {\n                // wrap in if to make sure we don't add multiple error messages\n                if (dict[value] !== 'added to errors') {\n                    duplicateErrors.push({\n                        'error': 'duplicate data',\n                        'category': value,\n                        'categoryColumn': categoryColumn,\n                        'errorType': DATA_ERROR_DUPLICATION\n                    });\n                    dict[value] = 'added to errors'\n                }\n            } else {\n                dict[value] = 'value in dict'\n            }\n        });\n\n        return duplicateErrors;\n    }\n\n}\n\n\n// ---------------------------------------------------------------------------\n// GROUPED DATA VALIDATION (cross tab, multiseries, panel, etc...)\n// ---------------------------------------------------------------------------\n\nfunction validateGroupedData(data, categoryIndex, groupIndex, categoryColumn, groupColumn) {\n    var completeErrors = validateGroupedDataCompleteness(data, categoryIndex, groupIndex, categoryColumn, groupColumn);\n    var duplicateErrors = validateGroupedDataDuplicates(data, categoryIndex, groupIndex, categoryColumn, groupColumn);\n\n    return completeErrors.concat(duplicateErrors);\n}\n\nfunction validateGroupedDataCompleteness(data, categoryIndex, groupIndex, categoryColumn, groupColumn) {\n    var rowItems = _.uniq(_.map(data, function (item) {\n        return item[categoryIndex];\n    }));\n    var columnItems = _.uniq(_.map(data, function (item) {\n        return item[groupIndex];\n    }));\n    var errors = [];\n\n    var mapOfPairs = _.object(_.map(rowItems, function (item) {\n        return [item, _.map(_.filter(data, function (row) {\n            return row[categoryIndex] === item\n        }), function (row) {\n            return row[groupIndex];\n        })];\n    }));\n\n    _.forEach(rowItems, function (row) {\n        _.forEach(columnItems, function (col) {\n            if (!_.contains(mapOfPairs[row], col)) {\n                errors.push({\n                    'error': 'missing data',\n                    'category': row,\n                    'group': col,\n                    'categoryColumn': categoryColumn,\n                    'groupColumn': groupColumn,\n                    'errorType': DATA_ERROR_MISSING_DATA\n                })\n            }\n        })\n    });\n\n    return errors\n}\n\nfunction validateGroupedDataDuplicates(data, categoryIndex, groupIndex, categoryColumn, groupColumn) {\n    var errors = [];\n\n    var groupValuesUsedByCategory = {};\n    _.forEach(data, function (row) {\n        var categoryValue = row[categoryIndex];\n        var groupValue = row[groupIndex];\n        if (categoryValue in groupValuesUsedByCategory) {\n            if (groupValue in groupValuesUsedByCategory[categoryValue]) {\n                errors.push({\n                    'error': 'duplicate data',\n                    'category': row[categoryIndex],\n                    'group': row[groupIndex],\n                    'categoryColumn': categoryColumn,\n                    'groupColumn': groupColumn,\n                    'errorType': DATA_ERROR_DUPLICATION\n                })\n            } else {\n                groupValuesUsedByCategory[categoryValue][groupValue] = 1;\n            }\n        } else {\n            groupValuesUsedByCategory[categoryValue] = {};\n            groupValuesUsedByCategory[categoryValue][groupValue] = 1;\n        }\n    });\n\n    return errors;\n}\n\n\n// ---------------------------------------------------------------------------\n// ERROR REPORTING\n// ---------------------------------------------------------------------------\n\nfunction errorDescription(error) {\n    switch (error.errorType) {\n        case DATA_ERROR_SETTINGS_ERROR:\n            return \"Column '\" + error.column + \"' not found\";\n\n        case DATA_ERROR_MISSING_DATA:\n            return \"The data is missing a row for \" + error.categoryColumn + \" = '\" + error.category + \"' and \" + error.groupColumn + \" = '\" + error.group + \"'\"\n\n        case DATA_ERROR_DUPLICATION:\n            if ('group' in error) {\n                return \"The data has duplicate entries for the rows with \" + error.categoryColumn + \" = '\" + error.category + \"' and \" + error.groupColumn + \" = '\" + error.group + \"'\"\n            } else {\n                return \"The data has duplicate entries for \" + error.categoryColumn + \" = '\" + error.category + \"'\"\n            }\n    }\n}\n\nfunction errorResolutionHint(error) {\n    switch (error.errorType) {\n        case DATA_ERROR_SETTINGS_ERROR:\n            return \"Make sure the column values selected for this table are valid\";\n\n        case DATA_ERROR_MISSING_DATA:\n            return \"Add rows to your source spreadsheet and try again\";\n\n        case DATA_ERROR_DUPLICATION:\n            return \"Remove data rows in your source spreadsheet and try again\"\n\n    }\n}\n\n\n// If we're running under Node - required for testing\nif (typeof exports !== 'undefined') {\n    var _ = require('../charts/vendor/underscore-min');\n    var dataTools = require('../charts/rd-data-tools');\n    var index_of_column_named = dataTools.index_of_column_named;\n\n    exports.validateSimpleData = validateSimpleData;\n    exports.validateGroupedData = validateGroupedData;\n    exports.validateData = validateData;\n    exports.DATA_ERROR_DUPLICATION = DATA_ERROR_DUPLICATION;\n    exports.DATA_ERROR_MISSING_DATA = DATA_ERROR_MISSING_DATA;\n    exports.DATA_ERROR_COMPLEX_DATA = DATA_ERROR_COMPLEX_DATA;\n    exports.DATA_ERROR_SETTINGS_ERROR = DATA_ERROR_SETTINGS_ERROR;\n}\n","/**\n * Created by Tom.Ridd on 08/05/2017.\n */\n\nfunction filterData(data, filter) {\n\n    var indexFilter = textFilterToIndexFilter(data, filter);\n    return applyFilter(data, indexFilter);\n}\n\nfunction numerateColumns(data, columns) {\n    _.forEach(columns, function (column) {\n        numerateColumn(data, column);\n    });\n}\n\nfunction numerateColumn(data, column) {\n    var index = data[0].indexOf(column);\n    for (row = 1; row < data.length; row++) {\n        row[index] = row[index].toFloat();\n    }\n}\n\nfunction textFilterToIndexFilter(data, textFilter) {\n    var indexFilter = {};\n    var headers = data[0];\n\n    for (var key in textFilter) {\n        var i = headers.indexOf(key);\n        indexFilter[i] = textFilter[key];\n    }\n\n    return indexFilter;\n}\n\nfunction applyFilter(data, indexFilter) {\n    var data2 = _.clone(data);\n\n    var headerRow = data2.shift();\n    var filteredRows = [];\n\n    for (var d in data2) {\n        var datum = data2[d];\n        if (itemPassesFilter(datum, indexFilter)) {\n            filteredRows.push(datum);\n        }\n    }\n\n    filteredRows.unshift(headerRow);\n    return filteredRows;\n}\n\nfunction itemPassesFilter(item, filter) {\n    if (item[0] === '') { return false; }\n\n    for (var index in filter) {\n        if (item[index] !== filter[index]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction formatNumber(numStr) {\n    var number = numStr.replaceAll(\"%\", \"\");\n    var formatted = (number * 1).toLocaleString(\"en-uk\");\n    if (formatted === \"NaN\") {\n        return number;\n    } else {\n        return formatted;\n    }\n}\n\n\n\nfunction formatNumberWithDecimalPlaces(value, dp) {\n\n    var number = \"\" + value;\n\n    // Only do formatting if the string contains some digits\n    if (number.match(/\\d/)) {\n        try {\n            number = number.replace(\"%\", \"\");\n        } finally {\n            var formatted = (number * 1).toLocaleString(\"en-uk\", { minimumFractionDigits: dp, maximumFractionDigits: dp });\n            if (formatted !== \"NaN\") {\n                return formatted;\n            }\n        }\n    }\n    return number;\n}\n\nfunction seriesDecimalPlaces(series) {\n    var maxDp = 0;\n    for (var s in series) {\n        var dp = decimalPlaces(series[s]);\n        if (dp > maxDp) {\n            maxDp = dp;\n        }\n    }\n    return maxDp;\n}\n\nfunction seriesCouldBeYear(series) {\n    for (var s in series) {\n        var val = series[s];\n        if (decimalPlaces(val) > 0 || val < 1950 || val > 2050) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction decimalPlaces(valueStr) {\n\n    // We only want to match digits following the first\n    // full stop, ignoring any trailing zeros.\n    var decimalPlacesRegex = /\\.(\\d*[1-9])/;\n\n    var numStr = valueStr ? String(valueStr) : \"\";\n\n    var decimalFigureMatch = numStr.match(decimalPlacesRegex);\n\n    if (decimalFigureMatch) {\n        return decimalFigureMatch[1].length\n    } else {\n        return 0\n    }\n}\n\nfunction uniqueDataInColumn(data, index) {\n    var values = _.map(data.slice(start = 0), function (item) {\n        return item[index];\n    });\n    return _.uniq(values).sort();\n}\n\nfunction uniqueDataInColumnOrdered(data, index, order_column) {\n    // Sort by the specified column\n    var sorted = _.sortBy(data, function (item) {\n        return item[order_column];\n    });\n    // Pull out unique items\n    var values = _.map(sorted, function (item) { return item[index]; });\n    return _.uniq(values);\n}\n\nfunction uniqueDataInColumnMaintainOrder(data, index) {\n    var values = [];\n    var used = {};\n    _.forEach(data, function (item) {\n        if (!(item[index] in used)) {\n            values.push(item[index]);\n            used[item[index]] = 1;\n        }\n    });\n    return values;\n}\n\n\nfunction textToData(textData) {\n    var cleanData = textData.trim();\n    if (cleanData.search('\\t') >= 0) {\n        return _.map(cleanData.split('\\n'), function (line) { return line.split('\\t') });\n    } else {\n        return _.map(cleanData.split('\\n'), function (line) { return line.split('|') });\n    }\n}\n\nvar ETHNICITY_ERROR = 'Ethnicity column error';\nvar VALUE_ERROR = 'Value column error';\nvar RECTANGLE_ERROR = 'Data table error';\n\nfunction validateChart(data) {\n    var errors = [];\n    if (hasHeader('ethnic', data) === false) { errors.push({ 'errorType': ETHNICITY_ERROR }); }\n    if (hasHeader('value', data) === false) { errors.push({ 'errorType': VALUE_ERROR }); }\n    if (isRectangular(data) === false) { errors.push({ 'errorType': RECTANGLE_ERROR }); }\n\n    return errors;\n}\n\nfunction validateTable(data) {\n    var errors = [];\n    if (hasHeader('ethnic', data) === false) { errors.push({ 'errorType': ETHNICITY_ERROR }); }\n    return errors;\n}\n\nfunction hasHeader(header, data) {\n    var headers = data[0];\n    var found = false;\n    _.forEach(headers, function (str) {\n        var lower = str.toLowerCase();\n        if (lower.search(header) >= 0) { found = true; }\n    });\n    return found;\n}\n\nfunction isRectangular(data) {\n    var size = data[0].length;\n    for (var i = 1; i < data.length; i++) {\n        if (data[i].length !== size) { return false; }\n    }\n    return true;\n}\n\nfunction nonNumericData(data, columns) {\n    var nonNumeric = [];\n    var values = data.slice(1);\n\n    _.forEach(values, function (row) {\n        _.forEach(columns, function (column) {\n            var item = row[column];\n            if (isNaN(item)) {\n                nonNumeric.push(item);\n            }\n        });\n    });\n    return nonNumeric;\n}\n\nfunction index_of_column_named(headers, column) {\n    if (!column || column === '') {\n        return null\n    } else {\n        var index = headers.indexOf(column.trim().toLowerCase());\n        if (index === -1) {\n            return null;\n        } else {\n            return index;\n        }\n    }\n}\n\n// If we're running under Node - required for testing\nif (typeof exports !== 'undefined') {\n    var _ = require('./vendor/underscore-min');\n\n    exports.hasHeader = hasHeader;\n    exports.decimalPlaces = decimalPlaces;\n    exports.seriesDecimalPlaces = seriesDecimalPlaces;\n    exports.seriesCouldBeYear = seriesCouldBeYear;\n    exports.formatNumberWithDecimalPlaces = formatNumberWithDecimalPlaces;\n\n    exports.uniqueDataInColumn = uniqueDataInColumn;\n    exports.uniqueDataInColumnOrdered = uniqueDataInColumnOrdered;\n    exports.uniqueDataInColumnMaintainOrder = uniqueDataInColumnMaintainOrder;\n\n    exports.validateChart = validateChart;\n    exports.textToData = textToData;\n\n    exports.nonNumericData = nonNumericData;\n\n    exports.index_of_column_named = index_of_column_named;\n\n    exports.ETHNICITY_ERROR = ETHNICITY_ERROR;\n    exports.VALUE_ERROR = VALUE_ERROR;\n}\n"],"sourceRoot":"../src"}