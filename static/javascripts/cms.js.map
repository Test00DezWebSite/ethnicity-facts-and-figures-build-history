{"version":3,"sources":["_auto_resize_textarea.js","_ethnicity_data_value_fields.js","_accessible_autocomplete.js","_govuk_government_organisations_autocomplete.js","_show_hide_control.js","_single_line_textareas.js","_uk_countries_select.js","rd-builder.js","rd-chart-objects.js","rd-table-objects.js","rd-table.js","sticky.js"],"names":["DynamicResizingTextarea","element","this","ethnicityDataValueFields","fieldset","ethnicityCategorisationSelect","broadValuesCheckbox","document","Function","prototype","bind","querySelector","addEventListener","updateBroadValuesCheckboxStatus","setup","selectedOptions","getAttribute","removeAttribute","checked","setAttribute","e","t","exports","module","define","amd","accessibleAutocomplete","o","n","r","i","l","call","m","c","d","Object","defineProperty","configurable","enumerable","get","__esModule","default","hasOwnProperty","p","s","u","L","arguments","length","D","push","children","pop","String","nodeName","attributes","key","A","vnode","__d","V","debounceRendering","setTimeout","N","__n","toLowerCase","a","defaultProps","parentNode","removeChild","style","cssText","T","test","innerHTML","__html","replace","substring","h","removeEventListener","__l","f","removeAttributeNS","setAttributeNS","className","type","event","R","afterMount","componentDidMount","_","q","P","ownerSVGElement","U","v","appendChild","splitText","_component","nodeValue","createTextNode","replaceChild","g","__preactattr_","_componentConstructor","__u","constructor","E","base","I","C","__b","S","createElementNS","createElement","firstChild","nextSibling","childNodes","y","b","w","O","x","__k","trim","insertBefore","dangerouslySetInnerHTML","ref","lastChild","previousSibling","B","name","render","k","splice","__x","__r","componentWillMount","componentWillReceiveProps","context","__c","__p","props","syncComponentUpdates","state","__s","shouldComponentUpdate","componentWillUpdate","getChildContext","M","unshift","componentDidUpdate","afterUpdate","__h","beforeUnmount","componentWillUnmount","setState","forceUpdate","j","cloneElement","slice","Component","rerender","options","Error","id","source","Array","isArray","filter","indexOf","assign","enhanceSelectElement","selectElement","value","preserveNullOptions","map","textContent","innerText","onConfirm","selected","defaultValue","selectedIndex","autoselect","display","navigator","userAgent","match","13","27","32","38","40","pointerEvents","elementReferences","focused","hovered","menuOpen","query","handleComponentBlur","handleKeyDown","handleUpArrow","handleDownArrow","handleEnter","handlePrintableKey","handleOptionBlur","handleOptionClick","handleOptionFocus","handleOptionMouseDown","handleOptionMouseEnter","handleOptionMouseOut","handleInputBlur","handleInputChange","handleInputFocus","pollInputElement","getDirectInputChanges","create","writable","setPrototypeOf","__proto__","clearTimeout","$pollInput","target","focus","setSelectionRange","hasAutoselect","templateInputValue","templates","inputValue","templateSuggestion","suggestion","confirmOnBlur","relatedTarget","minLength","showAllValues","handleInputClick","preventDefault","handleSpace","keyCode","cssNamespace","displayMenu","placeholder","required","tNoResults","tStatusQueryTooShort","tStatusNoResults","tStatusSelectedOption","tStatusResults","dropdownArrow","showNoOptionsFound","F","K","H","Q","$","G","substr","J","X","onKeyDown","role","aria-expanded","queryLength","minQueryLength","selectedOption","tQueryTooShort","tSelectedOption","tResults","readonly","tabIndex","aria-activedescendant","aria-owns","autoComplete","onClick","onBlur","onInput","onFocus","aria-selected","onFocusOut","onMouseDown","onMouseEnter","onMouseOut","apply","concat","bump","aria-atomic","aria-live","border","clip","height","marginBottom","marginRight","overflow","padding","position","whiteSpace","width","version","xmlns","focusable","stroke","fill","fill-rule","points","init","body","classList","add","rows","updateHeight","autoResizeElements","querySelectorAll","govukGovernmentOrganisationsAutocomplete","callback","orgs","option","select","dataAbbreviations","split","dataOtherNames","current_name","label","abbreviations","other_names","regexes","word","RegExp","organisation","allNames","matches","reduce","acc","regex","matchPosition","search","count","lowestPosition","sort","organisationA","organisationB","showHideControl","elementControlled","elementControlledId","elementName","getElementById","allRadioButtonsInSameGroup","inputChanged","expandOrCollapseTarget","expand","remove","NoNewlinesTextarea","ukCountriesSelect","countryInputs","ukInput","countryChanged","checkedCountries","ukChanged","ukInputLabel","ukInputContainer","legend","console","warn","parentElement","stripNewlines","noNewlineElements","DATA_ERROR_DUPLICATION","DATA_ERROR_MISSING_DATA","DATA_ERROR_SETTINGS_ERROR","DATA_ERROR_COMPLEX_DATA","validateData","data","categoryColumn","groupColumn","dataRows","clone","headerRow","shift","lowerHeaderRow","categoryIndex","index_of_column_named","error","column","errorType","groupIndex","validateGroupedData","validateSimpleData","validateDataDuplicatesOnly","validateGroupedDataDuplicates","duplicateErrors","uniqueCategories","uniq","row","dict","forEach","category","completeErrors","validateGroupedDataCompleteness","rowItems","item","columnItems","errors","mapOfPairs","object","col","contains","group","groupValuesUsedByCategory","categoryValue","groupValue","errorDescription","errorResolutionHint","require","dataTools","defaultParentColor","defaultChildColor","VERSION","BAR_CHART","LINE_CHART","COMPONENT_CHART","PANEL_BAR_CHART","PANEL_LINE_CHART","buildChartObject","chart_type","value_column","category_column","secondary_column","parent_column","category_order_column","secondary_order_column","chart_title","x_axis_label","y_axis_label","number_format","null_value","null_column_value","barchartSingleObject","barchartDoubleObject","linechartObject","componentChartObject","row_order_column","panelBarchartObject","panelLinechartObject","barchartObject","primary_column","order_column","isSimpleBarchart","column_name","indices","getIndices","categories","values","valueForCategory","parents","unique","title","text","parent_child","xAxis","yAxis","series","category1","category2","uniqueDataInColumnMaintainOrder","seriesData","seriesRows","sortChartSeries","categories_column","series_column","series_order_column","seriesNames","series_index","series_order_index","order_values","index","findIndex","sortBy","zip","pair","chartSeries","seriesName","valueForCategoryAndSeries","grouping_column","groups","isUndefinedOrNull","uniqueDataInColumnOrdered","reverse","panel_column","panel_order_column","panels","panelValue","panelRows","x_axis_column","panelNames","xAxisNames","uniqueDataInColumn","panelName","custom_column","headersLower","order","parent","secondary","custom","orderIndex","valueIndex","parentIndex","valueIsNumeric","isNumber","parentValue","relationships","is_parent","is_child","parseFloat","color","seriesIndex","seriesValue","isNaN","serieses","toNumberSortValue","name_value","floatVal","builderTools","getColumnIndex","NONE_VALUE","buildTableObject","subtitle","footer","row_column","group_column","data_columns","column_captions","index_column_caption","group_order_column","preProcessTableObject","groupedTable","simpleTable","tableObject","preProcessSimpleTableObject","preProcessGroupedTableObject","lowHeaders","columnIndex","data_column_indices","data_column","hasParentChild","sortIndex","tableData","child","sortValues","numVal","sort_values","adjustSimpleTableDataForParents","header","columns","category_caption","columnDps","columnDecimalPlaces","couldBeYear","columnCouldBeAYear","cellTuple","formatNumberWithDecimalPlaces","dps","seriesDecimalPlaces","years","seriesCouldBeYear","reorderSimpleTableDataForParentChild","addMissingSimpleTableParentItems","current_categories","missing_parents","newData","example","missing_parent","parent_items","min_order","min","new_data_point","item_dict","ordered_data","parent_children","data_by_row","group_column_index","data_items_by_group","buildDataObjectsByGroup","getDataByGroup","partial_table","templateGroupTable","adjustGroupedTableDataForParents","group_columns","row_categories","table_data","dataItemWithCategory","groupedTableDecimalPlaces","groupedTableCouldBeAYear","rowNo","flatten","items","row_html","row_item","findWhere","cellValues","group_values","DEFAULT_SORT","group_data","group_data_items","sort_val","group_order_index","partial_table_object","sortValue","category_item","cell","val","group_series","reorderGroupedTableDataForParentChild","addMissingGroupedTableParentItems","defaultVal","string","num","Number","drawTable","container_id","simpleHtmlTable","groupedHtmlTable","table_html","appendSimpleTableBody","appendSimpleTableHeader","html","header_html","body_html","cellValue","appendGroupedTableBody","appendGroupTableHeader","insertTableFooter","multicell","doSecondRow","appendTableTitle","appendTableSubtitle","total_cells","ready","$stickies","each","stickyPosition","parseInt","top","window","scroll","scrollTop","addClass","removeClass"],"mappings":"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","file":"cms.js","sourcesContent":["function DynamicResizingTextarea(element) {\n  this.element = element\n}\n\nDynamicResizingTextarea.prototype.init = function() {\n  // feature-detect required APIs\n  if ('addEventListener' in document && \n      'scrollHeight' in document.body &&\n      'classList' in document.body &&\n      Function.prototype.bind) {\n    \n    this.element.classList.add('js-autoresize')\n    this.element.rows = \"1\";\n    this.updateHeight()\n    this.element.addEventListener('input', this.updateHeight.bind(this))\n    \n  }\n}\n\nDynamicResizingTextarea.prototype.updateHeight = function() {\n  this.element.style.height = 'auto'; // Need to do this in order to properly calculate `this.scrollHeight`\n  this.element.style.height = (this.element.scrollHeight) + 'px';\n}\n\n\n// Automatically add this to any elements with the data-module attribute\nif ('addEventListener' in document) {\n  document.addEventListener('DOMContentLoaded', function () {\n    var autoResizeElements = document.querySelectorAll('[data-module~=\"autoresize\"]')\n    for (var i = 0; i < autoResizeElements.length; i++) {\n      new DynamicResizingTextarea(autoResizeElements[i]).init()\n    }\n  });\n}","\nfunction ethnicityDataValueFields(fieldset) {\n\n  var fieldset = fieldset;\n\n  if (\n    'querySelector' in document &&\n    'addEventListener' in document &&\n    Function.prototype.bind\n    ) {\n\n    var ethnicityCategorisationSelect, broadValuesCheckbox;\n    setup()\n  }\n\n  function setup() {\n\n    if (fieldset) {\n\n      ethnicityCategorisationSelect = fieldset.querySelector('select.ethnicity-categorisation')\n      broadValuesCheckbox = fieldset.querySelector('input.broad-values')\n\n      if (ethnicityCategorisationSelect && broadValuesCheckbox) {\n        ethnicityCategorisationSelect.addEventListener('change', selectChanged.bind(this));\n        updateBroadValuesCheckboxStatus();\n      }\n    }\n\n  }\n\n  function updateBroadValuesCheckboxStatus() {\n\n    var selectedOption = ethnicityCategorisationSelect.selectedOptions[0];\n\n    if (selectedOption.getAttribute('data-parents') == 'true') {\n      broadValuesCheckbox.removeAttribute('disabled')\n    } else {\n      broadValuesCheckbox.checked = false;\n      broadValuesCheckbox.setAttribute('disabled', 'disabled')\n    }\n  }\n\n  function selectChanged() {\n    updateBroadValuesCheckboxStatus();\n  }\n\n}\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.accessibleAutocomplete=t():e.accessibleAutocomplete=t()}(this,function(){return function(e){function t(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var n={};return t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:o})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p=\"/\",t(t.s=1)}([function(e,t,n){!function(){\"use strict\";function t(){}function n(e,n){var o,r,l,i,u=L;for(i=arguments.length;i-- >2;)D.push(arguments[i]);for(n&&null!=n.children&&(D.length||D.push(n.children),delete n.children);D.length;)if((r=D.pop())&&void 0!==r.pop)for(i=r.length;i--;)D.push(r[i]);else!0!==r&&!1!==r||(r=null),(l=\"function\"!=typeof e)&&(null==r?r=\"\":\"number\"==typeof r?r=String(r):\"string\"!=typeof r&&(l=!1)),l&&o?u[u.length-1]+=r:u===L?u=[r]:u.push(r),o=l;var s=new t;return s.nodeName=e,s.children=u,s.attributes=null==n?void 0:n,s.key=null==n?void 0:n.key,void 0!==A.vnode&&A.vnode(s),s}function o(e,t){for(var n in t)e[n]=t[n];return e}function r(e,t){return n(e.nodeName,o(o({},e.attributes),t),arguments.length>2?[].slice.call(arguments,2):e.children)}function l(e){!e.__d&&(e.__d=!0)&&1==V.push(e)&&(A.debounceRendering||setTimeout)(i)}function i(){var e,t=V;for(V=[];e=t.pop();)e.__d&&N(e)}function u(e,t,n){return\"string\"==typeof t||\"number\"==typeof t?void 0!==e.splitText:\"string\"==typeof t.nodeName?!e._componentConstructor&&s(e,t.nodeName):n||e._componentConstructor===t.nodeName}function s(e,t){return e.__n===t||e.nodeName.toLowerCase()===t.toLowerCase()}function a(e){var t=o({},e.attributes);t.children=e.children;var n=e.nodeName.defaultProps;if(void 0!==n)for(var r in n)void 0===t[r]&&(t[r]=n[r]);return t}function p(e,t){var n=t?document.createElementNS(\"http://www.w3.org/2000/svg\",e):document.createElement(e);return n.__n=e,n}function c(e){e.parentNode&&e.parentNode.removeChild(e)}function d(e,t,n,o,r){if(\"className\"===t&&(t=\"class\"),\"key\"===t);else if(\"ref\"===t)n&&n(null),o&&o(e);else if(\"class\"!==t||r)if(\"style\"===t){if(o&&\"string\"!=typeof o&&\"string\"!=typeof n||(e.style.cssText=o||\"\"),o&&\"object\"==typeof o){if(\"string\"!=typeof n)for(var l in n)l in o||(e.style[l]=\"\");for(var l in o)e.style[l]=\"number\"==typeof o[l]&&!1===T.test(l)?o[l]+\"px\":o[l]}}else if(\"dangerouslySetInnerHTML\"===t)o&&(e.innerHTML=o.__html||\"\");else if(\"o\"==t[0]&&\"n\"==t[1]){var i=t!==(t=t.replace(/Capture$/,\"\"));t=t.toLowerCase().substring(2),o?n||e.addEventListener(t,h,i):e.removeEventListener(t,h,i),(e.__l||(e.__l={}))[t]=o}else if(\"list\"!==t&&\"type\"!==t&&!r&&t in e)f(e,t,null==o?\"\":o),null!=o&&!1!==o||e.removeAttribute(t);else{var u=r&&t!==(t=t.replace(/^xlink\\:?/,\"\"));null==o||!1===o?u?e.removeAttributeNS(\"http://www.w3.org/1999/xlink\",t.toLowerCase()):e.removeAttribute(t):\"function\"!=typeof o&&(u?e.setAttributeNS(\"http://www.w3.org/1999/xlink\",t.toLowerCase(),o):e.setAttribute(t,o))}else e.className=o||\"\"}function f(e,t,n){try{e[t]=n}catch(e){}}function h(e){return this.__l[e.type](A.event&&A.event(e)||e)}function m(){for(var e;e=R.pop();)A.afterMount&&A.afterMount(e),e.componentDidMount&&e.componentDidMount()}function _(e,t,n,o,r,l){q++||(P=null!=r&&void 0!==r.ownerSVGElement,U=null!=e&&!(\"__preactattr_\"in e));var i=v(e,t,n,o,l);return r&&i.parentNode!==r&&r.appendChild(i),--q||(U=!1,l||m()),i}function v(e,t,n,o,r){var l=e,i=P;if(null==t&&(t=\"\"),\"string\"==typeof t)return e&&void 0!==e.splitText&&e.parentNode&&(!e._component||r)?e.nodeValue!=t&&(e.nodeValue=t):(l=document.createTextNode(t),e&&(e.parentNode&&e.parentNode.replaceChild(l,e),g(e,!0))),l.__preactattr_=!0,l;if(\"function\"==typeof t.nodeName)return S(e,t,n,o);if(P=\"svg\"===t.nodeName||\"foreignObject\"!==t.nodeName&&P,(!e||!s(e,String(t.nodeName)))&&(l=p(String(t.nodeName),P),e)){for(;e.firstChild;)l.appendChild(e.firstChild);e.parentNode&&e.parentNode.replaceChild(l,e),g(e,!0)}var u=l.firstChild,a=l.__preactattr_||(l.__preactattr_={}),c=t.children;return!U&&c&&1===c.length&&\"string\"==typeof c[0]&&null!=u&&void 0!==u.splitText&&null==u.nextSibling?u.nodeValue!=c[0]&&(u.nodeValue=c[0]):(c&&c.length||null!=u)&&y(l,c,n,o,U||null!=a.dangerouslySetInnerHTML),w(l,t.attributes,a),P=i,l}function y(e,t,n,o,r){var l,i,s,a,p=e.childNodes,d=[],f={},h=0,m=0,_=p.length,y=0,b=t?t.length:0;if(0!==_)for(var w=0;w<_;w++){var O=p[w],C=O.__preactattr_,x=b&&C?O._component?O._component.__k:C.key:null;null!=x?(h++,f[x]=O):(C||(void 0!==O.splitText?!r||O.nodeValue.trim():r))&&(d[y++]=O)}if(0!==b)for(var w=0;w<b;w++){s=t[w],a=null;var x=s.key;if(null!=x)h&&void 0!==f[x]&&(a=f[x],f[x]=void 0,h--);else if(!a&&m<y)for(l=m;l<y;l++)if(void 0!==d[l]&&u(i=d[l],s,r)){a=i,d[l]=void 0,l===y-1&&y--,l===m&&m++;break}(a=v(a,s,n,o))&&a!==e&&(w>=_?e.appendChild(a):a!==p[w]&&(a===p[w+1]?c(p[w]):e.insertBefore(a,p[w]||null)))}if(h)for(var w in f)void 0!==f[w]&&g(f[w],!1);for(;m<=y;)void 0!==(a=d[y--])&&g(a,!1)}function g(e,t){var n=e._component;n?I(n):(null!=e.__preactattr_&&e.__preactattr_.ref&&e.__preactattr_.ref(null),!1!==t&&null!=e.__preactattr_||c(e),b(e))}function b(e){for(e=e.lastChild;e;){var t=e.previousSibling;g(e,!0),e=t}}function w(e,t,n){var o;for(o in n)t&&null!=t[o]||null==n[o]||d(e,o,n[o],n[o]=void 0,P);for(o in t)\"children\"===o||\"innerHTML\"===o||o in n&&t[o]===(\"value\"===o||\"checked\"===o?e[o]:n[o])||d(e,o,n[o],n[o]=t[o],P)}function O(e){var t=e.constructor.name;(B[t]||(B[t]=[])).push(e)}function C(e,t,n){var o,r=B[e.name];if(e.prototype&&e.prototype.render?(o=new e(t,n),k.call(o,t,n)):(o=new k(t,n),o.constructor=e,o.render=x),r)for(var l=r.length;l--;)if(r[l].constructor===e){o.__b=r[l].__b,r.splice(l,1);break}return o}function x(e,t,n){return this.constructor(e,n)}function E(e,t,n,o,r){e.__x||(e.__x=!0,(e.__r=t.ref)&&delete t.ref,(e.__k=t.key)&&delete t.key,!e.base||r?e.componentWillMount&&e.componentWillMount():e.componentWillReceiveProps&&e.componentWillReceiveProps(t,o),o&&o!==e.context&&(e.__c||(e.__c=e.context),e.context=o),e.__p||(e.__p=e.props),e.props=t,e.__x=!1,0!==n&&(1!==n&&!1===A.syncComponentUpdates&&e.base?l(e):N(e,1,r)),e.__r&&e.__r(e))}function N(e,t,n,r){if(!e.__x){var l,i,u,s=e.props,p=e.state,c=e.context,d=e.__p||s,f=e.__s||p,h=e.__c||c,v=e.base,y=e.__b,b=v||y,w=e._component,O=!1;if(v&&(e.props=d,e.state=f,e.context=h,2!==t&&e.shouldComponentUpdate&&!1===e.shouldComponentUpdate(s,p,c)?O=!0:e.componentWillUpdate&&e.componentWillUpdate(s,p,c),e.props=s,e.state=p,e.context=c),e.__p=e.__s=e.__c=e.__b=null,e.__d=!1,!O){l=e.render(s,p,c),e.getChildContext&&(c=o(o({},c),e.getChildContext()));var x,S,k=l&&l.nodeName;if(\"function\"==typeof k){var M=a(l);i=w,i&&i.constructor===k&&M.key==i.__k?E(i,M,1,c,!1):(x=i,e._component=i=C(k,M,c),i.__b=i.__b||y,i.__u=e,E(i,M,0,c,!1),N(i,1,n,!0)),S=i.base}else u=b,x=w,x&&(u=e._component=null),(b||1===t)&&(u&&(u._component=null),S=_(u,l,c,n||!v,b&&b.parentNode,!0));if(b&&S!==b&&i!==w){var D=b.parentNode;D&&S!==D&&(D.replaceChild(S,b),x||(b._component=null,g(b,!1)))}if(x&&I(x),e.base=S,S&&!r){for(var L=e,T=e;T=T.__u;)(L=T).base=S;S._component=L,S._componentConstructor=L.constructor}}if(!v||n?R.unshift(e):O||(m(),e.componentDidUpdate&&e.componentDidUpdate(d,f,h),A.afterUpdate&&A.afterUpdate(e)),null!=e.__h)for(;e.__h.length;)e.__h.pop().call(e);q||r||m()}}function S(e,t,n,o){for(var r=e&&e._component,l=r,i=e,u=r&&e._componentConstructor===t.nodeName,s=u,p=a(t);r&&!s&&(r=r.__u);)s=r.constructor===t.nodeName;return r&&s&&(!o||r._component)?(E(r,p,3,n,o),e=r.base):(l&&!u&&(I(l),e=i=null),r=C(t.nodeName,p,n),e&&!r.__b&&(r.__b=e,i=null),E(r,p,1,n,o),e=r.base,i&&e!==i&&(i._component=null,g(i,!1))),e}function I(e){A.beforeUnmount&&A.beforeUnmount(e);var t=e.base;e.__x=!0,e.componentWillUnmount&&e.componentWillUnmount(),e.base=null;var n=e._component;n?I(n):t&&(t.__preactattr_&&t.__preactattr_.ref&&t.__preactattr_.ref(null),e.__b=t,c(t),O(e),b(t)),e.__r&&e.__r(null)}function k(e,t){this.__d=!0,this.context=t,this.props=e,this.state=this.state||{}}function M(e,t,n){return _(n,e,{},!1,t,!1)}var A={},D=[],L=[],T=/acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i,V=[],R=[],q=0,P=!1,U=!1,B={};o(k.prototype,{setState:function(e,t){var n=this.state;this.__s||(this.__s=o({},n)),o(n,\"function\"==typeof e?e(n,this.props):e),t&&(this.__h=this.__h||[]).push(t),l(this)},forceUpdate:function(e){e&&(this.__h=this.__h||[]).push(e),N(this,2)},render:function(){}});var j={h:n,createElement:n,cloneElement:r,Component:k,render:M,rerender:i,options:A};e.exports=j}()},function(e,t,n){e.exports=n(2)},function(e,t,n){\"use strict\";function o(e){if(!e.element)throw new Error(\"element is not defined\");if(!e.id)throw new Error(\"id is not defined\");if(!e.source)throw new Error(\"source is not defined\");Array.isArray(e.source)&&(e.source=s(e.source)),(0,l.render)((0,l.createElement)(u.default,e),e.element)}var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},l=n(0),i=n(3),u=function(e){return e&&e.__esModule?e:{default:e}}(i),s=function(e){return function(t,n){n(e.filter(function(e){return-1!==e.toLowerCase().indexOf(t.toLowerCase())}))}};o.enhanceSelectElement=function(e){if(!e.selectElement)throw new Error(\"selectElement is not defined\");if(!e.source){var t=[].filter.call(e.selectElement.options,function(t){return t.value||e.preserveNullOptions});e.source=t.map(function(e){return e.textContent||e.innerText})}if(e.onConfirm=e.onConfirm||function(t){var n=[].filter.call(e.selectElement.options,function(e){return(e.textContent||e.innerText)===t})[0];n&&(n.selected=!0)},e.selectElement.value||void 0===e.defaultValue){var n=e.selectElement.options[e.selectElement.options.selectedIndex];e.defaultValue=n.textContent||n.innerText}void 0===e.name&&(e.name=\"\"),void 0===e.id&&(void 0===e.selectElement.id?e.id=\"\":e.id=e.selectElement.id),void 0===e.autoselect&&(e.autoselect=!0);var l=document.createElement(\"span\");e.selectElement.parentNode.insertBefore(l,e.selectElement),o(r({},e,{element:l})),e.selectElement.style.display=\"none\",e.selectElement.id=e.selectElement.id+\"-select\"},e.exports=o},function(e,t,n){\"use strict\";function o(e){return e&&e.__esModule?e:{default:e}}function r(e,t){}function l(e,t){if(e)return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}function i(e,t){\"function\"!=typeof t&&null!==t||(e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t))}function u(){return!(!navigator.userAgent.match(/(iPod|iPhone|iPad)/g)||!navigator.userAgent.match(/AppleWebKit/g))}function s(e){return e>47&&e<58||32===e||8===e||e>64&&e<91||e>95&&e<112||e>185&&e<193||e>218&&e<223}function a(e){return y?{onInput:e}:g?{onChange:e}:void 0}t.__esModule=!0,t.default=void 0;var p,c,d=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},f=n(0),h=n(4),m=o(h),_=n(5),v=o(_),y=!0,g=!1,b={13:\"enter\",27:\"escape\",32:\"space\",38:\"up\",40:\"down\"},w=function(){var e=document.createElement(\"x\");return e.style.cssText=\"pointer-events:auto\",\"auto\"===e.style.pointerEvents}(),O=(c=p=function(e){function t(n){r(this,t);var o=l(this,e.call(this,n));return o.elementReferences={},o.state={focused:null,hovered:null,menuOpen:!1,options:n.defaultValue?[n.defaultValue]:[],query:n.defaultValue,selected:null},o.handleComponentBlur=o.handleComponentBlur.bind(o),o.handleKeyDown=o.handleKeyDown.bind(o),o.handleUpArrow=o.handleUpArrow.bind(o),o.handleDownArrow=o.handleDownArrow.bind(o),o.handleEnter=o.handleEnter.bind(o),o.handlePrintableKey=o.handlePrintableKey.bind(o),o.handleOptionBlur=o.handleOptionBlur.bind(o),o.handleOptionClick=o.handleOptionClick.bind(o),o.handleOptionFocus=o.handleOptionFocus.bind(o),o.handleOptionMouseDown=o.handleOptionMouseDown.bind(o),o.handleOptionMouseEnter=o.handleOptionMouseEnter.bind(o),o.handleOptionMouseOut=o.handleOptionMouseOut.bind(o),o.handleInputBlur=o.handleInputBlur.bind(o),o.handleInputChange=o.handleInputChange.bind(o),o.handleInputFocus=o.handleInputFocus.bind(o),o.pollInputElement=o.pollInputElement.bind(o),o.getDirectInputChanges=o.getDirectInputChanges.bind(o),o}return i(t,e),t.prototype.componentDidMount=function(){this.pollInputElement()},t.prototype.componentWillUnmount=function(){clearTimeout(this.$pollInput)},t.prototype.pollInputElement=function(){var e=this;this.getDirectInputChanges(),this.$pollInput=setTimeout(function(){e.pollInputElement()},100)},t.prototype.getDirectInputChanges=function(){var e=this.elementReferences[-1];e&&e.value!==this.state.query&&this.handleInputChange({target:{value:e.value}})},t.prototype.componentDidUpdate=function(e,t){var n=this.state.focused,o=null===n,r=t.focused!==n;r&&!o&&this.elementReferences[n].focus();var l=-1===n,i=r&&null===t.focused;if(l&&i){var u=this.elementReferences[n];u.setSelectionRange(0,u.value.length)}},t.prototype.hasAutoselect=function(){return!u()&&this.props.autoselect},t.prototype.templateInputValue=function(e){var t=this.props.templates&&this.props.templates.inputValue;return t?t(e):e},t.prototype.templateSuggestion=function(e){var t=this.props.templates&&this.props.templates.suggestion;return t?t(e):e},t.prototype.handleComponentBlur=function(e){var t=this.state,n=t.options,o=t.query,r=t.selected,l=void 0;this.props.confirmOnBlur?(l=e.query||o,this.props.onConfirm(n[r])):l=o,this.setState({focused:null,menuOpen:e.menuOpen||!1,query:l,selected:null})},t.prototype.handleOptionBlur=function(e,t){var n=this.state,o=n.focused,r=n.menuOpen,l=n.options,i=n.selected,s=null===e.relatedTarget,a=e.relatedTarget===this.elementReferences[-1],p=o!==t&&-1!==o;if(!p&&s||!p&&!a){var c=r&&u();this.handleComponentBlur({menuOpen:c,query:this.templateInputValue(l[i])})}},t.prototype.handleInputBlur=function(e){var t=this.state,n=t.focused,o=t.menuOpen,r=t.options,l=t.query,i=t.selected;if(-1===n){var s=o&&u(),a=u()?l:this.templateInputValue(r[i]);this.handleComponentBlur({menuOpen:s,query:a})}},t.prototype.handleInputChange=function(e){var t=this,n=this.props,o=n.minLength,r=n.source,l=n.showAllValues,i=this.hasAutoselect(),u=e.target.value,s=0===u.length,a=this.state.query.length!==u.length,p=u.length>=o;this.setState({query:u}),l||!s&&a&&p?r(u,function(e){var n=e.length>0;t.setState({menuOpen:n,options:e,selected:i&&n?0:-1})}):!s&&p||this.setState({menuOpen:!1,options:[]})},t.prototype.handleInputClick=function(e){this.handleInputChange(e)},t.prototype.handleInputFocus=function(e){this.setState({focused:-1})},t.prototype.handleOptionFocus=function(e){this.setState({focused:e,hovered:null,selected:e})},t.prototype.handleOptionMouseEnter=function(e,t){this.setState({hovered:t})},t.prototype.handleOptionMouseOut=function(e,t){this.setState({hovered:null})},t.prototype.handleOptionClick=function(e,t){var n=this.state.options[t],o=this.templateInputValue(n);this.props.onConfirm(n),this.setState({focused:-1,menuOpen:!1,query:o,selected:-1}),this.forceUpdate()},t.prototype.handleOptionMouseDown=function(e){e.preventDefault()},t.prototype.handleUpArrow=function(e){e.preventDefault();var t=this.state,n=t.menuOpen,o=t.selected;-1!==o&&n&&this.handleOptionFocus(o-1)},t.prototype.handleDownArrow=function(e){var t=this;if(e.preventDefault(),this.props.showAllValues&&!1===this.state.menuOpen)e.preventDefault(),this.props.source(\"\",function(e){t.setState({menuOpen:!0,options:e,selected:0,focused:0,hovered:null})});else if(!0===this.state.menuOpen){var n=this.state,o=n.menuOpen,r=n.options,l=n.selected,i=l!==r.length-1,u=i&&o;u&&this.handleOptionFocus(l+1)}},t.prototype.handleSpace=function(e){var t=this;this.props.showAllValues&&!1===this.state.menuOpen&&(e.preventDefault(),this.props.source(\"\",function(e){t.setState({menuOpen:!0,options:e})})),-1!==this.state.focused&&(e.preventDefault(),this.handleOptionClick(e,this.state.focused))},t.prototype.handleEnter=function(e){this.state.menuOpen&&(e.preventDefault(),this.state.selected>=0&&this.handleOptionClick(e,this.state.selected))},t.prototype.handlePrintableKey=function(e){var t=this.elementReferences[-1];e.target===t||t.focus()},t.prototype.handleKeyDown=function(e){switch(b[e.keyCode]){case\"up\":this.handleUpArrow(e);break;case\"down\":this.handleDownArrow(e);break;case\"space\":this.handleSpace(e);break;case\"enter\":this.handleEnter(e);break;case\"escape\":this.handleComponentBlur({query:this.state.query});break;default:s(e.keyCode)&&this.handlePrintableKey(e)}},t.prototype.render=function(){var e=this,t=this.props,n=t.cssNamespace,o=t.displayMenu,r=t.id,l=t.minLength,i=t.name,u=t.placeholder,s=t.required,p=t.showAllValues,c=t.tNoResults,h=t.tStatusQueryTooShort,_=t.tStatusNoResults,v=t.tStatusSelectedOption,y=t.tStatusResults,g=t.dropdownArrow,b=this.state,O=b.focused,C=b.hovered,x=b.menuOpen,E=b.options,N=b.query,S=b.selected,I=this.hasAutoselect(),k=-1===O,M=0===E.length,A=0!==N.length,D=N.length>=l,L=this.props.showNoOptionsFound&&k&&M&&A&&D,T=n+\"__wrapper\",V=n+\"__input\",R=null!==O,q=R?\" \"+V+\"--focused\":\"\",P=this.props.showAllValues?\" \"+V+\"--show-all-values\":\" \"+V+\"--default\",U=n+\"__dropdown-arrow-down\",B=-1!==O&&null!==O,j=n+\"__menu\",F=j+\"--\"+o,W=x||L,K=j+\"--\"+(W?\"visible\":\"hidden\"),H=n+\"__option\",Q=n+\"__hint\",$=this.templateInputValue(E[S]),z=$&&0===$.toLowerCase().indexOf(N.toLowerCase()),G=z&&I?N+$.substr(N.length):\"\",J=w&&G,X=void 0;return p&&\"string\"==typeof(X=g({className:U}))&&(X=(0,f.createElement)(\"div\",{className:n+\"__dropdown-arrow-down-wrapper\",dangerouslySetInnerHTML:{__html:X}})),(0,f.createElement)(\"div\",{className:T,onKeyDown:this.handleKeyDown,role:\"combobox\",\"aria-expanded\":x?\"true\":\"false\"},(0,f.createElement)(m.default,{length:E.length,queryLength:N.length,minQueryLength:l,selectedOption:this.templateInputValue(E[S]),tQueryTooShort:h,tNoResults:_,tSelectedOption:v,tResults:y}),J&&(0,f.createElement)(\"span\",null,(0,f.createElement)(\"input\",{className:Q,readonly:!0,tabIndex:\"-1\",value:G})),(0,f.createElement)(\"input\",d({\"aria-activedescendant\":!!B&&r+\"__option--\"+O,\"aria-owns\":r+\"__listbox\",autoComplete:\"off\",className:\"\"+V+q+P,id:r,onClick:function(t){return e.handleInputClick(t)},onBlur:this.handleInputBlur},a(this.handleInputChange),{onFocus:this.handleInputFocus,name:i,placeholder:u,ref:function(t){e.elementReferences[-1]=t},type:\"text\",role:\"textbox\",required:s,value:N})),X,(0,f.createElement)(\"ul\",{className:j+\" \"+F+\" \"+K,id:r+\"__listbox\",role:\"listbox\"},E.map(function(t,n){var o=-1===O?S===n:O===n,l=o&&null===C?\" \"+H+\"--focused\":\"\",i=n%2?\" \"+H+\"--odd\":\"\";return(0,f.createElement)(\"li\",{\"aria-selected\":O===n,className:\"\"+H+l+i,dangerouslySetInnerHTML:{__html:e.templateSuggestion(t)},id:r+\"__option--\"+n,key:n,onFocusOut:function(t){return e.handleOptionBlur(t,n)},onClick:function(t){return e.handleOptionClick(t,n)},onMouseDown:e.handleOptionMouseDown,onMouseEnter:function(t){return e.handleOptionMouseEnter(t,n)},onMouseOut:function(t){return e.handleOptionMouseOut(t,n)},ref:function(t){e.elementReferences[n]=t},role:\"option\",tabIndex:\"-1\"})}),L&&(0,f.createElement)(\"li\",{className:H+\" \"+H+\"--no-results\"},c())))},t}(f.Component),p.defaultProps={autoselect:!1,cssNamespace:\"autocomplete\",defaultValue:\"\",displayMenu:\"inline\",minLength:0,name:\"input-autocomplete\",placeholder:\"\",onConfirm:function(){},confirmOnBlur:!0,showNoOptionsFound:!0,showAllValues:!1,required:!1,tNoResults:function(){return\"No results found\"},dropdownArrow:v.default},c);t.default=O},function(e,t,n){\"use strict\";function o(e,t){}function r(e,t){if(e)return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}function l(e,t){\"function\"!=typeof t&&null!==t||(e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t))}t.__esModule=!0,t.default=void 0;var i,u,s=n(0),a=(u=i=function(e){function t(){var n,l,i;o(this,t);for(var u=arguments.length,s=Array(u),a=0;a<u;a++)s[a]=arguments[a];return n=l=r(this,e.call.apply(e,[this].concat(s))),l.state={bump:!1},i=n,r(l,i)}return l(t,e),t.prototype.componentWillReceiveProps=function(e){e.queryLength!==this.props.queryLength&&this.setState(function(e){return{bump:!e.bump}})},t.prototype.render=function(){var e=this.props,t=e.length,n=e.queryLength,o=e.minQueryLength,r=e.selectedOption,l=e.tQueryTooShort,i=e.tNoResults,u=e.tSelectedOption,a=e.tResults,p=this.state.bump,c=n<o,d=0===t,f=r?u(r,t):\"\",h=null;return h=c?l(o):d?i():a(t,f),(0,s.createElement)(\"div\",{\"aria-atomic\":\"true\",\"aria-live\":\"polite\",role:\"status\",style:{border:\"0\",clip:\"rect(0 0 0 0)\",height:\"1px\",marginBottom:\"-1px\",marginRight:\"-1px\",overflow:\"hidden\",padding:\"0\",position:\"absolute\",whiteSpace:\"nowrap\",width:\"1px\"}},h,(0,s.createElement)(\"span\",null,p?\",\":\",,\"))},t}(s.Component),i.defaultProps={tQueryTooShort:function(e){return\"Type in \"+e+\" or more characters for results.\"},tNoResults:function(){return\"No search results.\"},tSelectedOption:function(e,t){return e+\" (1 of \"+t+\") is selected.\"},tResults:function(e,t){var n={result:1===e?\"result\":\"results\",is:1===e?\"is\":\"are\"};return e+\" \"+n.result+\" \"+n.is+\" available. \"+t}},u);t.default=a},function(e,t,n){\"use strict\";t.__esModule=!0;var o=n(0),r=function(e){var t=e.className;return(0,o.createElement)(\"svg\",{version:\"1.1\",xmlns:\"http://www.w3.org/2000/svg\",className:t,focusable:\"false\"},(0,o.createElement)(\"g\",{stroke:\"none\",fill:\"none\",\"fill-rule\":\"evenodd\"},(0,o.createElement)(\"polygon\",{fill:\"#000000\",points:\"0 0 22 0 11 17\"})))};t.default=r}])});\n","\nvar govukGovernmentOrganisationsAutocomplete = function(options) {\n\n  var sourceSelect = function(query, callback) {\n\n    var optionsWithAValue = [].filter.call(options.selectElement.options, function(option) {\n      return option.value != ''\n    })\n\n    var orgs = optionsWithAValue.map(function(select) {\n\n      var dataAbbreviations = select.getAttribute('data-abbreviations');\n      dataAbbreviations = dataAbbreviations ? dataAbbreviations.split('|') : []\n\n      var dataOtherNames = select.getAttribute('data-other-names');\n      dataOtherNames = dataOtherNames ? dataOtherNames.split('|') : []\n\n      return {\n        'current_name': select.label,\n        'abbreviations': dataAbbreviations,\n        'other_names': dataOtherNames\n      }\n    })\n\n    var regexes = query.trim().split(/\\s+/).map(function(word) {\n      return new RegExp('\\\\b' + word, 'i')\n    })\n\n    var matches = orgs.map(function(organisation) {\n\n      var allNames = [organisation.current_name]\n        .concat(organisation.other_names)\n        .concat(organisation.abbreviations)\n        .filter(function(name) { return name })\n\n      organisation['resultPosition'] = null\n\n\n      for (var i = 0; i < allNames.length; i++) {\n\n        var matches = regexes.reduce(function(acc, regex) {\n\n          matchPosition = allNames[i].search(regex)\n          if (matchPosition > -1) {\n            acc.count += 1\n\n            if (acc.lowestPosition == -1 || matchPosition < acc.lowestPosition) {\n              acc.lowestPosition = matchPosition\n            }\n          }\n\n          return acc;\n\n        }, {'count': 0, 'lowestPosition': -1})\n\n\n        if (matches.count == regexes.length && (organisation['resultPosition'] == null || matches.lowestPosition < organisation['resultPosition'])) {\n          organisation['resultPosition'] = matches.lowestPosition\n        }\n      }\n\n      return organisation\n\n    })\n\n    var filteredMatches = matches.filter(function(organisation) {\n      return (organisation['resultPosition'] != null )\n    })\n\n    var sortedFilteredMatches = filteredMatches.sort(function(organisationA, organisationB) {\n\n      if (organisationA['resultPosition'] < organisationB['resultPosition'] ) {\n        return -1\n      } else if (organisationA['resultPosition'] > organisationB['resultPosition'] ) {\n        return 1\n      } else {\n        return 0\n      }\n    })\n\n    var results = sortedFilteredMatches.map(function(organisation) { return organisation['current_name'] })\n\n    return callback(results)\n  }\n\n\n  options.source = sourceSelect\n\n  accessibleAutocomplete.enhanceSelectElement(options)\n\n}\n","\n/* Show or Hide content controlled by a Radio button or Checkbox */\nfunction showHideControl(element) {\n\n  if (\n      document.querySelectorAll &&\n      Function.prototype.bind &&\n      ('classList' in document.createElement('_'))\n    ) {\n\n    var element = element;\n    var elementControlled = null;\n    setup()\n\n  }\n\n  function setup() {\n\n    var elementControlledId = element.getAttribute('aria-controls')\n    var elementName = element.getAttribute('name');\n\n    if (elementControlledId) {\n      elementControlled = document.getElementById(elementControlledId);\n    }\n\n    if (elementControlled) {\n\n      var allRadioButtonsInSameGroup = document.querySelectorAll('input[name=' + elementName + ']');\n\n      for (var i = allRadioButtonsInSameGroup.length - 1; i >= 0; i--) {\n        allRadioButtonsInSameGroup[i].addEventListener('change', inputChanged.bind(this));\n      }\n\n    }\n\n    expandOrCollapseTarget(element.checked)\n  }\n\n  function expandOrCollapseTarget(expand) {\n    if (expand) {\n      elementControlled.classList.remove('js-hidden');\n    } else {\n      elementControlled.classList.add('js-hidden');\n    }\n  }\n\n  function inputChanged(event) {\n    expandOrCollapseTarget(element.checked);\n    element.setAttribute('aria-expanded', element.checked);\n  }\n\n}\n","function NoNewlinesTextarea(element) {\n  this.element = element\n}\n\nNoNewlinesTextarea.prototype.init = function() {\n  if ('addEventListener' in document &&\n      Function.prototype.bind) {\n        this.element.addEventListener('keypress', function (e) {\n          if (e.key == \"Enter\") {\n            e.preventDefault();\n          }\n        }.bind(this));\n        this.element.addEventListener('input', this.stripNewlines.bind(this));\n        this.stripNewlines();\n      }\n}\n\nNoNewlinesTextarea.prototype.stripNewlines = function () {\n  if (this.element.value.indexOf('\\r') !== -1 || this.element.value.indexOf('\\n') !== -1) {\n    this.element.value = this.element.value.replace(/[\\r\\n]/gm, \"\");\n  }\n}\n\nif ('addEventListener' in document) {\n  document.addEventListener('DOMContentLoaded', function () {\n    var noNewlineElements = document.querySelectorAll('[data-module~=\"no-newlines\"]')\n    for (var i = 0; i < noNewlineElements.length; i++) {\n      new NoNewlinesTextarea(noNewlineElements[i]).init()\n    }\n  });\n}\n","\n\nfunction ukCountriesSelect(element) {\n\n  this.element = element;\n\n  var countryInputs, ukInput;\n  setup();\n\n  function setup() {\n\n    if (!(\n      this.element &&\n      'querySelector' in this.element &&\n      'querySelectorAll' in this.element\n    )) { return; }\n\n    ukInput = document.createElement('input')\n    ukInput.setAttribute('type', 'checkbox')\n    ukInput.setAttribute('id', 'uk')\n\n    var ukInputLabel = document.createElement('label')\n    ukInputLabel.setAttribute('for', 'uk')\n    ukInputLabel.textContent = 'All (United Kingdom)'\n\n    var ukInputContainer = document.createElement('div')\n    ukInputContainer.setAttribute('class', 'multiple-choice uk')\n\n    ukInputContainer.appendChild(ukInput)\n    ukInputContainer.appendChild(ukInputLabel)\n\n    var legend = this.element.querySelector('legend')\n\n    if (!legend) {\n      console.warn('missing legend for UK fieldset');\n      return;\n    }\n\n    legend.parentElement.insertBefore(ukInputContainer, legend.nextSibling)\n\n    if (ukInput) {\n      ukInput.addEventListener('change', ukChanged)\n\n      countryInputs = this.element.querySelectorAll('input.country')\n\n      for (var i = countryInputs.length - 1; i >= 0; i--) {\n        countryInputs[i].addEventListener('change', countryChanged)\n      }\n\n      countryChanged();\n\n    }\n\n  }\n\n  function countryChanged(event) {\n\n    var checkedCountries = 0;\n\n    for (var i = countryInputs.length - 1; i >= 0; i--) {\n\n      if (countryInputs[i].checked) {\n        checkedCountries += 1;\n      }\n\n    }\n\n    ukInput.checked = (checkedCountries == countryInputs.length);\n\n  }\n\n  function ukChanged() {\n\n    for (var i = countryInputs.length - 1; i >= 0; i--) {\n      countryInputs[i].checked = ukInput.checked;\n    }\n\n  }\n\n}\n","/**\n * Created by Tom.Ridd on 25/02/2018.\n\n rd-builder provides common functions that are required by both the chartbuilder and tablebuilder screens\n\n specifically\n - validate that data does not have multiple rows that correspond to a single data point\n - validate that data has coverage of every data point\n - provide useful error messages when data is invalid\n\n */\n\n// Forms of data error\nvar DATA_ERROR_DUPLICATION = \"duplication\";\nvar DATA_ERROR_MISSING_DATA = \"missing data\";\nvar DATA_ERROR_SETTINGS_ERROR = \"settings\";\nvar DATA_ERROR_COMPLEX_DATA = \"complex data\";\n\n\n// ---------------------------------------------------------------------------\n// PUBLIC\n// ---------------------------------------------------------------------------\n\n\nfunction validateData(data, categoryColumn, groupColumn) {\n    var errors = [];\n    var dataRows = _.clone(data);\n    var headerRow = dataRows.shift();\n    var lowerHeaderRow = _.map(headerRow, function (m) {\n        return m.trim().toLowerCase()\n    })\n\n    var categoryIndex = index_of_column_named(lowerHeaderRow, categoryColumn);\n    if (categoryIndex === null) {\n        return [{\n            'error': 'could not find data column',\n            'column': categoryColumn,\n            'errorType': DATA_ERROR_SETTINGS_ERROR\n        }]\n    }\n    if (groupColumn !== null) {\n        var groupIndex = index_of_column_named(lowerHeaderRow, groupColumn);\n        if (groupIndex === null) {\n            return [{\n                'error': 'could not find data column',\n                'column': groupColumn,\n                'errorType': DATA_ERROR_SETTINGS_ERROR\n            }]\n        } else {\n            return validateGroupedData(dataRows, categoryIndex, groupIndex, categoryColumn, groupColumn)\n        }\n    } else {\n        return validateSimpleData(dataRows, categoryIndex, categoryColumn)\n    }\n}\n\nfunction validateDataDuplicatesOnly(data, categoryColumn, groupColumn) {\n    var errors = [];\n    var dataRows = _.clone(data);\n    var headerRow = dataRows.shift();\n    var lowerHeaderRow = _.map(headerRow, function (m) {\n        return m.trim().toLowerCase();\n    });\n    var categoryIndex = index_of_column_named(lowerHeaderRow, categoryColumn);\n\n    if (categoryIndex === null) {\n        return [{'error': 'could not find data column', 'column': categoryColumn}]\n    }\n    if (groupColumn !== null) {\n        var groupIndex = index_of_column_named(lowerHeaderRow, groupColumn);\n\n        if (groupIndex === null) {\n            return [{'error': 'could not find data column', 'column': groupColumn}]\n        } else {\n            return validateGroupedDataDuplicates(dataRows, categoryIndex, groupIndex)\n        }\n    } else {\n        return validateSimpleData(dataRows, categoryIndex)\n    }\n}\n\n\n// ---------------------------------------------------------------------------\n// SIMPLE DATA (not cross tab, multiseries, panel, etc...)\n// ---------------------------------------------------------------------------\n\nfunction validateSimpleData(data, categoryIndex, categoryColumn) {\n    var duplicateErrors = [];\n\n    var uniqueCategories = _.uniq(_.map(data, function (row) {\n        return row[categoryIndex];\n    }));\n\n    if (uniqueCategories.length === data.length) {\n        return [];\n    } else if (data.length % uniqueCategories.length === 0) {\n        return [{'errorType': DATA_ERROR_COMPLEX_DATA}]\n    } else {\n        var dict = {};\n        _.forEach(data, function (row) {\n            var value = row[categoryIndex];\n            if (value in dict) {\n                // wrap in if to make sure we don't add multiple error messages\n                if (dict[value] !== 'added to errors') {\n                    duplicateErrors.push({\n                        'error': 'duplicate data',\n                        'category': value,\n                        'categoryColumn': categoryColumn,\n                        'errorType': DATA_ERROR_DUPLICATION\n                    });\n                    dict[value] = 'added to errors'\n                }\n            } else {\n                dict[value] = 'value in dict'\n            }\n        });\n\n        return duplicateErrors;\n    }\n\n}\n\n\n// ---------------------------------------------------------------------------\n// GROUPED DATA VALIDATION (cross tab, multiseries, panel, etc...)\n// ---------------------------------------------------------------------------\n\nfunction validateGroupedData(data, categoryIndex, groupIndex, categoryColumn, groupColumn) {\n    var completeErrors = validateGroupedDataCompleteness(data, categoryIndex, groupIndex, categoryColumn, groupColumn);\n    var duplicateErrors = validateGroupedDataDuplicates(data, categoryIndex, groupIndex, categoryColumn, groupColumn);\n\n    return completeErrors.concat(duplicateErrors);\n}\n\nfunction validateGroupedDataCompleteness(data, categoryIndex, groupIndex, categoryColumn, groupColumn) {\n    var rowItems = _.uniq(_.map(data, function (item) {\n        return item[categoryIndex];\n    }));\n    var columnItems = _.uniq(_.map(data, function (item) {\n        return item[groupIndex];\n    }));\n    var errors = [];\n\n    var mapOfPairs = _.object(_.map(rowItems, function (item) {\n        return [item, _.map(_.filter(data, function (row) {\n            return row[categoryIndex] === item\n        }), function (row) {\n            return row[groupIndex];\n        })];\n    }));\n\n    _.forEach(rowItems, function (row) {\n        _.forEach(columnItems, function (col) {\n            if (!_.contains(mapOfPairs[row], col)) {\n                errors.push({\n                    'error': 'missing data',\n                    'category': row,\n                    'group': col,\n                    'categoryColumn': categoryColumn,\n                    'groupColumn': groupColumn,\n                    'errorType': DATA_ERROR_MISSING_DATA\n                })\n            }\n        })\n    });\n\n    return errors\n}\n\nfunction validateGroupedDataDuplicates(data, categoryIndex, groupIndex, categoryColumn, groupColumn) {\n    var errors = [];\n\n    var groupValuesUsedByCategory = {};\n    _.forEach(data, function (row) {\n        var categoryValue = row[categoryIndex];\n        var groupValue = row[groupIndex];\n        if (categoryValue in groupValuesUsedByCategory) {\n            if (groupValue in groupValuesUsedByCategory[categoryValue]) {\n                errors.push({\n                    'error': 'duplicate data',\n                    'category': row[categoryIndex],\n                    'group': row[groupIndex],\n                    'categoryColumn': categoryColumn,\n                    'groupColumn': groupColumn,\n                    'errorType': DATA_ERROR_DUPLICATION\n                })\n            } else {\n                groupValuesUsedByCategory[categoryValue][groupValue] = 1;\n            }\n        } else {\n            groupValuesUsedByCategory[categoryValue] = {};\n            groupValuesUsedByCategory[categoryValue][groupValue] = 1;\n        }\n    });\n\n    return errors;\n}\n\n\n// ---------------------------------------------------------------------------\n// ERROR REPORTING\n// ---------------------------------------------------------------------------\n\nfunction errorDescription(error) {\n    switch (error.errorType) {\n        case DATA_ERROR_SETTINGS_ERROR:\n            return \"Column '\" + error.column + \"' not found\";\n\n        case DATA_ERROR_MISSING_DATA:\n            return \"The data is missing a row for \" + error.categoryColumn + \" = '\" + error.category + \"' and \" + error.groupColumn + \" = '\" + error.group + \"'\"\n\n        case DATA_ERROR_DUPLICATION:\n            if ('group' in error) {\n                return \"The data has duplicate entries for the rows with \" + error.categoryColumn + \" = '\" + error.category + \"' and \" + error.groupColumn + \" = '\" + error.group + \"'\"\n            } else {\n                return \"The data has duplicate entries for \" + error.categoryColumn + \" = '\" + error.category + \"'\"\n            }\n    }\n}\n\nfunction errorResolutionHint(error) {\n    switch (error.errorType) {\n        case DATA_ERROR_SETTINGS_ERROR:\n            return \"Make sure the column values selected for this table are valid\";\n\n        case DATA_ERROR_MISSING_DATA:\n            return \"Add rows to your source spreadsheet and try again\";\n\n        case DATA_ERROR_DUPLICATION:\n            return \"Remove data rows in your source spreadsheet and try again\"\n\n    }\n}\n\n\n// If we're running under Node - required for testing\nif (typeof exports !== 'undefined') {\n    var _ = require('../charts/vendor/underscore-min');\n    var dataTools = require('../charts/rd-data-tools');\n    var index_of_column_named = dataTools.index_of_column_named;\n\n    exports.validateSimpleData = validateSimpleData;\n    exports.validateGroupedData = validateGroupedData;\n    exports.validateData = validateData;\n    exports.DATA_ERROR_DUPLICATION = DATA_ERROR_DUPLICATION;\n    exports.DATA_ERROR_MISSING_DATA = DATA_ERROR_MISSING_DATA;\n    exports.DATA_ERROR_COMPLEX_DATA = DATA_ERROR_COMPLEX_DATA;\n    exports.DATA_ERROR_SETTINGS_ERROR = DATA_ERROR_SETTINGS_ERROR;\n}\n","/**\n * Created by Tom.Ridd on 05/05/2017.\n\nrd-chart-objects builds a chartObject with input and settings provided in the Chart Builder interface\n\n- build chartObjects for all supported chart types (bar, line, component, panel bar, panel line)\n- store sufficient data rd-graph.js can render a chart\n\n\nbuilding the chart objects it also does data transforms required by stories in\n\nspecifically...\n- sorting data points by a specified order\n- sorting series by a specified order\n\n\nTHERE IS INAPPROPRIATE SEPARATION OF POWERS BETWEEN HERE AND rd-graph.js\n\nTHE PARENT COLOUR SECTION IS TO DO WITH DISPLAY, NOT DATA CONTENT\n\n */\n\nvar defaultParentColor = '#2B8CC4';\nvar defaultChildColor = '#B3CBD9';\nvar VERSION = '1.1'; // panel charts include sort option\nvar BAR_CHART = 'bar';\nvar LINE_CHART = 'line';\nvar COMPONENT_CHART = 'component';\nvar PANEL_BAR_CHART = 'panel_bar';\nvar PANEL_LINE_CHART = 'panel_line';\n\n\n\n\n// ---------------------------------------------------------------------------\n// CHART OBJECT GENERATORS\n// build chart settings into a ChartObject for storage and rendering using rd-graph.js\n// ---------------------------------------------------------------------------\n\n\n\nfunction buildChartObject(data, chart_type, value_column,\n    category_column, secondary_column, parent_column, category_order_column, secondary_order_column,\n    chart_title, x_axis_label, y_axis_label, number_format,\n    null_value) {\n\n    // data: an array of data including headers\n    // chart_type: a chart type constant (see above)\n    //\n    // following arguments should be the string headers of the columns with data\n    //\n    // value_column: chart values (current defaults to 'value')\n    // category_column: the primary chart column (bars, series, component groups)\n    // secondary_column (optional): the secondary chart column (sub-bars, time, panels, component items)\n    // parent_column (optional): the column item parent values may be kept in\n    // category_order_column (optional): to sort categories\n    // secondary_order_column (optional): to sort items such as panels or component items\n    //\n    // other values should be self explanatory\n\n    // case statement to build chart based on type\n\n    var null_column_value = null_value ? null_value : '[None]';\n    switch(chart_type.toLowerCase()) {\n        case BAR_CHART:\n            var dataRows = _.clone(data);\n            var headerRow = dataRows.shift();\n            if(secondary_column === null_column_value || secondary_column === null) {\n                return barchartSingleObject(headerRow, dataRows, category_column, parent_column, category_order_column, chart_title, x_axis_label, y_axis_label, number_format);\n            } else {\n                return barchartDoubleObject(headerRow, dataRows, category_column, secondary_column, parent_column, category_order_column, chart_title, x_axis_label, y_axis_label, number_format);\n            }\n\n        case LINE_CHART:\n            return linechartObject(data, category_column, secondary_column, chart_title, x_axis_label, y_axis_label, number_format, category_order_column);\n\n        case COMPONENT_CHART:\n            return componentChartObject(data, category_column, secondary_column, chart_title, x_axis_label, y_axis_label, number_format, row_order_column, secondary_order_column) ;\n        case PANEL_BAR_CHART:\n            return panelBarchartObject(data, category_column, secondary_column, chart_title, x_axis_label, y_axis_label, number_format, category_order_column, secondary_order_column);\n\n        case PANEL_LINE_CHART:\n            return panelLinechartObject(data, secondary_column, category_column, chart_title, x_axis_label, y_axis_label, number_format, secondary_order_column) ;\n        default:\n            return null;\n    }\n}\n\n// -----------------------------------------------------------------------------------------\n\n\n\n\n\n\n\n// ---------------------------------------------------------------------------\n// CHARTOBJECT GENERATORS\n// build chart settings into a ChartObject for storage and rendering using rd-graph.js\n// ---------------------------------------------------------------------------\n\n\n// ----------------------------------\n// BARCHART\n// ----------------------------------\n\nfunction barchartObject(data, primary_column, secondary_column, parent_column, order_column,\n                        chart_title, x_axis_label, y_axis_label, number_format) {\n    var dataRows = _.clone(data);\n    var headerRow = dataRows.shift();\n    if(isSimpleBarchart(secondary_column)) {\n        return barchartSingleObject(headerRow, dataRows, primary_column, parent_column, order_column, chart_title, x_axis_label, y_axis_label, number_format);\n    } else {\n        return barchartDoubleObject(headerRow, dataRows, primary_column, secondary_column, parent_column, order_column, chart_title, x_axis_label, y_axis_label, number_format);\n    }\n}\n\nfunction isSimpleBarchart(column_name) {\n    return column_name === '[None]' || column_name === null;\n}\n\nfunction barchartSingleObject(headerRow, dataRows, category_column, parent_column, order_column, chart_title, x_axis_label, y_axis_label, number_format) {\n    var indices = getIndices(headerRow, category_column, null, parent_column, order_column);\n\n    var categories = uniqueCategories(dataRows, indices['category'], indices['order']);\n    var values = _.map(categories, function(category) {\n        return valueForCategory(dataRows, indices['category'], indices['value'], indices['parent'], category);\n    });\n\n    var parents = [];\n    if(indices['parent'] !== null) {\n        parents = _.unique(_.map(dataRows, function(row) { return row[indices['parent']]; }));\n    }\n\n    return {\n        'type':'bar',\n        'title':{'text':chart_title},\n        'parent_child': indices['parent'] !== null,\n        'xAxis':{'title':{'text':x_axis_label}, 'categories':categories},\n        'yAxis':{'title':{'text':y_axis_label}},\n        'series': [{'name':category_column, 'data': values}],\n        'number_format':number_format,\n        'parents':parents,\n        'version':VERSION\n    };\n}\n\nfunction barchartDoubleObject(headerRow, dataRows, category1, category2, parent_column, order_column, chart_title, x_axis_label, y_axis_label, number_format) {\n    var indices = getIndices(headerRow, category1, category2, parent_column, order_column);\n\n    var categories = uniqueCategories(dataRows, indices['category'], indices['order']);\n\n    var series = uniqueDataInColumnMaintainOrder(dataRows, indices['secondary']);\n\n    var seriesData = [];\n    series.forEach(function(s){\n        var seriesRows = _.filter(dataRows, function(row) { return row[indices['secondary']] === s;});\n        var values = [];\n        _.forEach(categories, function(category) {\n            values.push(valueForCategory(seriesRows, indices['category'], indices['value'], indices['parent'], category));\n        });\n        seriesData.push({'name':s, 'data': values});\n    });\n\n    return {\n        'type':'bar',\n        'title':{'text': chart_title},\n        'xAxis':{'title':{'text':x_axis_label}, 'categories':categories},\n        'yAxis':{'title':{'text':y_axis_label}},\n        'series': sortChartSeries(seriesData),\n        'number_format':number_format,\n        'version':VERSION\n    };\n}\n\n\n\n\n// ----------------------------------\n// LINE CHART\n// ----------------------------------\n\nfunction linechartObject(data, categories_column, series_column, chart_title, x_axis_label, y_axis_label, number_format, series_order_column) {\n    var dataRows = _.clone(data);\n    var headerRow = dataRows.shift();\n    var series_order_column_name = series_order_column === '[None]' ? null : series_order_column;\n\n    var indices = getIndices(headerRow, categories_column, series_column, null, null, series_order_column_name);\n    var categories = uniqueDataInColumnMaintainOrder(dataRows, indices['category']);\n    var seriesNames = uniqueDataInColumnMaintainOrder(dataRows, indices['secondary']);\n\n    /*\n    This is going to require some major refactoring down line\n    For now we are going to compromise with a degree of code ugliness, build tests, and then get to beautification\n     */\n    var series_index = indices['secondary'];\n    var series_order_index = indices['custom'];\n    if (series_order_index) {\n        var order_values = _.map(seriesNames, function(series) {\n            var index = _.findIndex(dataRows, function(row) {\n                return row[series_index] === series;\n            });\n            return dataRows[index][series_order_index];\n        });\n        seriesNames = _.map(_.sortBy(_.zip(seriesNames, order_values), function(pair) { return pair[1]; }), function(pair) { return pair[0]; });\n    }\n\n    var chartSeries = [];\n    _.forEach(seriesNames, function(seriesName) {\n        var values = [];\n        _.forEach(categories, function(category) {\n            values.push(valueForCategoryAndSeries(dataRows, indices['category'], category, indices['secondary'], seriesName, indices['value']));\n        });\n        chartSeries.push({'name':seriesName, 'data':values});\n    });\n\n    return {\n        'type':'line',\n        'title':{'text':chart_title},\n        'xAxis':{'title':{'text':x_axis_label}, 'categories':categories},\n        'yAxis':{'title':{'text':y_axis_label}},\n        'series': sortChartSeries(chartSeries),\n        'number_format':number_format,\n        'version':VERSION};\n}\n\n\n\n\n// ----------------------------------\n// COMPONENT CHART\n// ----------------------------------\n\nfunction componentChartObject(data, grouping_column, series_column, chart_title, x_axis_label, y_axis_label, number_format, row_order_column, series_order_column) {\n\n    var dataRows = _.clone(data);\n    var headerRow = dataRows.shift();\n    var indices = getIndices(headerRow, grouping_column, series_column, null, row_order_column, series_order_column);\n\n    var groups = null;\n    if(isUndefinedOrNull(row_order_column) || row_order_column === '[None]') {\n        groups = uniqueDataInColumnMaintainOrder(dataRows, indices['category']);\n    } else {\n        groups = uniqueDataInColumnOrdered(dataRows, indices['category'], indices['order']);\n    }\n\n    var seriesNames = null;\n    if(isUndefinedOrNull(series_order_column) || series_order_column === '[None]') {\n        seriesNames = uniqueDataInColumnMaintainOrder(dataRows, indices['secondary']).reverse();\n    } else {\n        seriesNames = uniqueDataInColumnOrdered(dataRows, indices['secondary'], indices['custom']).reverse();\n    }\n\n    var chartSeries = seriesNames.map(function(seriesName)\n    {\n        var values = groups.map(function(group) {\n            return valueForCategoryAndSeries(dataRows, indices['category'], group, indices['secondary'], seriesName, indices['value'])\n        });\n        return {'name': seriesName, 'data': values};\n    });\n\n    return {\n        'type':'component',\n        'title':{'text':chart_title},\n        'xAxis':{'title':{'text':x_axis_label}, 'categories':groups},\n        'yAxis':{'title':{'text':y_axis_label}},\n        'series': chartSeries,\n        'number_format':number_format,\n        'version':VERSION\n    };\n}\n\n\n\n// ----------------------------------\n// PANEL BAR CHART\n// ----------------------------------\n\nfunction panelBarchartObject(data, category_column, panel_column, chart_title, x_axis_label, y_axis_label, number_format, category_order_column, panel_order_column) {\n    var dataRows = _.clone(data);\n    var headerRow = dataRows.shift();\n\n    var indices = getIndices(headerRow, category_column, panel_column, null, category_order_column, panel_order_column);\n    var categories = uniqueCategories(dataRows, indices['category'], indices['order']);\n\n    var panelValues = null;\n    if(isUndefinedOrNull(panel_order_column) || panel_order_column === '[None]') {\n        panelValues = uniqueDataInColumnMaintainOrder(dataRows, indices['secondary']);\n    } else {\n        panelValues = uniqueDataInColumnOrdered(dataRows, indices['secondary'], indices['custom'])\n    }\n\n    var panels = panelValues.map(function(panelValue) {\n        var panelRows = _.filter(dataRows, function(row) { return row[indices['secondary']] === panelValue;});\n\n        var values = categories.map(function(category) {\n           return valueForCategory(panelRows, indices['category'], indices['value'], indices['parent'], category);\n        });\n\n        return {\n            'type':'small_bar',\n            'title':{'text':panelValue},\n            'xAxis':{'title':{'text':x_axis_label}, 'categories':categories},\n            'yAxis':{'title':{'text':y_axis_label}},\n            'series': [{'name':category_column, 'data': values}],\n            'number_format':number_format\n        };\n    });\n\n    return {\n        'type': 'panel_bar_chart',\n        'title': {'text': chart_title},\n        'xAxis': {'title': {'text': x_axis_label}, 'categories': categories},\n        'yAxis': {'title': {'text': y_axis_label}},\n        'panels': panels,\n        'version':VERSION\n    }\n}\n\n\n\n\n// ----------------------------------\n// PANEL LINE CHART\n// ----------------------------------\n\n\nfunction panelLinechartObject(data, x_axis_column, panel_column, chart_title, x_axis_label, y_axis_label, number_format, panel_order_column) {\n    var dataRows = _.clone(data);\n    var headerRow = dataRows.shift();\n    var indices = getIndices(headerRow, panel_column, x_axis_column, null, null, panel_order_column);\n\n    var panelNames = null;\n    if(isUndefinedOrNull(panel_order_column) || panel_order_column === '[None]') {\n        panelNames = uniqueDataInColumnMaintainOrder(dataRows, indices['category']);\n    } else {\n        panelNames = uniqueDataInColumnOrdered(dataRows, indices['category'], indices['custom'])\n    }\n    var xAxisNames = uniqueDataInColumn(dataRows, indices['secondary']);\n\n    var panelCharts = _.map(panelNames, function(panelName) {\n            var values = _.map(xAxisNames, function(category) {\n                 return valueForCategoryAndSeries(dataRows, indices['secondary'], category, indices['category'], panelName, indices['value']);\n            });\n\n            return {'type':'line',\n                'title':{'text':panelName},\n                'xAxis':{'title':{'text':x_axis_label}, 'categories':xAxisNames},\n                'yAxis':{'title':{'text':y_axis_label}},\n                'series': [{'name':panelName, 'data':values}],\n                'number_format':number_format\n            };\n        });\n\n    return {\n        'type':'panel_line_chart',\n        'title':{'text':chart_title},\n        'panels': panelCharts,\n        'number_format':number_format,\n        'version':VERSION\n    };\n}\n\n\n\n\n// ---------------------------------------------------------------------------\n// PROCESSING\n// ---------------------------------------------------------------------------\n\nfunction getIndices(headerRow, category_column, secondary_column, parent_column, order_column, custom_column) {\n    var headersLower = _.map(headerRow, function(item) { return item.trim().toLowerCase();});\n\n    var category = isUndefinedOrNull(category_column) ? null: index_of_column_named(headersLower, category_column);\n    var order = isUndefinedOrNull(order_column) ? category : index_of_column_named(headersLower, order_column);\n    var parent = isUndefinedOrNull(parent_column) ? null: index_of_column_named(headersLower, parent_column);\n    var secondary = isUndefinedOrNull(secondary_column) ? null: index_of_column_named(headersLower, secondary_column);\n    var custom = isUndefinedOrNull(custom_column) ? null: index_of_column_named(headersLower, custom_column);\n\n    return {\n        'category': category >= 0 ? category : null,\n        'order': order >= 0 ? order : null,\n        'secondary': secondary >= 0 ? secondary : null,\n        'value': index_of_column_named(headersLower, 'value'),\n        'parent': parent >= 0 ? parent : null,\n        'custom': custom >= 0 ? custom : null\n    };\n}\n\nfunction uniqueCategories(dataRows, categoryIndex, orderIndex) {\n\n    if(orderIndex) {\n        return uniqueDataInColumnOrdered(dataRows, categoryIndex, orderIndex);\n    } else {\n        return uniqueDataInColumnMaintainOrder(dataRows, categoryIndex);\n    }\n}\n\nfunction valueForCategory(dataRows, categoryIndex, valueIndex, parentIndex, categoryValue) {\n\n    var rows = dataRows.filter(function(row) { return row[categoryIndex] === categoryValue });\n    if(rows.length === 0) {\n        return {y: 0, category: categoryValue};\n    } else {\n        var row = rows[0];\n        if(row[categoryIndex] === categoryValue) {\n            var valueIsNumeric = isNumber(row[valueIndex]);\n            if(parentIndex) {\n                var parentValue = row[parentIndex];\n                var relationships = {is_parent:parentValue === categoryValue,\n                    is_child: parentValue !== categoryValue, parent:parentValue};\n                if(relationships['is_parent']){\n                    return {\n                        y: valueIsNumeric ? parseFloat(row[valueIndex]) : 0,\n                        relationships: relationships,\n                        category: row[categoryIndex],\n                        color: defaultParentColor,\n                        text: valueIsNumeric ? 'number' : row[valueIndex]\n                    };\n                } else {\n                    return {\n                        y: valueIsNumeric ? parseFloat(row[valueIndex]) : 0,\n                        relationships: relationships,\n                        category: row[categoryIndex],\n                        color: defaultChildColor,\n                        text: valueIsNumeric ? 'number' : row[valueIndex]\n                    };\n                }\n            } else {\n                return {y: valueIsNumeric ? parseFloat(row[valueIndex]) : 0,\n                    category: row[categoryIndex],\n                    text: valueIsNumeric ? 'number' : row[valueIndex]};\n            }\n        }\n    }\n}\n\n\nfunction valueForCategoryAndSeries(dataRows, categoryIndex, categoryValue, seriesIndex, seriesValue, valueIndex) {\n\n    var rows = _.filter(dataRows, function(row) { return row[categoryIndex] === categoryValue && row[seriesIndex] === seriesValue });\n    return rows.length > 0 ? parseFloat(rows[0][valueIndex]) : 0;\n}\n\nfunction isNumber(value) {\n    return !isNaN(parseFloat(value));\n}\n\nfunction isUndefinedOrNull(value) {\n    return value === undefined || value === null;\n}\n\n\n\n// ---------------------------------------------------------------------------\n// SORTING\n// ---------------------------------------------------------------------------\n\nfunction sortChartSeries(serieses) {\n\n    // check if these series are numerically sortable\n    var invalidSerieses = serieses.filter(function(series) {\n       return isNaN(toNumberSortValue(series.name))\n    });\n    if(invalidSerieses.length > 0) { return serieses; }\n\n    // if series sortable assign a sort value\n    serieses.forEach(function (series) {\n        series.name_value = toNumberSortValue(series.name);\n    });\n\n    // return the sorted series\n    return _.sortBy(serieses, function (series) {\n        return series.name_value;\n    })\n}\n\nfunction toNumberSortValue(value) {\n    var floatVal = parseFloat(value);\n    if(isNaN(floatVal)) {\n    return parseFloat(value.substring(1));\n    } else {\n    return floatVal;\n    }\n}\n\n\n\n\n// If we're running under Node - required for testing\nif(typeof exports !== 'undefined') {\n    var _ = require('../charts/vendor/underscore-min');\n    var dataTools = require('../charts/rd-data-tools');\n    var builderTools = require('../cms/rd-builder');\n\n    var index_of_column_named = dataTools.index_of_column_named;\n    var uniqueDataInColumnMaintainOrder = dataTools.uniqueDataInColumnMaintainOrder;\n    var getColumnIndex = builderTools.getColumnIndex;\n\n    exports.barchartObject = barchartObject;\n    exports.linechartObject = linechartObject;\n    exports.componentChartObject = componentChartObject;\n    exports.panelLinechartObject = panelLinechartObject;\n    exports.panelBarchartObject = panelBarchartObject;\n}\n","/**\n * Created by Tom.Ridd on 25/05/2017.\n\nrd-table-objects builds a tableObject with input and settings provided in the Table Builder interface\n\n- build tableObjects for all supported table types (simple, grouped)\n- support tables with multiple value columns\n- support parent-child relationships in the tables\n\nbuilding the table objects it also does data transforms required by stories from user research\n\nspecifically...\n- support sorting both, one of, or neither of rows and columns\n- inserting parent data rows where none exist\n\n */\n\nvar NONE_VALUE = '[None]';\n\n\n// ---------------------------------------------------------------------------\n// PUBLIC\n// ---------------------------------------------------------------------------\n\nfunction buildTableObject(data, title, subtitle, footer, row_column, parent_column, group_column, order_column, data_columns, column_captions, index_column_caption, group_order_column) {\n    var table = null;\n    if(!group_column || group_column === NONE_VALUE) {\n        table = simpleTable(data, title, subtitle, footer, row_column, parent_column, data_columns, order_column, column_captions, index_column_caption);\n    } else {\n        table = groupedTable(data, title, subtitle, footer, row_column, parent_column, group_column, data_columns, order_column, column_captions, index_column_caption, group_order_column);\n    }\n    return preProcessTableObject(table);\n}\n\n\n// ---------------------------------------------------------------------------\n// PREPROCESSING\n// ---------------------------------------------------------------------------\n\nfunction preProcessTableObject(tableObject) {\n    if(tableObject.type === 'simple') {\n        preProcessSimpleTableObject(tableObject);\n    } else if(tableObject.type === 'grouped') {\n        preProcessGroupedTableObject(tableObject);\n    }\n    return tableObject;\n}\n\n\n// ---------------------------------------------------------------------------\n// SIMPLE TABLE\n// ---------------------------------------------------------------------------\n\nfunction simpleTable(data, title, subtitle, footer, category_column, parent_column, data_columns, order_column, column_captions, index_column_caption) {\n    var dataRows = _.clone(data);\n    var headerRow = dataRows.shift();\n    var lowHeaders = _.map(headerRow, function(m) { return m.trim().toLowerCase(); })\n\n    var columnIndex = index_of_column_named(lowHeaders, category_column);\n    var data_column_indices = _.map(data_columns, function(data_column) { return index_of_column_named(lowHeaders, data_column); });\n\n    var parentIndex = columnIndex;\n    var hasParentChild = false;\n    if(parent_column && parent_column !== NONE_VALUE) {\n        parentIndex = index_of_column_named(lowHeaders, parent_column);\n        hasParentChild = true;\n    }\n\n    if(order_column && order_column !== NONE_VALUE) {\n        var sortIndex = index_of_column_named(lowHeaders, order_column);\n    }\n\n    var tableData = _.map(dataRows, function(item, index) {\n        var relationships = {\n                'is_parent':false,\n                'is_child':false,\n                'parent':item[columnIndex]\n        };\n        if(hasParentChild) {\n            var parent = item[parentIndex];\n            var child = item[columnIndex];\n            relationships = {\n                'is_parent': parent === child,\n                'is_child': parent !== child,\n                'parent': parent\n            }\n        }\n\n        var values = _.map(data_column_indices, function (i) { return item[i]; });\n        var sortValues = _.map(values, function (value) { return numVal(value); });\n\n        if(sortIndex) {\n            return {\n                'category': item[columnIndex],\n                'relationships': relationships,\n                'order': item[sortIndex],\n                'values': values,\n                'sort_values': sortValues\n            };\n        } else {\n            return {\n                'category': item[columnIndex],\n                'relationships': relationships,\n                'order': index,\n                'values': values,\n                'sort_values': sortValues\n            };\n        }\n    });\n\n    tableData = _.sortBy(tableData, function(item) { return item['order'];});\n\n    if(hasParentChild) {\n        tableData = adjustSimpleTableDataForParents(tableData);\n    }\n\n    var index_column = index_column_caption == null ? category_column : index_column_caption;\n\n    return {\n        'type':'simple',\n        'parent_child': hasParentChild,\n        'header': title,\n        'subtitle' :subtitle,\n        'footer' :footer,\n        'category':category_column,\n        'columns': column_captions,\n        'data': tableData,\n        'category_caption': index_column\n    };\n}\n\n\n// ---------------------------------\n// PREPROCESSING\n// ---------------------------------\n\nfunction preProcessSimpleTableObject(tableObject) {\n\n    var columnDps = columnDecimalPlaces(tableObject);\n    var couldBeYear = columnCouldBeAYear(tableObject);\n\n    tableObject.data = _.map(tableObject.data, function(item) {\n        item.values = _.map(_.zip(item.values, columnDps, couldBeYear), function(cellTuple) {\n            if(cellTuple[2] === false) {\n                return formatNumberWithDecimalPlaces(cellTuple[0], cellTuple[1]);\n            } else {\n                return cellTuple[0];\n            }\n        });\n        return item;\n    });\n}\n\nfunction columnDecimalPlaces(tableObject) {\n    var dps = [];\n    // iterate through columns\n    for(var i in tableObject.data[0].values) {\n\n        // gather all the data for that column\n        var series = _.map(tableObject.data, function(item) {\n            return item.values[i];\n        });\n        dps.push(seriesDecimalPlaces(series));\n    }\n    return dps;\n}\n\nfunction columnCouldBeAYear(tableObject) {\n    var years = [];\n\n    // iterate through columns\n    for(var i in tableObject.data[0].values) {\n\n        // gather all the data for that column\n        var series = _.map(tableObject.data, function(item) { return item.values[i]; });\n        years.push(seriesCouldBeYear(series));\n    }\n    return years;\n}\n\n\n\n// ---------------------------------\n// PARENTS\n// ---------------------------------\n\nfunction adjustSimpleTableDataForParents(tableData) {\n    var fullData = addMissingSimpleTableParentItems(tableData);\n    return reorderSimpleTableDataForParentChild(fullData);\n}\n\n\nfunction addMissingSimpleTableParentItems(tableData) {\n\n    var parents = _.uniq(_.map(tableData, function (item) {\n        return item['relationships']['parent'];\n    }));\n\n    var current_categories = _.map(tableData, function (item) {\n        return item['category'];\n    });\n    var missing_parents = _.filter(parents, function (parent) {\n        return !_.contains(current_categories, parent);\n    });\n\n    var newData = _.clone(tableData);\n    var example = tableData[0];\n    _.forEach(missing_parents, function (missing_parent) {\n\n        // find order for the new parent by finding the minimum value for it's children and subtracting 1\n        var parent_items = _.filter(tableData, function(item) { return item.relationships.parent === missing_parent; });\n        var min_order = _.min(_.map(parent_items, function(item) { return item.order; })) - 1;\n\n        var new_data_point = {\n            'category': missing_parent,\n            'order': min_order,\n            'relationships': {'is_child': false, 'is_parent': true, 'parent': missing_parent},\n            'sort_values': _.map(example['sort_values'], function (value) {\n                return 0;\n            }),\n            'values': _.map(example.values, function (value) {\n                return '';\n            })\n        };\n        newData.push(new_data_point);\n    });\n\n    return newData;\n}\n\n\nfunction reorderSimpleTableDataForParentChild(tableData) {\n    var item_dict = _.object(_.map(tableData, function(item) { return [item.category, item]; }));\n    var parents = _.uniq(_.map(tableData, function(item) { return item['relationships']['parent']; }));\n\n    var ordered_data = [];\n    _.forEach(parents, function(parent) {\n        ordered_data.push(item_dict[parent]);\n        var parent_children = _.filter(tableData, function(item) { return item['category'] !== parent && item['relationships']['parent'] === parent; });\n        ordered_data = ordered_data.concat(parent_children);\n    });\n    return ordered_data;\n}\n\n\n\n\n\n\n\n// ---------------------------------------------------------------------------\n// GROUPED TABLE\n// ---------------------------------------------------------------------------\n\nfunction groupedTable(data, title, subtitle, footer,  category_column, parent_column, group_column, data_columns, order_column, column_captions, index_column_caption, group_order_column) {\n    var DEFAULT_SORT = -2;\n    var data_by_row = _.clone(data);\n    var headerRow = data_by_row.shift();\n    var lowHeaders = _.map(headerRow, function(m) { return m.trim().toLowerCase(); })\n\n\n    // ------------------- FIND INDICES FOR THE COLUMNS --------------------------\n\n    var columnIndex = index_of_column_named(lowHeaders, category_column);\n    var data_column_indices = _.map(data_columns, function(data_column) { return index_of_column_named(lowHeaders, data_column); });\n\n    var group_column_index = index_of_column_named(lowHeaders, group_column);\n\n    var sortIndex = DEFAULT_SORT;\n    if (order_column === null) {\n        sortIndex = columnIndex;\n    } else if(order_column !== NONE_VALUE) {\n        sortIndex = index_of_column_named(lowHeaders, order_column);\n    }\n\n    var parentIndex = columnIndex;\n    var hasParentChild = false;\n    if(parent_column && parent_column !== NONE_VALUE) {\n        parentIndex = index_of_column_named(lowHeaders, parent_column);\n        hasParentChild = true;\n    }\n\n    // ----------------------- CONVERT TO DATA ITEM OBJECTS ----------------------\n    var data_by_group = getDataByGroup(data_by_row, group_column_index, group_order_column, headerRow);\n    var data_items_by_group = buildDataObjectsByGroup(data_by_group, data_by_row, group_column_index, columnIndex, hasParentChild, parentIndex, sortIndex, DEFAULT_SORT, data_column_indices);\n\n\n    // ----------------------- ADJUSTMENTS FOR PARENT CHILD ----------------------\n    data_items_by_group = adjustGroupedTableDataForParents(data_items_by_group);\n\n    // --------------------- DATA VALUES (Values by row) -------------------------\n\n    var partial_table = templateGroupTable(category_column, title, column_captions, data_items_by_group);\n\n    var group_columns = [''].concat(_.map(partial_table.groups, function (group) { return group.group; } ));\n\n    var row_categories = _.map(partial_table.groups[0].data, function(item) { return item.category; });\n    var table_data = _.map(row_categories, function(category) { return dataItemWithCategory(partial_table, category); });\n    table_data = _.sortBy(table_data, function(item) { return item['order'];});\n\n    data_items_by_group = _.map(data_items_by_group, function (group) {\n        group.data = _.sortBy(group.data, function(item) { return item['order'];});\n        return group;\n    });\n\n\n    // --------------------- COMPLETE THE TABLE OBJECT --------------------------\n    var index_column = index_column_caption == null ? category_column : index_column_caption;\n\n    return {\n        'group_columns': group_columns,\n        'type':'grouped',\n        'category': category_column,\n        'group_column': group_column,\n        'columns': column_captions,\n        'data': table_data,\n        'header':title,\n        'subtitle':subtitle,\n        'footer':footer,\n        'groups': data_items_by_group,\n        'parent_child': hasParentChild,\n        'category_caption': index_column\n    };\n}\n\n// ---------------------------------\n// PREPROCESSING\n// ---------------------------------\n\n\nfunction preProcessGroupedTableObject(tableObject) {\n    var columnDps = groupedTableDecimalPlaces(tableObject);\n    var couldBeYear = groupedTableCouldBeAYear(tableObject);\n\n\n    tableObject.groups = _.map(tableObject.groups, function(group) {\n        group.data = _.map(group.data, function(item) {\n           item.values = _.map(_.zip(item.values, columnDps, couldBeYear), function(cellTuple) {\n                if(cellTuple[2] === false) {\n                    return formatNumberWithDecimalPlaces(cellTuple[0], cellTuple[1]);\n                } else {\n                    return cellTuple[0];\n                }\n            });\n            return item;\n        });\n        return group;\n    });\n\n    // update tableObject data\n    tableObject.data = [];\n    // for each row\n    for(var rowNo in tableObject.groups[0].data) {\n        // grab a prototype cell\n        var row = _.clone(tableObject.groups[0].data[rowNo]);\n        // fill it with all contents across the groups\n        row.values = _.flatten(_.map(tableObject.groups, function(group) {\n            return group.data[rowNo].values;\n        }));\n        row.sort_values = _.flatten(_.map(tableObject.groups, function(group) {\n            return group.data[rowNo].sort_values;\n        }));\n        // add to the data\n        tableObject.data.push(row)\n    }\n\n\n    var items = _.sortBy(tableObject.groups[0].data, function(item) { return item.order; });\n    var rows = _.map(items, function(item) { return item.category; });\n    _.forEach(rows, function(row) {\n        var row_html = '<tr><th>' + row + '</th>';\n        _.forEach(tableObject.groups, function(group) {\n            var row_item = _.findWhere(group.data, {'category':row});\n            _.forEach(_.zip(row_item.values, columnDps, couldBeYear), function(cellValues) {\n                if(cellValues[2]) {\n                    row_html = row_html + '<td>' + cellValues[0] + '</td>';\n                } else {\n                    row_html = row_html + '<td>' + formatNumberWithDecimalPlaces(cellValues[0], cellValues[1]) + '</td>';\n                }\n            });\n        });\n    });\n}\n\n\nfunction groupedTableDecimalPlaces(tableObject) {\n    var dps = [];\n    // iterate through columns\n    for(var c in tableObject.groups[0].data[0].values) {\n\n        // gather all data for a column\n        var series = _.flatten(\n            _.map(tableObject.groups, function(group) {\n                return _.map(group.data, function(item) {\n                    return item.values[c];\n            })\n        }));\n        dps.push(seriesDecimalPlaces(series));\n    }\n    return dps;\n}\n\nfunction groupedTableCouldBeAYear(tableObject) {\n    var years = [];\n    // iterate through columns\n    for(var c in tableObject.groups[0].data[0].values) {\n\n        // gather all data for a column\n        var series = _.flatten(\n            _.map(tableObject.groups, function(group) {\n                return _.map(group.data, function(item) {\n                    return item.values[c];\n            })\n        }));\n        years.push(seriesCouldBeYear(series));\n    }\n    return years;\n}\n\n\n\n// ---------------------------------\n// DATA BUILDING\n// ---------------------------------\n\n\nfunction buildDataObjectsByGroup(group_values, dataRows, group_column_index, columnIndex, hasParentChild, parentIndex, sortIndex, DEFAULT_SORT, data_column_indices) {\n    return _.map(group_values, function (group) {\n        var group_data = _.filter(dataRows, function (item) {\n            return item[group_column_index] === group;\n        });\n        var group_data_items = _.map(group_data, function (item, index) {\n            var relationships = {\n                'is_parent': false,\n                'is_child': false,\n                'parent': item[columnIndex]\n            };\n            if (hasParentChild) {\n                var parent = item[parentIndex];\n                var child = item[columnIndex];\n                relationships = {\n                    'is_parent': parent === child,\n                    'is_child': parent !== child,\n                    'parent': parent\n                }\n            }\n            var sort_val = sortIndex === DEFAULT_SORT ? index : item[sortIndex];\n            var values = _.map(data_column_indices, function (i) {\n                return item[i]\n            });\n            var sortValues = _.map(values, function (value) {\n                return numVal(value);\n            });\n            return {\n                'category': item[columnIndex],\n                'relationships': relationships,\n                'order': sort_val,\n                'values': values,\n                'sort_values': sortValues\n            }\n        });\n        return {'group': group, 'data': group_data_items};\n    });\n}\n\nfunction getDataByGroup(data_by_row, group_column_index, group_order_column, headerRow) {\n    var group_values = uniqueDataInColumnMaintainOrder(data_by_row, group_column_index);\n    if (group_order_column && group_order_column !== NONE_VALUE) {\n        var group_order_index = headerRow.indexOf(group_order_column);\n        var order_values = _.map(group_values, function (item) {\n            var index = _.findIndex(data_by_row, function (row) {\n                return row[group_column_index] === item;\n            });\n            return data_by_row[index][group_order_index];\n        });\n        group_values = _.map(_.sortBy(_.zip(group_values, order_values), function (pair) {\n            return pair[1];\n        }), function (pair) {\n            return pair[0];\n        });\n    }\n    return group_values;\n}\n\nfunction dataItemWithCategory(partial_table_object, category) {\n    var values = [];\n    var sortValue = '';\n    var parentValue = '';\n    var relationships = {};\n\n    _.forEach(partial_table_object.groups, function (group) {\n        var category_item = _.findWhere(group.data, {'category': category});\n        sortValue = category_item['order'];\n        parentValue = category_item['parent'];\n        relationships = category_item['relationships'];\n        _.forEach(category_item.values, function (cell) {\n            values.push(cell);\n        })\n    });\n\n    var sortValues = _.map(values, function (val) { return numVal(val);});\n\n    return {\n        'category': category,\n        'relationships': relationships,\n        'parent': parentValue,\n        'order': sortValue,\n        'values': values,\n        'sort_values': sortValues\n    };\n}\n\n\nfunction templateGroupTable(category_column, title, column_captions, group_series) {\n    return {\n        'type': 'grouped',\n        'category': category_column,\n        'title': {'text': 'Grouped Table'},\n        'header': title,\n        'columns': column_captions,\n        'groups': group_series\n    };\n}\n\n\n\n\n// ---------------------------------\n// PARENT-CHILD\n// ---------------------------------\n\n\nfunction adjustGroupedTableDataForParents(tableData) {\n    var fullData = addMissingGroupedTableParentItems(tableData);\n    return reorderGroupedTableDataForParentChild(fullData);\n}\n\nfunction addMissingGroupedTableParentItems(tableData) {\n\n    // Find all existing parents\n    var parents = _.uniq(\n        _.flatten(\n        _.map(tableData, function (column) {\n            return _.map(column.data, function(cell) {\n               return cell.relationships.parent\n            });\n        }\n        )\n    ));\n\n    // Find all existing rows\n    var current_categories = _.uniq(\n        _.flatten(\n        _.map(tableData, function (column) {\n            return _.map(column.data, function(cell) {\n               return cell.category\n            });\n        }\n        )\n    ));\n\n    // Find rows that need to be added\n    var missing_parents = _.filter(parents, function (parent) {\n        return !_.contains(current_categories, parent);\n    });\n\n    // Build the new data items\n    var newData = _.clone(tableData);\n    var example = tableData[0].data[0];\n    _.forEach(missing_parents, function (missing_parent) {\n\n        // find order for the new parent by finding the minimum value for it's children and subtracting 1\n        var parent_items = _.filter(_.flatten(_.map(tableData, function(column) { return column.data})), function(item) { return item.relationships.parent === missing_parent; });\n        var min_order = _.min(_.map(parent_items, function(item) { return item.order; })) - 1;\n\n        // build the new data points\n        _.forEach(newData, function(group) {\n            var new_data_point = {\n                'category': missing_parent,\n                'order': min_order,\n                'relationships': {'is_child': false, 'is_parent': true, 'parent': missing_parent},\n                'sort_values': _.map(example['sort_values'], function (value) {\n                    return 0;\n                }),\n                'values': _.map(example.values, function (value) {\n                    return '';\n                })\n            };\n            group.data.push(new_data_point)\n        });\n    });\n\n    return newData;\n}\n\nfunction reorderGroupedTableDataForParentChild(tableData) {\n    var item_dict = _.object(_.map(tableData, function(item) { return [item.category, item]; }));\n    var parents = _.uniq(\n        _.flatten(\n        _.map(tableData, function (column) {\n            return _.map(column.data, function(cell) {\n               return cell.relationships.parent\n            });\n        }\n        )\n    ));\n\n    _.forEach(tableData, function(group) {\n        var item_dict = _.object(_.map(group.data, function(item) { return [item.category, item]; }));\n        var ordered_data = [];\n        _.forEach(parents, function(parent) {\n            ordered_data.push(item_dict[parent]);\n            var parent_children = _.filter(group.data, function(item) { return item['category'] !== parent && item['relationships']['parent'] === parent; });\n            ordered_data = ordered_data.concat(parent_children);\n        });\n        group.data = ordered_data;\n    });\n\n    return tableData;\n}\n\n\n\n// ---------------------------------------------------------------------------\n// COMMON FUNCTIONS\n// ---------------------------------------------------------------------------\n\nfunction preProcessGroupedTableObject(tableObject) {\n    var columnDps = groupedTableDecimalPlaces(tableObject);\n    var couldBeYear = groupedTableCouldBeAYear(tableObject);\n\n\n    tableObject.groups = _.map(tableObject.groups, function(group) {\n        group.data = _.map(group.data, function(item) {\n           item.values = _.map(_.zip(item.values, columnDps, couldBeYear), function(cellTuple) {\n                if(cellTuple[2] === false) {\n                    return formatNumberWithDecimalPlaces(cellTuple[0], cellTuple[1]);\n                } else {\n                    return cellTuple[0];\n                }\n            });\n            return item;\n        });\n        return group;\n    });\n\n    // update tableObject data\n    tableObject.data = [];\n    // for each row\n    for(var rowNo in tableObject.groups[0].data) {\n        // grab a prototype cell\n        var row = _.clone(tableObject.groups[0].data[rowNo]);\n        // fill it with all contents across the groups\n        row.values = _.flatten(_.map(tableObject.groups, function(group) {\n            return group.data[rowNo].values;\n        }));\n        row.sort_values = _.flatten(_.map(tableObject.groups, function(group) {\n            return group.data[rowNo].sort_values;\n        }));\n        // add to the data\n        tableObject.data.push(row)\n    }\n\n\n    var items = _.sortBy(tableObject.groups[0].data, function(item) { return item.order; });\n    var rows = _.map(items, function(item) { return item.category; });\n    _.forEach(rows, function(row) {\n        var row_html = '<tr><th>' + row + '</th>';\n        _.forEach(tableObject.groups, function(group) {\n            var row_item = _.findWhere(group.data, {'category':row});\n            _.forEach(_.zip(row_item.values, columnDps, couldBeYear), function(cellValues) {\n                if(cellValues[2]) {\n                    row_html = row_html + '<td>' + cellValues[0] + '</td>';\n                } else {\n                    row_html = row_html + '<td>' + formatNumberWithDecimalPlaces(cellValues[0], cellValues[1]) + '</td>';\n                }\n            });\n        });\n    });\n}\n\nfunction numVal(value, defaultVal) {\n    var string = String(value).replace(/\\,/g, '')\n    var num = Number(string);\n    return num ? num : value;\n}\n\n\n\n\n\n// function validateAndAdjust(data, rowIndex, columnIndex, sortIndex, parentIndex, valueIndex) {\n//     var missingData = [];\n//     var doubleData = [];\n\n//     var rowItems = _.uniq(_.map(data, function(item) { return item[rowIndex]; }));\n//     var columnItems = _.uniq(_.map(data, function(item) { return item[columnIndex]; }));\n\n//     var mapOfPairs = _.object(_.map(rowItems, function(item) {\n//        return [item, _.map(_.filter(data, function(row) { return row[rowIndex] === item}), function (row) {\n//             return row[columnIndex]\n//        })];\n//     }));\n\n//     _.forEach(rowItems, function (row) {\n//         _.forEach(columnItems, function (col) {\n//             if(!_.contains(mapOfPairs[row], col)) {\n//                 missingData.push({'category': row, 'group': col})\n//             }\n//         })\n//     });\n\n//     if(missingData.length > 0) {\n//         _.forEach(missingData, function (item) {\n//             var newRow = _.map(_.range(data[0].length), function(i) { return '' });\n//             newRow[rowIndex] = item['category'];\n//             newRow[columnIndex] = item['group'];\n//             data.push(newRow)\n//         });\n//         return data;\n//     }\n//     return null\n// }\n\n\n\n// If we're running under Node - required for testing\nif(typeof exports !== 'undefined') {\n    var _ = require('../charts/vendor/underscore-min');\n    var dataTools = require('../charts/rd-data-tools');\n    var builderTools = require('../cms/rd-builder');\n    var uniqueDataInColumnMaintainOrder = dataTools.uniqueDataInColumnMaintainOrder;\n    var seriesDecimalPlaces = dataTools.seriesDecimalPlaces;\n    var seriesCouldBeYear = dataTools.seriesCouldBeYear;\n    var formatNumberWithDecimalPlaces = dataTools.formatNumberWithDecimalPlaces;\n    var getColumnIndex = builderTools.getColumnIndex;\n    var index_of_column_named = dataTools.index_of_column_named;\n\n    exports.buildTableObject = buildTableObject;\n    exports.simpleTable = simpleTable;\n    exports.groupedTable = groupedTable;\n}\n","/**\n * Created by Tom.Ridd on 05/05/2017.\n\nrd-table renders tableObjects according to the requirements that were identified during the ethnicity facts & figures project\n\nspecifically...\n- rendering methods for all chart types (bar, line, component, panel bar, panel line)\n- render tables with parent-child relationships correctly\n    -  in a parent-child table parent rows should be bold and childen light\n\n\nrd-table is only used to preview tables in the table builder. tables in the static site are rendered using CSS/Html by the templates\n\n */\n\n\n// ---------------------------------------------------------------------------\n// PUBLIC\n// ---------------------------------------------------------------------------\n\nfunction drawTable(container_id, tableObject) {\n\n    preProcessTableObject(tableObject);\n\n    if (tableObject.type === 'simple') {\n        return simpleHtmlTable(container_id, tableObject);\n    } else if (tableObject.type === 'grouped') {\n        return groupedHtmlTable(container_id, tableObject);\n    }\n}\n\n\n\n\n// ---------------------------------------------------------------------------\n// SIMPLE\n// ---------------------------------------------------------------------------\n\nfunction simpleHtmlTable(container_id, tableObject) {\n\n    var table_html = \"\";\n    table_html = table_html + \"<table class='table table-sm'>\";\n    table_html = appendSimpleTableHeader(table_html, tableObject);\n    table_html = appendSimpleTableBody(table_html, tableObject);\n    table_html = table_html + \"</table>\";\n\n    $(\"#\" + container_id).html(table_html);\n\n    return true;\n}\n\nfunction appendSimpleTableHeader(table_html, tableObject) {\n    var header_html = \"\";\n    if (tableObject['category_caption'] == null) {\n        header_html = \"<thead><tr><th></th>\";\n    } else {\n        header_html = \"<thead><tr><th>\" + tableObject.category_caption + \"</th>\";\n    }\n\n    _.forEach(tableObject.columns, function (column) {\n        header_html = header_html + '<th>' + column + '</th>';\n    });\n    header_html = header_html + \"</tr></thead>\"\n    return table_html + header_html;\n}\n\nfunction appendSimpleTableBody(table_html, tableObject) {\n    var body_html = \"<tbody>\";\n    _.forEach(tableObject.data, function (item) {\n        body_html = body_html + \"<tr>\";\n        if (tableObject.parent_child) {\n            if (item.relationships.is_parent) {\n                body_html = body_html + '<th class=\"parent_row\">'\n            } else {\n                body_html = body_html + '<th class=\"child_row\">'\n            }\n        } else {\n            body_html = body_html + '<th>'\n        }\n        body_html = body_html + item.category + '</th>';\n\n        _.forEach(item.values, function (cellValue) {\n            body_html = body_html + '<td>' + cellValue + '</td>';\n        });\n        body_html = body_html + \"</tr>\";\n    });\n    body_html = body_html + \"</tbody>\";\n    return table_html + body_html;\n}\n\n\n\n\n\n// ---------------------------------------------------------------------------\n// GROUPED\n// ---------------------------------------------------------------------------\n\nfunction groupedHtmlTable(container_id, tableObject) {\n\n    var table_html = \"\";\n    table_html = table_html + \"<table class='table table-sm'>\";\n    table_html = appendGroupTableHeader(table_html, tableObject);\n    table_html = appendGroupedTableBody(table_html, tableObject)\n    table_html = table_html + \"</table>\";\n\n    table_html = insertTableFooter(table_html, tableObject);\n\n    $(\"#\" + container_id).html(table_html);\n\n    return true;\n}\n\n\nfunction appendGroupedTableBody(table_html, tableObject) {\n    var body_html = '<tbody>';\n\n    var items = _.sortBy(tableObject.groups[0].data, function (item) { return item.order; });\n\n    _.forEach(items, function (item) {\n        var row = item.category;\n        var row_html = '<tr>';\n        if (tableObject.parent_child) {\n            if (item.relationships.is_parent) {\n                row_html = row_html + '<th class=\"parent_row\">'\n            } else {\n                row_html = row_html + '<th class=\"child_row\">'\n            }\n        } else {\n            row_html = row_html + '<th>'\n        }\n        row_html = row_html + row + '</th>';\n\n        _.forEach(tableObject.groups, function (group) {\n            var row_item = _.findWhere(group.data, { 'category': row });\n            _.forEach(row_item.values, function (cellValue) {\n                row_html = row_html + '<td>' + cellValue + '</td>';\n            });\n        });\n        row_html = row_html + '</tr>';\n        body_html = body_html + row_html;\n    });\n    body_html = body_html + \"</tbody>\";\n    return table_html + body_html;\n}\n\n\nfunction appendGroupTableHeader(table_html, tableObject) {\n    var header_html = '';\n    if (tableObject['category_caption'] == null) {\n        header_html = \"<thead><tr><th></th>\";\n    } else {\n        header_html = \"<thead><tr><th>\" + tableObject.category_caption + \"</th>\";\n    }\n\n    // Add a row with titles for each group\n    _.forEach(tableObject.groups, function (group) {\n        header_html = header_html + multicell(group.group, tableObject.columns.length);\n    });\n    header_html = header_html + '</tr>';\n\n    // Check if we need to add a second row (based if any column headings exist)\n    var doSecondRow = false;\n    _.forEach(tableObject.columns, function (column) {\n        if (column !== '') {\n            doSecondRow = true;\n        }\n    });\n\n    // If a second row is required add it\n    if (doSecondRow) {\n        header_html = header_html + '<tr><td></td>';\n        _.forEach(tableObject.groups, function (group) {\n            _.forEach(tableObject.columns, function (column) {\n                header_html = header_html + '<td>' + column + '</td>';\n            });\n        });\n        header_html = header_html + '</tr>';\n    }\n\n    header_html = header_html + '</thead>';\n\n    return table_html + header_html;\n}\n\n\n\n// ---------------------------------------------------------------------------\n// OTHER\n// ---------------------------------------------------------------------------\n\nfunction appendTableTitle(table_html, tableObject) {\n    if (tableObject.header && tableObject.header !== '') {\n        return table_html + \"<div class='table-title heading-small'>\" + tableObject.header + \"</div>\";\n    } else {\n        return table_html;\n    }\n}\n\nfunction appendTableSubtitle(table_html, tableObject) {\n    if (tableObject.subtitle && tableObject.subtitle !== '') {\n        return table_html + \"<div class='table-subtitle'>\" + tableObject.subtitle + \"</div>\";\n    } else {\n        return table_html;\n    }\n}\n\nfunction insertTableFooter(table_html, tableObject) {\n    if (tableObject.footer && tableObject.footer !== '') {\n        return table_html + \"<div class='table-footer'>\" + tableObject.footer + \"</div>\";\n    } else {\n        return table_html;\n    }\n}\n\nfunction multicell(text, total_cells) {\n    return '<td colspan=' + total_cells + '>' + text + '</td>';\n}\n","$(document).ready(function () {\n  var $stickies = $(\".sticky-js\");\n  $.each($stickies, function () {\n    var stickyPosition = parseInt($(this).position().top);\n    $(window).scroll(function () {\n      var scrollTop = $(window).scrollTop();\n      if (scrollTop >= stickyPosition) {\n        $(this).addClass('sticky-js-fixed');\n      } else {\n        $(this).removeClass('sticky-js-fixed');\n      }\n    }.bind(this));\n  });\n});\n"],"sourceRoot":"../src"}