{"version":3,"sources":["chartbuilder2.js"],"names":[],"mappingsfile":"chartbuilder2.js","sourcesContent":["\n/*\n    Functionality of chartbuilder including the main methods that run each stage\n\n\n    On open **initialiseForm()**\n    - grab current_settings from dimension.chart_2_source_data if such a thing exists\n    - if current_settings doesn't exist open with the data area open.\n    - otherwise set the current_settings from file, paste data into the data panel and run the On new data routine below\n\n    On new data (changing data in the data panel area and clicking Okay) **handleNewData()**\n    - use an AJAX call to the /get-valid-presets-for-data endpoint to add extra values **buildDataWithPreset()**\n    - populate the chart builder dropdowns with correct values **populateChartOptions(), populateEthnicityPresets()**\n    - if any settings currently exist apply as many as are still relevant **setupChartbuilderWithSettings()**\n\n    On settings changes\n    - validate they will make a viable chart **getTips()**\n    - if so use the rd chart object factory and renderer to display a preview **preview()**\n    - otherwise display an error and tip to fix it **displayTips()**\n\n    On save\n    - build a chart object with the rd-chart-object factory **buildChartObject()**\n    - create a chart_settings lump of json **getChartPageSettings()**\n    - post both to <dimension>/create-chart endpoint **postChartObject()**\n */\n\n// The main working data variables\nvar presets = [];\nvar chart_data = null;\n\n// Variables that needs to be maintained when the user makes changes to the text data\nvar current_data = \"\";\nvar current_settings = null;\n\n$(document).ready(function () {\n\n    // add events to buttons\n    $('#preview').click(preview);\n    $('#confirm-data').click(setChartData);\n    $('#edit-data').click(editChartData);\n    $('#cancel-edit-data').click(cancelEditData);\n    $('#save').click(saveChart);\n    $('#exit').click(back);\n\n    function back(evt) {\n        window.location.replace(url_edit_dimension)\n    }\n\n    /*\n    Events from the DATA ENTRY PANEL\n    */\n    function setChartData(evt) {\n        handleNewData(function () {\n            if (current_settings) {\n                setupChartbuilderWithSettings(current_settings)\n            }\n            preview()\n        });\n        $('#data-panel').hide();\n        $('#edit-panel').show();\n    }\n\n    function editChartData(evt) {\n        current_data = $('#data_text_area').val();\n        current_settings = getChartPageSettings();\n        $('#data-panel').show();\n        $('#edit-panel').hide();\n    }\n\n    function cancelEditData(evt) {\n        $('#data_text_area').val(current_data);\n        $('#data-panel').hide();\n        $('#edit-panel').show();\n    }\n\n\n    /*\n    Initialise the main editor after DATA ENTRY PANEL change\n    */\n\n    function handleNewData(on_success) {\n\n        // get the data\n        var tabbedData = $(\"#data_text_area\").val();\n\n        // set the DATA DISPLAY content\n        chart_data = textToData(tabbedData);\n        if (chart_data.length > 0) {\n            message = chart_data.length - 1 + ' rows by ' + chart_data[0].length + ' columns'\n        }\n        $('#data-description').html(message);\n\n        // update options in drop-downs\n        var headers = chart_data[0];\n        populateChartOptions(headers);\n\n        // call the backend to do the presets heavy lifting\n        var ethnicity_data = get_ethnicity_values(chart_data);\n        $.ajax({\n            type: \"post\",\n            url: url_auto_data,\n            dataType: 'json',\n            data: JSON.stringify({ 'data': ethnicity_data }),\n            contentType: 'application/json; charset=utf-8',\n            success: function (response) {\n                // upon heavy lifting complete\n\n                // populate the ethnicity presets from the response\n                presets = response['presets'];\n                populateEthnicityPresets(presets);\n\n                // show the presets (step 2) and chart type (step 3) section\n                $('#ethnicity_settings_section').show();\n                $('#select_chart_type').show();\n\n                // any further processing\n                if (on_success) {\n                    on_success();\n                }\n            },\n            failure: function () {\n                console.log('failure');\n            },\n            error: function (err) {\n                console.log(err);\n            }\n        });\n    }\n\n    function get_ethnicity_values(data) {\n        var all_data = _.clone(data);\n        var headers = all_data.shift();\n\n        var column = get_ethnicity_column(headers);\n        if (column >= 0) {\n            return _.pluck(all_data, column);\n        }\n        return [];\n    }\n\n    function get_ethnicity_column(headers) {\n        var ETHNICITY_COLUMNS = ['ethnicity', 'ethnic group']\n        for (var index = 0; index < headers.length; index++) {\n            var headerLowerTrim = headers[index].toLowerCase().trim();\n            if (ETHNICITY_COLUMNS.indexOf(headerLowerTrim) >= 0) {\n                return index\n            }\n        }\n        return -1;\n    }\n\n\n    /*\n    SETUP\n    */\n\n    function populateChartOptions(headers) {\n        var listWithNone = dropdownHtmlWithDefault(headers, '[None]');\n        var listWithRequired = dropdownHtmlWithDefault(headers, '[Required]');\n\n        $('#line__x-axis_column').html(listWithRequired);\n\n        $('#grouped-bar__bar_column').html(listWithRequired);\n        $('#grouped-bar__bar_order').html(listWithNone);\n        $('#grouped-bar__groups_column').html(listWithRequired);\n        $('#grouped-bar__groups_order').html(listWithNone);\n\n        $('#component__bar_column').html(listWithRequired);\n        $('#component__bar_order').html(listWithNone);\n        $('#component__section_column').html(listWithRequired);\n        $('#component__section_order').html(listWithNone);\n\n        $('#panel-bar__panel_column').html(listWithRequired);\n        $('#panel-bar__panel_order').html(listWithNone);\n        $('#panel-bar__bar_column').html(listWithRequired);\n        $('#panel-bar__bar_order').html(listWithNone);\n\n        $('#panel-line__x-axis_column').html(listWithRequired);\n    }\n\n    function selectDropdown(dropdown_id, value) {\n        var dropdown = document.getElementById(dropdown_id);\n        for (var i = 0; i < dropdown.length; i++) {\n            dropdown[i].selected = (dropdown[i].value === value)\n        }\n    }\n\n\n    function populateEthnicityPresets(presets) {\n        var html = '';\n        for (var p in presets) {\n            var preset = presets[p]['preset']['name'];\n            var code = presets[p]['preset']['code'];\n            if (p === 0) {\n                html = html + '<option value=\"' + code + '\" selected>' + preset + '</option>';\n            } else {\n                html = html + '<option value=\"' + code + '\" >' + preset + '</option>';\n            }\n        }\n        $('#ethnicity_settings').html(html);\n    }\n\n    function strippedHeaders(headers) {\n        var exclude = ['Measure', 'Ethnicity', 'Ethnic group', 'Value', 'Values'];\n        var stripped = [];\n        for (h in headers) {\n            var header = headers[h];\n            if (exclude.indexOf(header) < 0) {\n                stripped.push(header);\n            }\n        }\n        return stripped;\n    }\n\n    function dropdownHtmlWithDefault(headers, defaultValue) {\n        var html = '<option value=\"' + defaultValue + '\" selected>' + defaultValue + '</option>';\n        var stripped = strippedHeaders(headers);\n        for (var h in stripped) {\n            var header = stripped[h];\n            html = html + '<option value=\"' + header + '\">' + header + '</option>';\n        }\n        return html;\n    }\n\n    /*\n    PREVIEW\n    Render the chart as a preview using drawChart() from rd - graph.js (this the exact same method that is used front - end)\n    */\n\n    function preview(evt) {\n        var tips = getTips();\n        if (tips.length > 0) {\n            displayTips(tips);\n        } else {\n            displayChart();\n        }\n    }\n\n    function displayTips(tips) {\n        $('#tips_container').show();\n        $('#preview_container').hide();\n\n        $(\"#notes_container\").hide();\n        $(\"#errors_container\").hide();\n\n        $(\"#tip-list\").children().hide();\n\n        if (tipsOfType(tips, MISSING_FIELD_ERROR).length > 0) {\n            $(\"#notes_container\").show();\n        }\n        if (tipsOfType(tips, ETHNICITY_ERROR).length > 0) {\n            $(\"#errors_container\").show();\n            $('#tip__ethnicity-column').show();\n        }\n        if (tipsOfType(tips, VALUE_ERROR).length > 0) {\n            $(\"#errors_container\").show();\n            $('#tip__value-column').show();\n        }\n        if (tipsOfType(tips, RECTANGLE_ERROR).length > 0) {\n            $(\"#errors_container\").show();\n            $('#tip__rectangular-data').show();\n        }\n        if (tipsOfType(tips, DATA_ERROR_COMPLEX_DATA).length > 0) {\n            $(\"#errors_container\").show();\n            $('#tip__complex-data').show();\n        }\n        if (tipsOfType(tips, DATA_ERROR_DUPLICATION).length > 0) {\n            $(\"#errors_container\").show();\n            $('#tip__duplicate-data').show();\n        }\n        if (tipsOfType(tips, DATA_ERROR_MISSING_DATA).length > 0) {\n            $(\"#errors_container\").show();\n            $('#tip__missing-data').show();\n        }\n\n    }\n\n    function tipsOfType(tips, errorType) {\n        return _.filter(tips, function (tip) {\n            return tip.errorType === errorType;\n        })\n    }\n\n    function displayChart() {\n        $('#tips_container').hide();\n        $('#preview_container').show();\n\n        var chartObject = buildChartObject();\n        if (chartObject) {\n            if (chartObject.title && chartObject.title.text) {\n                $('#title-container').html('<h3 class=\"heading-small\">' + chartObject.title.text + '</h3>');\n            }\n            chartObject.title = '';\n            drawChart('container', chartObject);\n\n            $('#save_section').show();\n        }\n    }\n\n    /*\n    SAVE\n    Save the chart by building a chartObject and bundling up all the setting then sending it to the backend\n    */\n\n    function saveChart(evt) {\n\n        $('#save').attr('disabled', 'disabled');\n\n        var chartObject = buildChartObject();\n        var chartBuilderSettings = getChartPageSettings();\n        if (chartObject) {\n            postChartObject(chartObject, chartBuilderSettings);\n        }\n    }\n\n    function postChartObject(chartObject, src) {\n        if (chartObject) {\n            // adjust for null data\n            $.each(chartObject.series, function () {\n                for (var i = 0; i < this.data.length; i++) {\n                    if (isNaN(this.data[i].y)) {\n                        this.data[i].y = 0;\n                    }\n                }\n            });\n\n            $.ajax({\n                type: \"POST\",\n                url: url_save_chart_to_page,\n                dataType: 'json',\n                data: JSON.stringify({ 'chartObject': chartObject, 'source': src, 'chartBuilderVersion': 2 }),\n                contentType: 'application/json',\n                success: function () {\n                    location.reload();\n                }\n            });\n        }\n    }\n\n    function getChartPageSettings() {\n        // get the data\n        var tabbedData = $(\"#data_text_area\").val();\n        var chartType = $('#chart_type_selector').val();\n        return {\n            'data': textToData(tabbedData),\n            'type': chartType,\n            'preset': getPresetCode(),\n            'chartOptions': getChartTypeOptions(chartType),\n            'chartFormat': getChartFormat(),\n            'version': '2.0'\n        }\n    }\n\n    function getChartTypeOptions(chartType) {\n        switch (chartType) {\n            case 'bar_chart':\n                return {};\n            case 'line_graph':\n                return { 'x_axis_column': $('#line__x-axis_column').val() };\n            case 'grouped_bar_chart':\n                var dataStyle = $('#grouped-bar__data_style').val();\n                if (dataStyle === 'ethnicity_as_group') {\n                    return { 'data_style': dataStyle, 'bar_column': $('#grouped-bar__bar_column').val() }\n                } else {\n                    return { 'data_style': dataStyle, 'group_column': $('#grouped-bar__groups_column').val() }\n                }\n            case 'component_chart':\n                var dataStyle = $('#component__data_style').val();\n                if (dataStyle === 'ethnicity_as_sections') {\n                    return {\n                        'data_style': dataStyle, 'bar_column': $('#component__bar_column').val(),\n                        'bar_order': $('#component__bar_order').val()\n                    }\n                } else {\n                    return {\n                        'data_style': dataStyle, 'section_column': $('#component__section_column').val(),\n                        'section_order': $('#component__section_order').val()\n                    }\n                }\n            case 'panel_bar_chart':\n                var dataStyle = $('#panel-bar__data_style').val();\n                if (dataStyle === 'ethnicity_as_panels') {\n                    return {\n                        'data_style': dataStyle, 'bar_column': $('#panel-bar__bar_column').val(),\n                        'bar_order': $('#panel-bar__bar_order').val()\n                    }\n                } else {\n                    return {\n                        'data_style': dataStyle, 'panel_column': $('#panel-bar__panel_column').val(),\n                        'panel_order': $('#panel-bar__panel_order').val()\n                    }\n                }\n            case 'panel_line_chart':\n                return { 'x_axis_column': $('#panel-line__x-axis_column').val() };\n            default:\n                return {};\n        }\n    }\n\n    function getChartFormat() {\n        return {\n            'chart_title': $('#chart_title').val(),\n            'x_axis_label': $('#x_axis_label').val(),\n            'y_axis_label': $('#y_axis_label').val(),\n            'number_format': $('#number_format').val(),\n            'number_format_prefix': $('#number_format_prefix').val(),\n            'number_format_suffix': $('#number_format_suffix').val(),\n            'number_format_min': $('#number_format_min').val(),\n            'number_format_max': $('#number_format_max').val()\n        }\n    }\n\n    function getPresetCode() {\n        return $('#ethnicity_settings').val();\n    }\n\n\n    function buildChartObject() {\n        var chart_type = $('#chart_type_selector').val();\n        var chartObject = null;\n        var preset = getPresetWithCode($('#ethnicity_settings').val());\n        if (chart_type === 'bar_chart') {\n            chartObject = barchartObject(buildDataWithPreset(preset, chart_data, ['value']),\n                'Ethnicity',\n                '[None]',\n                'Ethnicity-parent',\n                'Ethnicity-order',\n                $('#chart_title').val(),\n                $('#x_axis_label').val(),\n                $('#y_axis_label').val(),\n                getNumberFormat());\n        } else if (chart_type === 'line_graph') {\n            var x_axis_column = $('#line__x-axis_column').val();\n            chartObject = linechartObject(buildDataWithPreset(preset, chart_data, ['value', x_axis_column]),\n                x_axis_column,\n                'Ethnicity',\n                $('#chart_title').val(),\n                $('#x_axis_label').val(),\n                $('#y_axis_label').val(),\n                getNumberFormat(),\n                'Ethnicity-order');\n        } else if (chart_type === 'grouped_bar_chart') {\n            if ($('#grouped-bar__data_style').val() === 'ethnicity_as_group') {\n                var barColumn = $('#grouped-bar__bar_column').val();\n                chartObject = barchartObject(buildDataWithPreset(preset, chart_data, ['value', barColumn]),\n                    'Ethnicity',\n                    barColumn,\n                    '[None]',\n                    'Ethnicity-order',\n                    $('#chart_title').val(),\n                    $('#x_axis_label').val(),\n                    $('#y_axis_label').val(),\n                    getNumberFormat());\n            } else {\n                var groupColumn = $('#grouped-bar__groups_column').val();\n                chartObject = barchartObject(buildDataWithPreset(preset, chart_data, ['value', groupColumn]),\n                    groupColumn,\n                    'Ethnicity',\n                    '[None]',\n                    'Ethnicity-order',\n                    $('#chart_title').val(),\n                    $('#x_axis_label').val(),\n                    $('#y_axis_label').val(),\n                    getNumberFormat());\n            }\n        } else if (chart_type === 'component_chart') {\n            if ($('#component__data_style').val() === 'ethnicity_as_bar') {\n                var sectionColumn = $('#component__section_column').val();\n                var sectionOrder = $('#component__section_order').val();\n                var data = [];\n                if (sectionOrder && sectionOrder !== '[None]') {\n                    data = buildDataWithPreset(preset, chart_data, ['value', sectionColumn, sectionOrder])\n                } else {\n                    data = buildDataWithPreset(preset, chart_data, ['value', sectionColumn])\n                }\n                chartObject = componentChartObject(data,\n                    'Ethnicity',\n                    sectionColumn,\n                    $('#chart_title').val(),\n                    $('#x_axis_label').val(),\n                    $('#y_axis_label').val(),\n                    getNumberFormat(),\n                    'Ethnicity-order',\n                    sectionOrder)\n            } else {\n                var groupColumn = $('#component__bar_column').val();\n                var groupOrder = $('#component__bar_order').val();\n                var data = [];\n                if (groupOrder && groupOrder !== '[None]') {\n                    data = buildDataWithPreset(preset, chart_data, ['value', groupColumn, groupOrder])\n                } else {\n                    data = buildDataWithPreset(preset, chart_data, ['value', groupColumn])\n                }\n                chartObject = componentChartObject(buildDataWithPreset(preset, chart_data, ['value', groupColumn]),\n                    groupColumn,\n                    'Ethnicity',\n                    $('#chart_title').val(),\n                    $('#x_axis_label').val(),\n                    $('#y_axis_label').val(),\n                    getNumberFormat(),\n                    groupOrder,\n                    'Ethnicity-order')\n            }\n        } else if (chart_type === 'panel_bar_chart') {\n            if ($('#panel-bar__data_style').val() === 'ethnicity_as_panel_bars') {\n                var panelColumn = $('#panel-bar__panel_column').val();\n                var panelOrder = $('#panel-bar__panel_order').val();\n                var data = [];\n                if (panelOrder && panelOrder !== '[None]') {\n                    data = buildDataWithPreset(preset, chart_data, ['value', panelColumn, panelOrder])\n                } else {\n                    data = buildDataWithPreset(preset, chart_data, ['value', panelColumn])\n                }\n                chartObject = panelBarchartObject(data,\n                    'Ethnicity',\n                    panelColumn,\n                    $('#chart_title').val(),\n                    '',\n                    '',\n                    getNumberFormat(),\n                    'Ethnicity-order',\n                    panelOrder)\n            } else {\n                var panelBarColumn = $('#panel-bar__bar_column').val();\n                var panelBarOrder = $('#panel-bar__bar_order').val();\n                var data = [];\n                if (panelBarColumn && panelBarOrder !== '[None]') {\n                    data = buildDataWithPreset(preset, chart_data, ['value', panelBarColumn, panelBarOrder])\n                } else {\n                    data = buildDataWithPreset(preset, chart_data, ['value', panelBarColumn])\n                }\n                chartObject = panelBarchartObject(data,\n                    panelBarColumn,\n                    'Ethnicity',\n                    $('#chart_title').val(),\n                    '',\n                    '',\n                    getNumberFormat(),\n                    panelBarOrder,\n                    'Ethnicity-order')\n            }\n        } else if (chart_type === 'panel_line_chart') {\n            var panel_x_axis_column = $('#panel-line__x-axis_column').val();\n            var data = buildDataWithPreset(preset, chart_data, ['value', panel_x_axis_column]);\n            chartObject = panelLinechartObject(data,\n                panel_x_axis_column,\n                'Ethnicity',\n                $('#chart_title').val(),\n                '',\n                '',\n                getNumberFormat(),\n                'Ethnicity-order');\n        }\n        return chartObject;\n    }\n\n    function buildDataWithPreset(preset, data, columns) {\n        var rows = [['Ethnicity', 'Ethnicity-parent', 'Ethnicity-order'].concat(columns)];\n\n        var body = _.clone(data);\n        var headers = body.shift();\n        var lowHeaders = _.map(headers, function (header) {\n            return header.toLowerCase().trim()\n        });\n        var indices = _.map(columns, function (col) {\n            var lowCol = col.toLowerCase().trim();\n            return lowHeaders.indexOf(lowCol);\n        });\n\n        for (var r in preset['data']) {\n            var item = preset['data'][r];\n            var row = [item['preset'], item['parent'], item['order']];\n            row = row.concat(_.map(indices, function (index) {\n                return index === -1 ? '' : body[r][index]\n            }));\n            rows = rows.concat([row])\n        }\n\n        return rows;\n    }\n\n    function getPresetWithCode(code) {\n        for (p in presets) {\n            if (presets[p].preset.code === code) {\n                return presets[p];\n            }\n        }\n        return null;\n    }\n\n\n    /*\n    EVENT HANDLERS\n    */\n\n    // Switch CHART_OPTIONS panels\n    $('#ethnicity_settings').change(preview);\n\n    // Switch CHART_OPTIONS panels\n    $('#chart_type_selector').change(function () {\n        selectChartType($(this).val())\n        preview()\n    });\n\n    function selectChartType(chart_type) {\n        $('#chart_type_selector').val(chart_type);\n        $('.chart-option-group').hide();\n        if (chart_type !== 'none') {\n            $('#' + chart_type + \"_options\").show();\n            $('#chart_format_options').show();\n        }\n        $('#preview_section').show();\n    }\n\n    function selectPreset(preset) {\n        $('#ethnicity_settings').val(preset);\n    }\n\n    /*\n    CHART PANEL events\n    */\n\n    // LINE events\n    $('#line__x-axis_column').change(preview);\n\n    // GROUPED-BAR events\n    $('#grouped-bar__data_style').change(function () {\n        if ($(this).val() === \"ethnicity_as_group\") {\n            $('#grouped-bar__ethnicity_is_group').show();\n            $('#grouped-bar__ethnicity_is_bar').hide();\n        } else {\n            $('#grouped-bar__ethnicity_is_group').hide();\n            $('#grouped-bar__ethnicity_is_bar').show();\n        }\n        preview();\n    });\n    $('#grouped-bar__bar_column').change(preview);\n    $('#grouped-bar__bar_order').change(preview);\n    $('#grouped-bar__groups_column').change(preview);\n    $('#grouped-bar__groups_order').change(preview);\n\n\n    // COMPONENT events\n    $('#component__data_style').change(function () {\n        if ($(this).val() === \"ethnicity_as_bar\") {\n            $('#component__ethnicity_is_bar').show();\n            $('#component__ethnicity_is_sections').hide();\n        } else {\n            $('#component__ethnicity_is_bar').hide();\n            $('#component__ethnicity_is_sections').show();\n        }\n        preview();\n    });\n    $('#component__section_column').change(preview);\n    $('#component__section_order').change(preview);\n    $('#component__bar_column').change(preview);\n    $('#component__bar_order').change(preview);\n\n    // PANEL-BAR events\n    $('#panel-bar__data_style').change(function () {\n        if ($(this).val() === \"ethnicity_as_panel_bars\") {\n            $('#panel-bar__ethnicity_as_bar').show();\n            $('#panel-bar__ethnicity_as_panels').hide();\n        } else {\n            $('#panel-bar__ethnicity_as_bar').hide();\n            $('#panel-bar__ethnicity_as_panels').show();\n        }\n        preview();\n    });\n    $('#panel-bar__bar_column').change(preview);\n    $('#panel-bar__bar_order').change(preview);\n    $('#panel-bar__panel_column').change(preview);\n    $('#panel-bar__panel_order').change(preview);\n\n    // PANEL-LINE events\n    $('#panel-line__x-axis_column').change(preview);\n\n\n    // Show-hide NUMBER-FORMAT__OTHER panel\n    $('#number_format').change(function () {\n        if ($(this).val() === 'other') {\n            $('#other_number_format').show()\n        } else {\n            $('#other_number_format').hide()\n        }\n        preview();\n    });\n\n\n    function initialiseForm() {\n        if (settings.data) {\n            var data_text = _.map(settings.data, function (d) {\n                return d.join('\\t')\n            }).join('\\n');\n            $('#data_text_area').val(data_text);\n\n            handleNewData(function () {\n                $('#data-panel').hide();\n                $('#edit-panel').show();\n                setupChartbuilderWithSettings(settings);\n                preview()\n            })\n        }\n    }\n\n    function setupChartbuilderWithSettings(settings) {\n        $('#chart_type_selector').val(settings.type);\n        selectChartType(settings.type);\n        if (settings.preset) {\n            selectPreset(settings.preset);\n        }\n\n        $('#chart_title').val(settings.chartFormat.chart_title);\n\n        switch (settings.type) {\n            case 'line_graph':\n                var columnValue = settings.chartOptions.x_axis_column;\n                $('#line__x-axis_column').val(columnValue);\n                break;\n            case 'grouped_bar_chart':\n                var dataStyle = settings.chartOptions.data_style;\n                $('#grouped-bar__data_style').val(dataStyle);\n                if (dataStyle === 'ethnicity_as_group') {\n                    $('#grouped-bar__bar_column').val(settings.chartOptions.bar_column);\n                    $('#grouped-bar__ethnicity_is_group').show();\n                    $('#grouped-bar__ethnicity_is_bar').hide();\n                } else {\n                    $('#grouped-bar__groups_column').val(settings.chartOptions.group_column);\n                    $('#grouped-bar__ethnicity_is_group').hide();\n                    $('#grouped-bar__ethnicity_is_bar').show();\n                }\n                break;\n            case 'component_chart':\n                var dataStyle = settings.chartOptions.data_style;\n                $('#component__data_style').val(dataStyle);\n                if (dataStyle === 'ethnicity_as_sections') {\n                    $('#component__bar_column').val(settings.chartOptions.bar_column);\n                    $('#component__bar_order').val(settings.chartOptions.bar_order);\n                    $('#component__ethnicity_is_sections').show();\n                    $('#component__ethnicity_is_bar').hide();\n                } else {\n                    $('#component__section_column').val(settings.chartOptions.section_column);\n                    $('#component__section_order').val(settings.chartOptions.section_order);\n                    $('#component__ethnicity_is_sections').hide();\n                    $('#component__ethnicity_is_bar').show();\n                }\n                break;\n            case 'panel_bar_chart':\n                var dataStyle = settings.chartOptions.data_style;\n                $('#panel-bar__data_style').val(dataStyle);\n                if (dataStyle === 'ethnicity_as_panels') {\n                    $('#panel-bar__bar_column').val(settings.chartOptions.bar_column);\n                    $('#panel-bar__bar_order').val(settings.chartOptions.bar_order);\n                    $('#panel-bar__ethnicity_as_bar').hide();\n                    $('#panel-bar__ethnicity_as_panels').show();\n                } else {\n                    $('#panel-bar__panel_column').val(settings.chartOptions.panel_column);\n                    $('#panel-bar__panel_order').val(settings.chartOptions.panel_order);\n                    $('#panel-bar__ethnicity_as_bar').show();\n                    $('#panel-bar__ethnicity_as_panels').hide();\n                }\n                break;\n            case 'panel_line_chart':\n                var columnValue = settings.chartOptions.x_axis_column;\n                $('#panel-line__x-axis_column').val(columnValue);\n                break;\n            default:\n                break;\n        }\n        $('#number_format').val(settings.chartFormat.number_format);\n        $('#number_format_prefix').val(settings.chartFormat.number_format_prefix);\n        $('#number_format_suffix').val(settings.chartFormat.number_format_suffix);\n        $('#number_format_min').val(settings.chartFormat.number_format_min);\n        $('#number_format_max').val(settings.chartFormat.number_format_max);\n        if (settings.chartFormat.number_format === 'other') {\n            $('#other_number_format').show();\n        }\n    }\n\n    initialiseForm();\n});\n\n/*\nCustom number format is far more complicated than it needs to be\nHowever it is viable to just use this function to grab it until it becomes a problem\n*/\n\nfunction getNumberFormat() {\n    var format = $('#number_format').val();\n    if (format === 'none') {\n        return { 'multiplier': 1.0, 'prefix': '', 'suffix': '', 'min': '', 'max': '' }\n    } else if (format === 'percent') {\n        return { 'multiplier': 1.0, 'prefix': '', 'suffix': '%', 'min': 0.0, 'max': 100.0 }\n    } else if (format === 'other') {\n        return {\n            'multiplier': 1.0,\n            'prefix': $('#number_format_prefix').val(),\n            'suffix': $('#number_format_suffix').val(),\n            'min': $('#number_format_min').val(),\n            'max': $('#number_format_max').val()\n        }\n    }\n}\n\nfunction getTips() {\n\n    // 1. Basics\n    var basicErrors = validateChart(chart_data);\n    if (basicErrors.length !== 0) {\n        return basicErrors;\n    }\n\n    // 2. Required fields\n    var missingFields = checkRequiredFields();\n    if (missingFields.length !== 0) {\n        return missingFields\n    }\n\n    // 3. Data errors\n    var ethnicityColumn = getEthnicityColumn();\n    var secondaryColumn = getSecondaryColumn();\n\n    var dataErrors = validateData(chart_data, ethnicityColumn, secondaryColumn);\n    return dataErrors;\n}\n\nvar MISSING_FIELD_ERROR = 'Missing field error';\n\nfunction checkRequiredFields() {\n    var chartType = $('#chart_type_selector').val();\n    switch (chartType) {\n        case 'bar_chart':\n            return [];\n            ;\n            break;\n        case 'line_graph':\n            if ($('#line__x-axis_column').val() === '[Required]') {\n                return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'line__x-axis_column' }]\n            }\n            ;\n            break;\n        case 'grouped_bar_chart':\n            if ($('#grouped-bar__data_style').val() === 'ethnicity_as_group') {\n                if ($('#grouped-bar__bar_column').val() === '[Required]') {\n                    return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'grouped-bar__bar_column' }]\n                }\n                ;\n            } else {\n                if ($('#grouped-bar__groups_column').val() === '[Required]') {\n                    return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'grouped-bar__groups_column' }]\n                }\n                ;\n            }\n            break;\n        case 'component_chart':\n            if ($('#component__data_style').val() === 'ethnicity_as_sections') {\n                if ($('#component__bar_column').val() === '[Required]') {\n                    return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'component__bar_column' }]\n                }\n                ;\n            } else {\n                if ($('#component__section_column').val() === '[Required]') {\n                    return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'component__section_column' }]\n                }\n                ;\n            }\n            break;\n        case 'panel_bar_chart':\n            if ($('#panel-bar__data_style').val() === 'ethnicity_as_panels') {\n                if ($('#panel-bar__bar_column').val() === '[Required]') {\n                    return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'panel-bar__bar_column' }]\n                }\n                ;\n            } else {\n                if ($('#panel-bar__panel_column').val() === '[Required]') {\n                    return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'panel-bar__panel_column' }]\n                }\n                ;\n            }\n            break;\n        case 'panel_line_chart':\n            if ($('#panel-line__x-axis_column').val() === '[Required]') {\n                return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'panel-line__x-axis_column' }]\n            }\n            ;\n            break;\n        default:\n            return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'chart_type_selector' }]\n    }\n    return [];\n}\n\n\nfunction getEthnicityColumn() {\n    for (var i in chart_data[0]) {\n        var lower = chart_data[0][i].toLowerCase();\n        if (lower.search('ethnic') >= 0) {\n            return chart_data[0][i]\n        }\n    }\n    return null\n}\n\nfunction getSecondaryColumn() {\n    var chartType = $('#chart_type_selector').val();\n    switch (chartType) {\n        case 'bar_chart':\n            return null;\n        case 'line_graph':\n            return $('#line__x-axis_column').val();\n        case 'grouped_bar_chart':\n            if ($('#grouped-bar__data_style').val() === 'ethnicity_as_group') {\n                return $('#grouped-bar__bar_column').val()\n            } else {\n                return $('#grouped-bar__groups_column').val()\n            }\n        case 'component_chart':\n            if ($('#component__data_style').val() === 'ethnicity_as_sections') {\n                return $('#component__bar_column').val()\n            } else {\n                return $('#component__section_column').val()\n            }\n        case 'panel_bar_chart':\n            if ($('#panel-bar__data_style').val() === 'ethnicity_as_panels') {\n                return $('#panel-bar__bar_column').val()\n            } else {\n                return $('#panel-bar__panel_column').val()\n            }\n        case 'panel_line_chart':\n            return $('#panel-line__x-axis_column').val();\n        default:\n            return null;\n    }\n}\n\nfunction pasteJson(json) {\n    var data_text_area = document.getElementById('data_text_area');\n\n    data_text_area.value = _.map(json, function (row) {\n        return row.join('\\t');\n    }).join('\\n');\n    data_text_area.dispatchEvent(new Event(\"keyup\"));\n}"],"sourceRoot":"../src"}