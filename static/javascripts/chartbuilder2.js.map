{"version":3,"sources":["chartbuilder2.js"],"names":["presets","chart_data","current_data","current_settings","getNumberFormat","format","$","val","multiplier","prefix","suffix","min","max","getTips","basicErrors","validateChart","length","missingFields","checkRequiredFields","ethnicityColumn","getEthnicityColumnHeader","secondaryColumn","getSecondaryColumnHeader","validateData","document","ready","handleNewData","on_success","tabbedData","textToData","message","html","headers","listWithNone","listWithRequired","dropdownHtmlWithDefault","ethnicity_data","getEthnicityValues","ajax","type","url","url_get_classifications","dataType","data","JSON","stringify","contentType","success","response","p","preset_name","preset_id","populateEthnicityPresets","show","failure","console","log","error","err","all_data","_","clone","column","index","cleanHeader","toLowerCase","trim","indexOf","getEthnicityColumn","shift","pluck","showHideCustomEthnicityPanel","hide","defaultValue","stripped","exclude","h","header","push","strippedHeaders","preview","evt","tips","children","tipsOfType","MISSING_FIELD_ERROR","ETHNICITY_ERROR","VALUE_ERROR","RECTANGLE_ERROR","DATA_ERROR_COMPLEX_DATA","DATA_ERROR_DUPLICATION","DATA_ERROR_MISSING_DATA","displayTips","chartObject","buildChartObject","title","text","drawChart","getElementById","dispatchEvent","Event","displayChart","errorType","filter","tip","getChartPageSettings","chartType","preset","getPresetCode","custom","getCustomObject","chartOptions","x_axis_column","dataStyle","data_style","bar_column","group_column","bar_order","section_column","section_order","panel_column","panel_order","getChartTypeOptions","chartFormat","chart_title","x_axis_label","y_axis_label","number_format","number_format_prefix","number_format_suffix","number_format_min","number_format_max","version","getCustomClassificationCode","code","hasParents","prop","hasAll","hasUnknown","chart_type","id","getPresetWithId","barchartObject","buildDataWithPreset","linechartObject","barColumn","groupColumn","sectionColumn","sectionOrder","componentChartObject","groupOrder","panelColumn","panelOrder","panelBarchartObject","panelBarColumn","panelBarOrder","panel_x_axis_column","panelLinechartObject","columns","rows","concat","body","lowHeaders","map","indices","col","lowCol","r","item","row","selectChartType","selectCustomValues","customObject","customClassification","customValue","setupChartbuilderWithSettings","settings","columnValue","click","attr","chartBuilderSettings","src","each","series","i","this","isNaN","y","url_save_chart_to_page","source","chartBuilderVersion","classificationCode","customClassificationCode","ethnicityValues","location","reload","window","replace","url_edit_dimension","change","data_text","d","join","initialiseForm","field","search","pasteJson","json","data_text_area","value"],"mappings":"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","file":"chartbuilder2.js","sourcesContent":["\n/*\n    Functionality of chartbuilder including the main methods that run each stage\n\n\n    On open **initialiseForm()**\n    - grab current_settings from dimension.chart_2_source_data if such a thing exists\n    - if current_settings doesn't exist open with the data area open.\n    - otherwise set the current_settings from file, paste data into the data panel and run the On new data routine below\n\n    On new data (changing data in the data panel area and clicking Okay) **handleNewData()**\n    - use an AJAX call to the /get-valid-presets-for-data endpoint to add extra values **buildDataWithPreset()**\n    - populate the chart builder dropdowns with correct values **populateChartOptions(), populateEthnicityPresets()**\n    - if any settings currently exist apply as many as are still relevant **setupChartbuilderWithSettings()**\n\n    On settings changes\n    - validate they will make a viable chart **getTips()**\n    - if so use the rd chart object factory and renderer to display a preview **preview()**\n    - otherwise display an error and tip to fix it **displayTips()**\n\n    On save\n    - build a chart object with the rd-chart-object factory **buildChartObject()**\n    - create a chart_settings lump of json **getChartPageSettings()**\n    - post both to <dimension>/create-chart endpoint **postChartObject()**\n */\n\n// The main working data variables\nvar presets = [];\nvar chart_data = null;\n\n// Variables that needs to be maintained when the user makes changes to the text data\nvar current_data = \"\";\nvar current_settings = null;\n\n$(document).ready(function () {\n\n    // add events to buttons\n    $('#preview').click(preview);\n    $('#confirm-data').click(setChartData);\n    $('#edit-data').click(editChartData);\n    $('#cancel-edit-data').click(cancelEditData);\n    $('#save').click(saveChart);\n    $('#exit').click(back);\n\n    function back(evt) {\n        window.location.replace(url_edit_dimension)\n    }\n\n    /*\n    Events from the DATA ENTRY PANEL\n    */\n    function setChartData(evt) {\n        handleNewData(function () {\n            if (current_settings) {\n                setupChartbuilderWithSettings(current_settings)\n            }\n            preview()\n        });\n        $('#data-panel').hide();\n        $('#edit-panel').show();\n    }\n\n    function editChartData(evt) {\n        current_data = $('#data_text_area').val();\n        current_settings = getChartPageSettings();\n        $('#data-panel').show();\n        $('#edit-panel').hide();\n    }\n\n    function cancelEditData(evt) {\n        $('#data_text_area').val(current_data);\n        $('#data-panel').hide();\n        $('#edit-panel').show();\n    }\n\n\n    /*\n    Initialise the main editor after DATA ENTRY PANEL change\n    */\n\n    function handleNewData(on_success) {\n\n        // get the data\n        var tabbedData = $(\"#data_text_area\").val();\n\n        // set the DATA DISPLAY content\n        chart_data = textToData(tabbedData);\n        if (chart_data.length > 0) {\n            message = chart_data.length - 1 + ' rows by ' + chart_data[0].length + ' columns'\n        }\n        $('#data-description').html(message);\n\n        // update options in drop-downs\n        var headers = chart_data[0];\n        populateChartOptions(headers);\n\n        // call the backend to do the presets heavy lifting\n        var ethnicity_data = getEthnicityValues(chart_data);\n        $.ajax({\n            type: \"post\",\n            url: url_get_classifications,\n            dataType: 'json',\n            data: JSON.stringify({ 'data': ethnicity_data }),\n            contentType: 'application/json; charset=utf-8',\n            success: function (response) {\n                // upon heavy lifting complete\n\n                // populate the ethnicity presets from the response\n                presets = response['presets'];\n                populateEthnicityPresets(presets);\n\n                // show the presets (step 2) and chart type (step 3) section\n                $('#ethnicity_settings_section').show();\n                $('#select_chart_type').show();\n\n                // any further processing\n                if (on_success) {\n                    on_success();\n                }\n            },\n            failure: function () {\n                console.log('failed to get ethnicity classifcations');\n            },\n            error: function (err) {\n                console.log(err);\n            }\n        });\n    }\n\n    function getEthnicityValues(data) {\n        var all_data = _.clone(data);\n        var headers = all_data.shift();\n\n        var column = getEthnicityColumn(headers);\n        if (column >= 0) {\n            return _.pluck(all_data, column);\n        }\n        return [];\n    }\n\n    function getEthnicityColumn(headers) {\n        for (var index = 0; index < headers.length; index++) {\n            var cleanHeader = headers[index].toLowerCase().trim();\n            if (cleanHeader.indexOf('ethnic') >= 0) {\n                return index\n            }\n        }\n        return -1;\n    }\n\n    /*\n    SETUP\n    */\n\n    function populateChartOptions(headers) {\n        var listWithNone = dropdownHtmlWithDefault(headers, '[None]');\n        var listWithRequired = dropdownHtmlWithDefault(headers, '[Required]');\n\n        $('#line__x-axis_column').html(listWithRequired);\n\n        $('#grouped-bar__bar_column').html(listWithRequired);\n        $('#grouped-bar__bar_order').html(listWithNone);\n        $('#grouped-bar__groups_column').html(listWithRequired);\n        $('#grouped-bar__groups_order').html(listWithNone);\n\n        $('#component__bar_column').html(listWithRequired);\n        $('#component__bar_order').html(listWithNone);\n        $('#component__section_column').html(listWithRequired);\n        $('#component__section_order').html(listWithNone);\n\n        $('#panel-bar__panel_column').html(listWithRequired);\n        $('#panel-bar__panel_order').html(listWithNone);\n        $('#panel-bar__bar_column').html(listWithRequired);\n        $('#panel-bar__bar_order').html(listWithNone);\n\n        $('#panel-line__x-axis_column').html(listWithRequired);\n    }\n\n    function selectDropdown(dropdown_id, value) {\n        var dropdown = document.getElementById(dropdown_id);\n        for (var i = 0; i < dropdown.length; i++) {\n            dropdown[i].selected = (dropdown[i].value === value)\n        }\n    }\n\n\n    function showHideCustomEthnicityPanel() {\n        if($('#ethnicity_settings').val() === 'custom') {\n            $('#custom_classification__panel').show()\n        } else {\n            $('#custom_classification__panel').hide()\n        }\n    }\n\n    function populateEthnicityPresets(presets) {\n        var html = '';\n        for (var p in presets) {\n            var preset_name = presets[p]['preset']['name'];\n            var preset_id = presets[p]['preset']['id'];\n            if (p === 0) {\n                html = html + '<option value=\"' + preset_id + '\" selected>' + preset_name + '</option>';\n            } else {\n                html = html + '<option value=\"' + preset_id + '\" >' + preset_name + '</option>';\n            }\n        }\n        $('#ethnicity_settings').html(html);\n    }\n\n    function strippedHeaders(headers) {\n        var exclude = ['Measure', 'Ethnicity', 'Ethnic group', 'Value', 'Values'];\n        var stripped = [];\n        for (h in headers) {\n            var header = headers[h];\n            if (exclude.indexOf(header) < 0) {\n                stripped.push(header);\n            }\n        }\n        return stripped;\n    }\n\n    function dropdownHtmlWithDefault(headers, defaultValue) {\n        var html = '<option value=\"' + defaultValue + '\" selected>' + defaultValue + '</option>';\n        var stripped = strippedHeaders(headers);\n        for (var h in stripped) {\n            var header = stripped[h];\n            html = html + '<option value=\"' + header + '\">' + header + '</option>';\n        }\n        return html;\n    }\n\n    /*\n    PREVIEW\n    Render the chart as a preview using drawChart() from rd - graph.js (this the exact same method that is used front - end)\n    */\n\n    function preview(evt) {\n        var tips = getTips();\n        if (tips.length > 0) {\n            displayTips(tips);\n        } else {\n            displayChart();\n        }\n    }\n\n    function displayTips(tips) {\n        $('#tips_container').show();\n        $('#preview_container').hide();\n\n        $(\"#notes_container\").hide();\n        $(\"#errors_container\").hide();\n\n        $(\"#tip-list\").children().hide();\n\n        if (tipsOfType(tips, MISSING_FIELD_ERROR).length > 0) {\n            $(\"#notes_container\").show();\n        }\n        if (tipsOfType(tips, ETHNICITY_ERROR).length > 0) {\n            $(\"#errors_container\").show();\n            $('#tip__ethnicity-column').show();\n        }\n        if (tipsOfType(tips, VALUE_ERROR).length > 0) {\n            $(\"#errors_container\").show();\n            $('#tip__value-column').show();\n        }\n        if (tipsOfType(tips, RECTANGLE_ERROR).length > 0) {\n            $(\"#errors_container\").show();\n            $('#tip__rectangular-data').show();\n        }\n        if (tipsOfType(tips, DATA_ERROR_COMPLEX_DATA).length > 0) {\n            $(\"#errors_container\").show();\n            $('#tip__complex-data').show();\n        }\n        if (tipsOfType(tips, DATA_ERROR_DUPLICATION).length > 0) {\n            $(\"#errors_container\").show();\n            $('#tip__duplicate-data').show();\n        }\n        if (tipsOfType(tips, DATA_ERROR_MISSING_DATA).length > 0) {\n            $(\"#errors_container\").show();\n            $('#tip__missing-data').show();\n        }\n\n    }\n\n    function tipsOfType(tips, errorType) {\n        return _.filter(tips, function (tip) {\n            return tip.errorType === errorType;\n        })\n    }\n\n    function displayChart() {\n        $('#tips_container').hide();\n        $('#preview_container').show();\n\n        var chartObject = buildChartObject();\n        if (chartObject) {\n            if (chartObject.title && chartObject.title.text) {\n                $('#title-container').html('<h3 class=\"heading-small\">' + chartObject.title.text + '</h3>');\n            }\n            chartObject.title = '';\n            drawChart('container', chartObject);\n\n            $('#save_section').show();\n        }\n        \n        document.getElementById('chart_title').dispatchEvent(new Event(\"input\"));\n    }\n\n    /*\n    SAVE\n    Save the chart by building a chartObject and bundling up all the setting then sending it to the backend\n    */\n\n    function saveChart(evt) {\n\n        $('#save').attr('disabled', 'disabled');\n\n        var chartObject = buildChartObject();\n        var chartBuilderSettings = getChartPageSettings();\n        if (chartObject) {\n            postChartObject(chartObject, chartBuilderSettings);\n        }\n    }\n\n    function postChartObject(chartObject, src) {\n        if (chartObject) {\n            // adjust for null data\n            $.each(chartObject.series, function () {\n                for (var i = 0; i < this.data.length; i++) {\n                    if (isNaN(this.data[i].y)) {\n                        this.data[i].y = 0;\n                    }\n                }\n            });\n\n            $.ajax({\n                type: \"POST\",\n                url: url_save_chart_to_page,\n                dataType: 'json',\n                data: JSON.stringify({ 'chartObject': chartObject, 'source': src, 'chartBuilderVersion': 2,\n                    'classificationCode': getPresetCode(),\n                    'customClassificationCode': getCustomClassificationCode(),\n                    'customClassification': getCustomObject(),\n                    'ethnicityValues': getEthnicityValues(chart_data)}),\n                contentType: 'application/json',\n                success: function () {\n                    location.reload();\n                }\n            });\n        }\n    }\n\n    function getChartPageSettings() {\n        // get the data\n        var tabbedData = $(\"#data_text_area\").val();\n        var chartType = $('#chart_type_selector').val();\n        return {\n            'data': textToData(tabbedData),\n            'type': chartType,\n            'preset': getPresetCode(),\n            'custom': getCustomObject(),\n            'chartOptions': getChartTypeOptions(chartType),\n            'chartFormat': getChartFormat(),\n            'version': '2.0'\n        }\n    }\n\n    function getChartTypeOptions(chartType) {\n        switch (chartType) {\n            case 'bar_chart':\n                return {};\n            case 'line_graph':\n                return { 'x_axis_column': $('#line__x-axis_column').val() };\n            case 'grouped_bar_chart':\n                var dataStyle = $('#grouped-bar__data_style').val();\n                if (dataStyle === 'ethnicity_as_group') {\n                    return { 'data_style': dataStyle, 'bar_column': $('#grouped-bar__bar_column').val() }\n                } else {\n                    return { 'data_style': dataStyle, 'group_column': $('#grouped-bar__groups_column').val() }\n                }\n            case 'component_chart':\n                var dataStyle = $('#component__data_style').val();\n                if (dataStyle === 'ethnicity_as_sections') {\n                    return {\n                        'data_style': dataStyle, 'bar_column': $('#component__bar_column').val(),\n                        'bar_order': $('#component__bar_order').val()\n                    }\n                } else {\n                    return {\n                        'data_style': dataStyle, 'section_column': $('#component__section_column').val(),\n                        'section_order': $('#component__section_order').val()\n                    }\n                }\n            case 'panel_bar_chart':\n                var dataStyle = $('#panel-bar__data_style').val();\n                if (dataStyle === 'ethnicity_as_panels') {\n                    return {\n                        'data_style': dataStyle, 'bar_column': $('#panel-bar__bar_column').val(),\n                        'bar_order': $('#panel-bar__bar_order').val()\n                    }\n                } else {\n                    return {\n                        'data_style': dataStyle, 'panel_column': $('#panel-bar__panel_column').val(),\n                        'panel_order': $('#panel-bar__panel_order').val()\n                    }\n                }\n            case 'panel_line_chart':\n                return { 'x_axis_column': $('#panel-line__x-axis_column').val() };\n            default:\n                return {};\n        }\n    }\n\n    function getChartFormat() {\n        return {\n            'chart_title': $('#chart_title').val(),\n            'x_axis_label': $('#x_axis_label').val(),\n            'y_axis_label': $('#y_axis_label').val(),\n            'number_format': $('#number_format').val(),\n            'number_format_prefix': $('#number_format_prefix').val(),\n            'number_format_suffix': $('#number_format_suffix').val(),\n            'number_format_min': $('#number_format_min').val(),\n            'number_format_max': $('#number_format_max').val()\n        }\n    }\n\n    function getPresetCode() {\n        return $('#ethnicity_settings').val();\n    }\n\n    function getCustomClassificationCode() {\n        return $('#custom_classification__selector').val();\n    }\n\n    function getCustomHasParents() {\n        return $('#custom_classification__has_parents').prop('checked');\n    }\n\n    function getCustomHasAll() {\n        return $('#custom_classification__has_all').prop('checked');\n    }\n\n    function getCustomHasUnknown() {\n        return $('#custom_classification__has_unknown').prop('checked');\n    }\n\n    function getCustomObject() {\n        return {\n            'code': getCustomClassificationCode(),\n            'hasParents': getCustomHasParents(),\n            'hasAll': getCustomHasAll(),\n            'hasUnknown': getCustomHasUnknown()\n        }\n    }\n\n    function buildChartObject() {\n        var chart_type = $('#chart_type_selector').val();\n        var chartObject = null;\n        var preset = getPresetWithId($('#ethnicity_settings').val());\n        if (chart_type === 'bar_chart') {\n            chartObject = barchartObject(buildDataWithPreset(preset, chart_data, ['value']),\n                'Ethnicity',\n                '[None]',\n                'Ethnicity-parent',\n                'Ethnicity-order',\n                $('#chart_title').val(),\n                $('#x_axis_label').val(),\n                $('#y_axis_label').val(),\n                getNumberFormat());\n        } else if (chart_type === 'line_graph') {\n            var x_axis_column = $('#line__x-axis_column').val();\n            chartObject = linechartObject(buildDataWithPreset(preset, chart_data, ['value', x_axis_column]),\n                x_axis_column,\n                'Ethnicity',\n                $('#chart_title').val(),\n                $('#x_axis_label').val(),\n                $('#y_axis_label').val(),\n                getNumberFormat(),\n                'Ethnicity-order');\n        } else if (chart_type === 'grouped_bar_chart') {\n            if ($('#grouped-bar__data_style').val() === 'ethnicity_as_group') {\n                var barColumn = $('#grouped-bar__bar_column').val();\n                chartObject = barchartObject(buildDataWithPreset(preset, chart_data, ['value', barColumn]),\n                    'Ethnicity',\n                    barColumn,\n                    '[None]',\n                    'Ethnicity-order',\n                    $('#chart_title').val(),\n                    $('#x_axis_label').val(),\n                    $('#y_axis_label').val(),\n                    getNumberFormat());\n            } else {\n                var groupColumn = $('#grouped-bar__groups_column').val();\n                chartObject = barchartObject(buildDataWithPreset(preset, chart_data, ['value', groupColumn]),\n                    groupColumn,\n                    'Ethnicity',\n                    '[None]',\n                    'Ethnicity-order',\n                    $('#chart_title').val(),\n                    $('#x_axis_label').val(),\n                    $('#y_axis_label').val(),\n                    getNumberFormat());\n            }\n        } else if (chart_type === 'component_chart') {\n            if ($('#component__data_style').val() === 'ethnicity_as_bar') {\n                var sectionColumn = $('#component__section_column').val();\n                var sectionOrder = $('#component__section_order').val();\n                var data = [];\n                if (sectionOrder && sectionOrder !== '[None]') {\n                    data = buildDataWithPreset(preset, chart_data, ['value', sectionColumn, sectionOrder])\n                } else {\n                    data = buildDataWithPreset(preset, chart_data, ['value', sectionColumn])\n                }\n                chartObject = componentChartObject(data,\n                    'Ethnicity',\n                    sectionColumn,\n                    $('#chart_title').val(),\n                    $('#x_axis_label').val(),\n                    $('#y_axis_label').val(),\n                    getNumberFormat(),\n                    'Ethnicity-order',\n                    sectionOrder)\n            } else {\n                var groupColumn = $('#component__bar_column').val();\n                var groupOrder = $('#component__bar_order').val();\n                var data = [];\n                if (groupOrder && groupOrder !== '[None]') {\n                    data = buildDataWithPreset(preset, chart_data, ['value', groupColumn, groupOrder])\n                } else {\n                    data = buildDataWithPreset(preset, chart_data, ['value', groupColumn])\n                }\n                chartObject = componentChartObject(buildDataWithPreset(preset, chart_data, ['value', groupColumn]),\n                    groupColumn,\n                    'Ethnicity',\n                    $('#chart_title').val(),\n                    $('#x_axis_label').val(),\n                    $('#y_axis_label').val(),\n                    getNumberFormat(),\n                    groupOrder,\n                    'Ethnicity-order')\n            }\n        } else if (chart_type === 'panel_bar_chart') {\n            if ($('#panel-bar__data_style').val() === 'ethnicity_as_panel_bars') {\n                var panelColumn = $('#panel-bar__panel_column').val();\n                var panelOrder = $('#panel-bar__panel_order').val();\n                var data = [];\n                if (panelOrder && panelOrder !== '[None]') {\n                    data = buildDataWithPreset(preset, chart_data, ['value', panelColumn, panelOrder])\n                } else {\n                    data = buildDataWithPreset(preset, chart_data, ['value', panelColumn])\n                }\n                chartObject = panelBarchartObject(data,\n                    'Ethnicity',\n                    panelColumn,\n                    $('#chart_title').val(),\n                    '',\n                    '',\n                    getNumberFormat(),\n                    'Ethnicity-order',\n                    panelOrder)\n            } else {\n                var panelBarColumn = $('#panel-bar__bar_column').val();\n                var panelBarOrder = $('#panel-bar__bar_order').val();\n                var data = [];\n                if (panelBarColumn && panelBarOrder !== '[None]') {\n                    data = buildDataWithPreset(preset, chart_data, ['value', panelBarColumn, panelBarOrder])\n                } else {\n                    data = buildDataWithPreset(preset, chart_data, ['value', panelBarColumn])\n                }\n                chartObject = panelBarchartObject(data,\n                    panelBarColumn,\n                    'Ethnicity',\n                    $('#chart_title').val(),\n                    '',\n                    '',\n                    getNumberFormat(),\n                    panelBarOrder,\n                    'Ethnicity-order')\n            }\n        } else if (chart_type === 'panel_line_chart') {\n            var panel_x_axis_column = $('#panel-line__x-axis_column').val();\n            var data = buildDataWithPreset(preset, chart_data, ['value', panel_x_axis_column]);\n            chartObject = panelLinechartObject(data,\n                panel_x_axis_column,\n                'Ethnicity',\n                $('#chart_title').val(),\n                '',\n                '',\n                getNumberFormat(),\n                'Ethnicity-order');\n        }\n        return chartObject;\n    }\n\n    function buildDataWithPreset(preset, data, columns) {\n        var rows = [['Ethnicity', 'Ethnicity-parent', 'Ethnicity-order'].concat(columns)];\n\n        var body = _.clone(data);\n        var headers = body.shift();\n        var lowHeaders = _.map(headers, function (header) {\n            return header.toLowerCase().trim()\n        });\n        var indices = _.map(columns, function (col) {\n            var lowCol = col.toLowerCase().trim();\n            return lowHeaders.indexOf(lowCol);\n        });\n\n        for (var r in preset['data']) {\n            var item = preset['data'][r];\n            var row = [item['preset'], item['parent'], item['order']];\n            row = row.concat(_.map(indices, function (index) {\n                return index === -1 ? '' : body[r][index]\n            }));\n            rows = rows.concat([row])\n        }\n\n        return rows;\n    }\n\n    function getPresetWithId(preset_id) {\n        for (p in presets) {\n            if (presets[p].preset.id === preset_id) {\n                return presets[p];\n            }\n        }\n        return null;\n    }\n\n\n    /*\n    EVENT HANDLERS\n    */\n\n    // Switch CHART_OPTIONS panels\n    $('#ethnicity_settings').change(function () {\n        showHideCustomEthnicityPanel();\n        preview();\n    })\n    $('#custom_classification__selector').change(preview);\n\n    // Switch CHART_OPTIONS panels\n    $('#chart_type_selector').change(function () {\n        selectChartType($(this).val())\n        preview()\n    });\n\n    function selectChartType(chart_type) {\n        $('#chart_type_selector').val(chart_type);\n        $('.chart-option-group').hide();\n        if (chart_type !== 'none') {\n            $('#' + chart_type + \"_options\").show();\n            $('#chart_format_options').show();\n        }\n        $('#preview_section').show();\n    }\n\n    function selectPreset(preset) {\n        $('#ethnicity_settings').val(preset);\n    }\n\n    function selectCustomValues(customObject) {\n        selectCustomClassification(customObject['code'])\n        selectCustomHasParents(customObject['hasParents'])\n        selectCustomHasAll(customObject['hasAll'])\n        selectCustomHasUnknown(customObject['hasUnknown'])\n    }\n\n    function selectCustomClassification(customClassification) {\n        $('#custom_classification__selector').val(customClassification)\n    }\n\n    function selectCustomHasParents(customValue) {\n           $('#custom_classification__has_parents').prop('checked', customValue)\n    }\n\n    function selectCustomHasUnknown(customValue) {\n            $('#custom_classification__has_unknown').prop('checked', customValue)\n    }\n\n    function selectCustomHasAll(customValue) {\n            $('#custom_classification__has_all').prop('checked', customValue)\n    }\n\n    /*\n    CHART PANEL events\n    */\n\n    // LINE events\n    $('#line__x-axis_column').change(preview);\n\n    // GROUPED-BAR events\n    $('#grouped-bar__data_style').change(function () {\n        if ($(this).val() === \"ethnicity_as_group\") {\n            $('#grouped-bar__ethnicity_is_group').show();\n            $('#grouped-bar__ethnicity_is_bar').hide();\n        } else {\n            $('#grouped-bar__ethnicity_is_group').hide();\n            $('#grouped-bar__ethnicity_is_bar').show();\n        }\n        preview();\n    });\n    $('#grouped-bar__bar_column').change(preview);\n    $('#grouped-bar__bar_order').change(preview);\n    $('#grouped-bar__groups_column').change(preview);\n    $('#grouped-bar__groups_order').change(preview);\n\n\n    // COMPONENT events\n    $('#component__data_style').change(function () {\n        if ($(this).val() === \"ethnicity_as_bar\") {\n            $('#component__ethnicity_is_bar').show();\n            $('#component__ethnicity_is_sections').hide();\n        } else {\n            $('#component__ethnicity_is_bar').hide();\n            $('#component__ethnicity_is_sections').show();\n        }\n        preview();\n    });\n    $('#component__section_column').change(preview);\n    $('#component__section_order').change(preview);\n    $('#component__bar_column').change(preview);\n    $('#component__bar_order').change(preview);\n\n    // PANEL-BAR events\n    $('#panel-bar__data_style').change(function () {\n        if ($(this).val() === \"ethnicity_as_panel_bars\") {\n            $('#panel-bar__ethnicity_as_bar').show();\n            $('#panel-bar__ethnicity_as_panels').hide();\n        } else {\n            $('#panel-bar__ethnicity_as_bar').hide();\n            $('#panel-bar__ethnicity_as_panels').show();\n        }\n        preview();\n    });\n    $('#panel-bar__bar_column').change(preview);\n    $('#panel-bar__bar_order').change(preview);\n    $('#panel-bar__panel_column').change(preview);\n    $('#panel-bar__panel_order').change(preview);\n\n    // PANEL-LINE events\n    $('#panel-line__x-axis_column').change(preview);\n\n\n    // Show-hide NUMBER-FORMAT__OTHER panel\n    $('#number_format').change(function () {\n        if ($(this).val() === 'other') {\n            $('#other_number_format').show()\n        } else {\n            $('#other_number_format').hide()\n        }\n        preview();\n    });\n\n\n    function initialiseForm() {\n        if (settings.data) {\n            var data_text = _.map(settings.data, function (d) {\n                return d.join('\\t')\n            }).join('\\n');\n            $('#data_text_area').val(data_text);\n\n            handleNewData(function () {\n                $('#data-panel').hide();\n                $('#edit-panel').show();\n                setupChartbuilderWithSettings(settings);\n                preview()\n            })\n        }\n    }\n\n    function setupChartbuilderWithSettings(settings) {\n        $('#chart_type_selector').val(settings.type);\n        selectChartType(settings.type);\n        if (settings.preset) {\n            selectPreset(settings.preset);\n        }\n        if (settings.custom) {\n            selectCustomValues(settings.custom)\n        }\n\n        showHideCustomEthnicityPanel()\n\n        $('#chart_title').val(settings.chartFormat.chart_title);\n\n        switch (settings.type) {\n            case 'line_graph':\n                var columnValue = settings.chartOptions.x_axis_column;\n                $('#line__x-axis_column').val(columnValue);\n                break;\n            case 'grouped_bar_chart':\n                var dataStyle = settings.chartOptions.data_style;\n                $('#grouped-bar__data_style').val(dataStyle);\n                if (dataStyle === 'ethnicity_as_group') {\n                    $('#grouped-bar__bar_column').val(settings.chartOptions.bar_column);\n                    $('#grouped-bar__ethnicity_is_group').show();\n                    $('#grouped-bar__ethnicity_is_bar').hide();\n                } else {\n                    $('#grouped-bar__groups_column').val(settings.chartOptions.group_column);\n                    $('#grouped-bar__ethnicity_is_group').hide();\n                    $('#grouped-bar__ethnicity_is_bar').show();\n                }\n                break;\n            case 'component_chart':\n                var dataStyle = settings.chartOptions.data_style;\n                $('#component__data_style').val(dataStyle);\n                if (dataStyle === 'ethnicity_as_sections') {\n                    $('#component__bar_column').val(settings.chartOptions.bar_column);\n                    $('#component__bar_order').val(settings.chartOptions.bar_order);\n                    $('#component__ethnicity_is_sections').show();\n                    $('#component__ethnicity_is_bar').hide();\n                } else {\n                    $('#component__section_column').val(settings.chartOptions.section_column);\n                    $('#component__section_order').val(settings.chartOptions.section_order);\n                    $('#component__ethnicity_is_sections').hide();\n                    $('#component__ethnicity_is_bar').show();\n                }\n                break;\n            case 'panel_bar_chart':\n                var dataStyle = settings.chartOptions.data_style;\n                $('#panel-bar__data_style').val(dataStyle);\n                if (dataStyle === 'ethnicity_as_panels') {\n                    $('#panel-bar__bar_column').val(settings.chartOptions.bar_column);\n                    $('#panel-bar__bar_order').val(settings.chartOptions.bar_order);\n                    $('#panel-bar__ethnicity_as_bar').hide();\n                    $('#panel-bar__ethnicity_as_panels').show();\n                } else {\n                    $('#panel-bar__panel_column').val(settings.chartOptions.panel_column);\n                    $('#panel-bar__panel_order').val(settings.chartOptions.panel_order);\n                    $('#panel-bar__ethnicity_as_bar').show();\n                    $('#panel-bar__ethnicity_as_panels').hide();\n                }\n                break;\n            case 'panel_line_chart':\n                var columnValue = settings.chartOptions.x_axis_column;\n                $('#panel-line__x-axis_column').val(columnValue);\n                break;\n            default:\n                break;\n        }\n        $('#number_format').val(settings.chartFormat.number_format);\n        $('#number_format_prefix').val(settings.chartFormat.number_format_prefix);\n        $('#number_format_suffix').val(settings.chartFormat.number_format_suffix);\n        $('#number_format_min').val(settings.chartFormat.number_format_min);\n        $('#number_format_max').val(settings.chartFormat.number_format_max);\n        if (settings.chartFormat.number_format === 'other') {\n            $('#other_number_format').show();\n        }\n    }\n\n\n\n    initialiseForm();\n});\n\n/*\nCustom number format is far more complicated than it needs to be\nHowever it is viable to just use this function to grab it until it becomes a problem\n*/\n\nfunction getNumberFormat() {\n    var format = $('#number_format').val();\n    if (format === 'none') {\n        return { 'multiplier': 1.0, 'prefix': '', 'suffix': '', 'min': '', 'max': '' }\n    } else if (format === 'percent') {\n        return { 'multiplier': 1.0, 'prefix': '', 'suffix': '%', 'min': 0.0, 'max': 100.0 }\n    } else if (format === 'other') {\n        return {\n            'multiplier': 1.0,\n            'prefix': $('#number_format_prefix').val(),\n            'suffix': $('#number_format_suffix').val(),\n            'min': $('#number_format_min').val(),\n            'max': $('#number_format_max').val()\n        }\n    }\n}\n\nfunction getTips() {\n\n    // 1. Basics\n    var basicErrors = validateChart(chart_data);\n    if (basicErrors.length !== 0) {\n        return basicErrors;\n    }\n\n    // 2. Required fields\n    var missingFields = checkRequiredFields();\n    if (missingFields.length !== 0) {\n        return missingFields\n    }\n\n    // 3. Data errors\n    var ethnicityColumn = getEthnicityColumnHeader();\n    var secondaryColumn = getSecondaryColumnHeader();\n\n    var dataErrors = validateData(chart_data, ethnicityColumn, secondaryColumn);\n    return dataErrors;\n}\n\nvar MISSING_FIELD_ERROR = 'Missing field error';\n\nfunction checkRequiredFields() {\n    if ($('#ethnicity_settings').val() === 'custom' && $('#custom_classification__selector').val() === '[Required]') {\n        return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'custom_classification__selector' }]\n    }\n    \n    var chartType = $('#chart_type_selector').val();\n\n    switch (chartType) {\n        case 'bar_chart':\n            return [];\n            ;\n            break;\n        case 'line_graph':\n            if ($('#line__x-axis_column').val() === '[Required]') {\n                return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'line__x-axis_column' }]\n            }\n            ;\n            break;\n        case 'grouped_bar_chart':\n            if ($('#grouped-bar__data_style').val() === 'ethnicity_as_group') {\n                if ($('#grouped-bar__bar_column').val() === '[Required]') {\n                    return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'grouped-bar__bar_column' }]\n                }\n                ;\n            } else {\n                if ($('#grouped-bar__groups_column').val() === '[Required]') {\n                    return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'grouped-bar__groups_column' }]\n                }\n                ;\n            }\n            break;\n        case 'component_chart':\n            if ($('#component__data_style').val() === 'ethnicity_as_sections') {\n                if ($('#component__bar_column').val() === '[Required]') {\n                    return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'component__bar_column' }]\n                }\n                ;\n            } else {\n                if ($('#component__section_column').val() === '[Required]') {\n                    return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'component__section_column' }]\n                }\n                ;\n            }\n            break;\n        case 'panel_bar_chart':\n            if ($('#panel-bar__data_style').val() === 'ethnicity_as_panels') {\n                if ($('#panel-bar__bar_column').val() === '[Required]') {\n                    return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'panel-bar__bar_column' }]\n                }\n                ;\n            } else {\n                if ($('#panel-bar__panel_column').val() === '[Required]') {\n                    return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'panel-bar__panel_column' }]\n                }\n                ;\n            }\n            break;\n        case 'panel_line_chart':\n            if ($('#panel-line__x-axis_column').val() === '[Required]') {\n                return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'panel-line__x-axis_column' }]\n            }\n            ;\n            break;\n        default:\n            return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'chart_type_selector' }]\n    }\n    return [];\n}\n\n\nfunction getEthnicityColumnHeader() {\n    for (var i in chart_data[0]) {\n        var lower = chart_data[0][i].toLowerCase();\n        if (lower.search('ethnic') >= 0) {\n            return chart_data[0][i]\n        }\n    }\n    return null\n}\n\nfunction getSecondaryColumnHeader() {\n    var chartType = $('#chart_type_selector').val();\n    switch (chartType) {\n        case 'bar_chart':\n            return null;\n        case 'line_graph':\n            return $('#line__x-axis_column').val();\n        case 'grouped_bar_chart':\n            if ($('#grouped-bar__data_style').val() === 'ethnicity_as_group') {\n                return $('#grouped-bar__bar_column').val()\n            } else {\n                return $('#grouped-bar__groups_column').val()\n            }\n        case 'component_chart':\n            if ($('#component__data_style').val() === 'ethnicity_as_sections') {\n                return $('#component__bar_column').val()\n            } else {\n                return $('#component__section_column').val()\n            }\n        case 'panel_bar_chart':\n            if ($('#panel-bar__data_style').val() === 'ethnicity_as_panels') {\n                return $('#panel-bar__bar_column').val()\n            } else {\n                return $('#panel-bar__panel_column').val()\n            }\n        case 'panel_line_chart':\n            return $('#panel-line__x-axis_column').val();\n        default:\n            return null;\n    }\n}\n\nfunction pasteJson(json) {\n    var data_text_area = document.getElementById('data_text_area');\n\n    data_text_area.value = _.map(json, function (row) {\n        return row.join('\\t');\n    }).join('\\n');\n    data_text_area.dispatchEvent(new Event(\"keyup\"));\n}\n"],"sourceRoot":"../src"}