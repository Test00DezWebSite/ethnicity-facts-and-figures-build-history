{"version":3,"sources":["chartbuilder.js"],"names":["classifications","chart_data","current_data","current_settings","getNumberFormat","format","$","val","multiplier","prefix","suffix","min","max","getTips","basicErrors","validateChart","length","missingFields","checkRequiredFields","ethnicityColumn","getEthnicityColumnHeader","secondaryColumn","getSecondaryColumnHeader","validateData","document","ready","handleNewData","on_success","tabbedData","textToData","message","getElementById","innerHTML","headers","listWithNone","dropdownHtmlWithDefault","listWithRequired","populateChartOptions","ethnicity_data","getEthnicityValues","ajax","type","url","url_get_classifications","dataType","data","JSON","stringify","contentType","success","response","html","c","classification_name","classification_id","populateEthnicityClassifications","showHideCustomEthnicityPanel","classList","remove","failure","console","log","error","err","all_data","_","clone","column","index","toLowerCase","trim","indexOf","getEthnicityColumn","shift","pluck","add","defaultValue","stripped","exclude","h","header","push","strippedHeaders","preview","evt","tips","tip_list","i","children","tipsOfType","MISSING_FIELD_ERROR","ETHNICITY_ERROR","VALUE_ERROR","RECTANGLE_ERROR","DATA_ERROR_COMPLEX_DATA","DATA_ERROR_DUPLICATION","DATA_ERROR_MISSING_DATA","displayTips","chartObject","buildChartObject","title","drawChart","dispatchEvent","Event","displayChart","errorType","filter","tip","getChartPageSettings","chartType","preset","getClassificationCode","custom","getCustomObject","chartOptions","x_axis_column","dataStyle","data_style","bar_column","group_column","bar_order","section_column","section_order","panel_column","panel_order","getChartTypeOptions","chartFormat","chart_title","x_axis_label","y_axis_label","number_format","number_format_prefix","number_format_suffix","number_format_min","number_format_max","getCustomClassificationCode","code","hasParents","prop","hasAll","hasUnknown","chart_type","classification","id","getClassificationById","barchartObject","buildDataWithClassifications","linechartObject","barColumn","groupColumn","sectionColumn","sectionOrder","componentChartObject","groupOrder","panelColumn","panelOrder","panelBarchartObject","panelBarColumn","panelBarOrder","panel_x_axis_column","panelLinechartObject","columns","rows","concat","body","lowHeaders","map","indices","col","lowCol","r","item","row","selectChartType","chartOptionGroupDivs","getElementsByClassName","selectCustomValues","customObject","customClassification","selectCustomClassification","customValue","selectCustomHasParents","selectCustomHasAll","selectCustomHasUnknown","setupChartbuilderWithSettings","settings","selectClassification","columnValue","addEventListener","data_text_area","data_error_message","data_form_group","value","textContent","attr","chartBuilderSettings","src","each","series","this","isNaN","y","url_save_chart_to_page","source","classificationCode","customClassificationCode","ethnicityValues","scrollIntoView","location","reload","postChartObject","change","data_text","d","join","initialiseForm","field","search","pasteJson","json"],"mappings":"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","file":"chartbuilder.js","sourcesContent":["\n/*\n    Functionality of chartbuilder including the main methods that run each stage\n\n\n    On open **initialiseForm()**\n    - grab current_settings from dimension.chart_settings_and_source_data if such a thing exists\n    - if current_settings doesn't exist open with the data area open.\n    - otherwise set the current_settings from file, paste data into the data panel and run the On new data routine below\n\n    On new data (changing data in the data panel area and clicking OK) **handleNewData()**\n    - use an AJAX call to the /get-valid-classifications-for-data endpoint to add extra values **buildDataWithClassifications()**\n    - populate the chart builder dropdowns with correct values **populateChartOptions(), populateEthnicityClassifications()**\n    - if any settings currently exist apply as many as are still relevant **setupChartbuilderWithSettings()**\n\n    On settings changes\n    - validate they will make a viable chart **getTips()**\n    - if so use the rd chart object factory and renderer to display a preview **preview()**\n    - otherwise display an error and tip to fix it **displayTips()**\n\n    On save\n    - build a chart object with the rd-chart-object factory **buildChartObject()**\n    - create a chart_settings lump of json **getChartPageSettings()**\n    - post both to <dimension>/create-chart endpoint **postChartObject()**\n */\n\n// The main working data variables\nvar classifications = [];\nvar chart_data = null;\n\n// Variables that needs to be maintained when the user makes changes to the text data\nvar current_data = \"\";\nvar current_settings = null;\n\n$(document).ready(function () {\n\n    // add events to buttons\n    document.getElementById('confirm-data').addEventListener('click', setChartData)\n    document.getElementById('edit-data').addEventListener('click', editChartData)\n    document.getElementById('cancel-edit-data').addEventListener('click', cancelEditData)\n    document.getElementById('save').addEventListener('click', saveChart)\n\n    /*\n    Events from the DATA ENTRY PANEL\n    */\n    function setChartData(evt) {\n\n        var data_text_area = document.getElementById('data_text_area')\n        var data_error_message = document.getElementById('data-error')\n        var data_form_group = document.getElementById('data-form-group')\n\n        if (data_text_area.value != '') {\n\n            handleNewData(function () {\n                if (current_settings) {\n                    setupChartbuilderWithSettings(current_settings)\n                }\n                preview()\n            });\n            document.getElementById('data-panel').classList.add('hidden')\n            document.getElementById('edit-panel').classList.remove('hidden')\n            document.getElementById('builder-title').textContent = 'Format and view chart'\n\n            data_text_area.classList.remove('govuk-textarea--error')\n            data_form_group.classList.remove('govuk-form-group--error')\n            data_error_message.textContent = ''\n\n        } else {\n            data_text_area.classList.add('govuk-textarea--error')\n            data_form_group.classList.add('govuk-form-group--error')\n            data_error_message.textContent = 'Enter some data'\n        }\n\n\n    }\n\n    function editChartData(evt) {\n        current_data = $('#data_text_area').val();\n        current_settings = getChartPageSettings();\n        document.getElementById('data-panel').classList.remove('hidden')\n        document.getElementById('edit-panel').classList.add('hidden')\n        document.getElementById('builder-title').textContent = 'Create a chart'\n    }\n\n    function cancelEditData(evt) {\n        $('#data_text_area').val(current_data);\n        document.getElementById('data-panel').classList.add('hidden')\n        document.getElementById('edit-panel').classList.remove('hidden')\n        document.getElementById('builder-title').textContent = 'Format and view chart'\n    }\n\n\n    /*\n    Initialise the main editor after DATA ENTRY PANEL change\n    */\n\n    function handleNewData(on_success) {\n        // get the data\n        var tabbedData = $(\"#data_text_area\").val();\n\n        // set the DATA DISPLAY content\n        chart_data = textToData(tabbedData);\n        if (chart_data.length > 0) {\n            message = chart_data.length - 1 + ' rows by ' + chart_data[0].length + ' columns'\n        }\n\n        document.getElementById('data-description').innerHTML = message;\n\n        // update options in drop-downs\n        var headers = chart_data[0];\n        populateChartOptions(headers);\n\n        // call the backend to do the presets heavy lifting\n        var ethnicity_data = getEthnicityValues(chart_data);\n        $.ajax({\n            type: \"post\",\n            url: url_get_classifications,\n            dataType: 'json',\n            data: JSON.stringify({ 'data': ethnicity_data }),\n            contentType: 'application/json; charset=utf-8',\n            success: function (response) {\n                // upon heavy lifting complete\n\n                // populate the ethnicity presets from the response\n                classifications = response['classifications'];\n                populateEthnicityClassifications(classifications);\n                showHideCustomEthnicityPanel();\n\n                // show the presets (step 2) and chart type (step 3) section\n                document.getElementById('ethnicity_settings_section').classList.remove('hidden')\n                document.getElementById('select_chart_type').classList.remove('hidden')\n\n\n                // any further processing\n                if (on_success) {\n                    on_success();\n                }\n            },\n            failure: function () {\n                console.log('failed to get ethnicity classifcations');\n            },\n            error: function (err) {\n                console.log(err);\n            }\n        });\n    }\n\n    function getEthnicityValues(data) {\n        var all_data = _.clone(data);\n        var headers = all_data.shift();\n\n        var column = getEthnicityColumn(headers);\n        if (column >= 0) {\n            return _.pluck(all_data, column);\n        }\n        return [];\n    }\n\n    function getEthnicityColumn(headers) {\n        for (var index = 0; index < headers.length; index++) {\n            var cleanHeader = headers[index].toLowerCase().trim();\n            if (cleanHeader.indexOf('ethnic') >= 0) {\n                return index\n            }\n        }\n        return -1;\n    }\n\n    /*\n    SETUP\n    */\n\n    function populateChartOptions(headers) {\n        var listWithNone = dropdownHtmlWithDefault(headers, '[None]');\n        var listWithRequired = dropdownHtmlWithDefault(headers, 'Please select');\n\n        document.getElementById('line__x-axis_column').innerHTML = listWithRequired\n\n        document.getElementById('grouped-bar__bar_column').innerHTML = listWithRequired\n        document.getElementById('grouped-bar__groups_column').innerHTML = listWithRequired\n\n        document.getElementById('component__bar_column').innerHTML = listWithRequired\n        document.getElementById('component__bar_order').innerHTML = listWithNone\n        document.getElementById('component__section_column').innerHTML = listWithRequired\n        document.getElementById('component__section_order').innerHTML = listWithNone\n\n        document.getElementById('panel-bar__panel_column').innerHTML = listWithRequired\n        document.getElementById('panel-bar__panel_order').innerHTML = listWithNone\n        document.getElementById('panel-bar__bar_column').innerHTML = listWithRequired\n        document.getElementById('panel-bar__bar_order').innerHTML = listWithNone\n\n        document.getElementById('panel-line__x-axis_column').innerHTML = listWithRequired\n    }\n\n    function selectDropdown(dropdown_id, value) {\n        var dropdown = document.getElementById(dropdown_id);\n        for (var i = 0; i < dropdown.length; i++) {\n            dropdown[i].selected = (dropdown[i].value === value)\n        }\n    }\n\n\n    function showHideCustomEthnicityPanel() {\n        if($('#ethnicity_settings').val() === 'custom') {\n            document.getElementById('custom_classification__panel').classList.remove('hidden')\n        } else {\n            document.getElementById('custom_classification__panel').classList.add('hidden')\n        }\n    }\n\n    function populateEthnicityClassifications(classifications) {\n        var html = '';\n        for (var c in classifications) {\n            var classification_name = classifications[c]['classification']['name'];\n            var classification_id = classifications[c]['classification']['id'];\n            if (c === 0) {\n                html = html + '<option value=\"' + classification_id + '\" selected>' + classification_name + '</option>';\n            } else {\n                html = html + '<option value=\"' + classification_id + '\" >' + classification_name + '</option>';\n            }\n        }\n        document.getElementById('ethnicity_settings').innerHTML = html\n    }\n\n    function strippedHeaders(headers) {\n        var exclude = ['Measure', 'Ethnicity', 'Ethnic group', 'Value', 'Values'];\n        var stripped = [];\n        for (h in headers) {\n            var header = headers[h];\n            if (exclude.indexOf(header) < 0) {\n                stripped.push(header);\n            }\n        }\n        return stripped;\n    }\n\n    function dropdownHtmlWithDefault(headers, defaultValue) {\n        var html = '<option value=\"' + defaultValue + '\" selected>' + defaultValue + '</option>';\n        var stripped = strippedHeaders(headers);\n        for (var h in stripped) {\n            var header = stripped[h];\n            html = html + '<option value=\"' + header + '\">' + header + '</option>';\n        }\n        return html;\n    }\n\n    /*\n    PREVIEW\n    Render the chart as a preview using drawChart() from rd - graph.js (this the exact same method that is used front - end)\n    */\n\n    function preview(evt) {\n        var tips = getTips();\n        if (tips.length > 0) {\n            displayTips(tips);\n        } else {\n            displayChart();\n        }\n    }\n\n    function displayTips(tips) {\n        document.getElementById('tips_container').classList.remove('hidden')\n        document.getElementById('preview_container').classList.add('hidden')\n\n        document.getElementById('notes_container').classList.add('hidden')\n        document.getElementById('errors_container').classList.add('hidden')\n\n        var tip_list = document.getElementById('tip-list')\n        for (var i = 0; i < tip_list.children.length; i++) {\n            tip_list.children[i].classList.add('hidden')\n        }\n\n        if (tipsOfType(tips, MISSING_FIELD_ERROR).length > 0) {\n            document.getElementById('notes_container').classList.remove('hidden')\n        }\n        if (tipsOfType(tips, ETHNICITY_ERROR).length > 0) {\n            document.getElementById('errors_container').classList.remove('hidden')\n            document.getElementById('tip__ethnicity-column').classList.remove('hidden')\n        }\n        if (tipsOfType(tips, VALUE_ERROR).length > 0) {\n            document.getElementById('errors_container').classList.remove('hidden')\n            document.getElementById('tip__value-column').classList.remove('hidden')\n        }\n        if (tipsOfType(tips, RECTANGLE_ERROR).length > 0) {\n            document.getElementById('errors_container').classList.remove('hidden')\n            document.getElementById('tip__rectangular-data').classList.remove('hidden')\n        }\n        if (tipsOfType(tips, DATA_ERROR_COMPLEX_DATA).length > 0) {\n            document.getElementById('errors_container').classList.remove('hidden')\n            document.getElementById('tip__complex-data').classList.remove('hidden')\n        }\n        if (tipsOfType(tips, DATA_ERROR_DUPLICATION).length > 0) {\n            document.getElementById('errors_container').classList.remove('hidden')\n            document.getElementById('tip__duplicate-data').classList.remove('hidden')\n        }\n        if (tipsOfType(tips, DATA_ERROR_MISSING_DATA).length > 0) {\n            document.getElementById('errors_container').classList.remove('hidden')\n            document.getElementById('tip__missing-data').classList.remove('hidden')\n        }\n\n    }\n\n    function tipsOfType(tips, errorType) {\n        return _.filter(tips, function (tip) {\n            return tip.errorType === errorType;\n        })\n    }\n\n    function displayChart() {\n        document.getElementById('tips_container').classList.add('hidden')\n        document.getElementById('preview_container').classList.remove('hidden')\n\n        var chartObject = buildChartObject();\n        if (chartObject) {\n            chartObject.title = '';\n            drawChart('container', chartObject);\n\n            document.getElementById('save_section').classList.remove('hidden')\n        }\n\n        document.getElementById('chart_title').dispatchEvent(new Event(\"input\"));\n    }\n\n    /*\n    SAVE\n    Save the chart by building a chartObject and bundling up all the setting then sending it to the backend\n    */\n\n    function saveChart(evt) {\n\n        $('#save').attr('disabled', 'disabled');\n\n        var chartObject = buildChartObject();\n        var chartBuilderSettings = getChartPageSettings();\n        if (chartObject) {\n            postChartObject(chartObject, chartBuilderSettings);\n        }\n    }\n\n    function postChartObject(chartObject, src) {\n        if (chartObject) {\n            // adjust for null data\n            $.each(chartObject.series, function () {\n                for (var i = 0; i < this.data.length; i++) {\n                    if (isNaN(this.data[i].y)) {\n                        this.data[i].y = 0;\n                    }\n                }\n            });\n\n            $.ajax({\n                type: \"POST\",\n                url: url_save_chart_to_page,\n                dataType: 'json',\n                data: JSON.stringify({\n                    'chartObject': chartObject,\n                    'source': src,\n                    'classificationCode': getClassificationCode(),\n                    'customClassificationCode': getCustomClassificationCode(),\n                    'customClassification': getCustomObject(),\n                    'ethnicityValues': getEthnicityValues(chart_data)}),\n                contentType: 'application/json',\n                success: function () {\n                    document.getElementById(\"breadcrumb\").scrollIntoView();\n                    location.reload();\n                }\n            });\n        }\n    }\n\n    function getChartPageSettings() {\n        // get the data\n        var tabbedData = $(\"#data_text_area\").val();\n        var chartType = $('#chart_type_selector').val();\n        return {\n            'data': textToData(tabbedData),\n            'type': chartType,\n            'preset': getClassificationCode(),\n            'custom': getCustomObject(),\n            'chartOptions': getChartTypeOptions(chartType),\n            'chartFormat': getChartFormat(),\n        }\n    }\n\n    function getChartTypeOptions(chartType) {\n        switch (chartType) {\n            case 'bar_chart':\n                return {};\n            case 'line_graph':\n                return { 'x_axis_column': $('#line__x-axis_column').val() };\n            case 'grouped_bar_chart':\n                var dataStyle = $('#grouped-bar__data_style').val();\n                if (dataStyle === 'ethnicity_as_group') {\n                    return { 'data_style': dataStyle, 'bar_column': $('#grouped-bar__bar_column').val() }\n                } else {\n                    return { 'data_style': dataStyle, 'group_column': $('#grouped-bar__groups_column').val() }\n                }\n            case 'component_chart':\n                var dataStyle = $('#component__data_style').val();\n                if (dataStyle === 'ethnicity_as_sections') {\n                    return {\n                        'data_style': dataStyle, 'bar_column': $('#component__bar_column').val(),\n                        'bar_order': $('#component__bar_order').val()\n                    }\n                } else {\n                    return {\n                        'data_style': dataStyle, 'section_column': $('#component__section_column').val(),\n                        'section_order': $('#component__section_order').val()\n                    }\n                }\n            case 'panel_bar_chart':\n                var dataStyle = $('#panel-bar__data_style').val();\n                if (dataStyle === 'ethnicity_as_panels') {\n                    return {\n                        'data_style': dataStyle, 'bar_column': $('#panel-bar__bar_column').val(),\n                        'bar_order': $('#panel-bar__bar_order').val()\n                    }\n                } else {\n                    return {\n                        'data_style': dataStyle, 'panel_column': $('#panel-bar__panel_column').val(),\n                        'panel_order': $('#panel-bar__panel_order').val()\n                    }\n                }\n            case 'panel_line_chart':\n                return { 'x_axis_column': $('#panel-line__x-axis_column').val() };\n            default:\n                return {};\n        }\n    }\n\n    function getChartFormat() {\n        return {\n            'chart_title': $('#chart_title').val(),\n            'x_axis_label': $('#x_axis_label').val(),\n            'y_axis_label': $('#y_axis_label').val(),\n            'number_format': $('#number_format').val(),\n            'number_format_prefix': $('#number_format_prefix').val(),\n            'number_format_suffix': $('#number_format_suffix').val(),\n            'number_format_min': $('#number_format_min').val(),\n            'number_format_max': $('#number_format_max').val()\n        }\n    }\n\n    function getClassificationCode() {\n        return $('#ethnicity_settings').val();\n    }\n\n    function getCustomClassificationCode() {\n        return $('#custom_classification__selector').val();\n    }\n\n    function getCustomHasParents() {\n        return $('#custom_classification__has_parents').prop('checked');\n    }\n\n    function getCustomHasAll() {\n        return $('#custom_classification__has_all').prop('checked');\n    }\n\n    function getCustomHasUnknown() {\n        return $('#custom_classification__has_unknown').prop('checked');\n    }\n\n    function getCustomObject() {\n        return {\n            'code': getCustomClassificationCode(),\n            'hasParents': getCustomHasParents(),\n            'hasAll': getCustomHasAll(),\n            'hasUnknown': getCustomHasUnknown()\n        }\n    }\n\n    function buildChartObject() {\n        var chart_type = $('#chart_type_selector').val();\n        var chartObject = null;\n        var classification = getClassificationById($('#ethnicity_settings').val());\n        if (chart_type === 'bar_chart') {\n            chartObject = barchartObject(buildDataWithClassifications(classification, chart_data, ['value']),\n                'Ethnicity',\n                '[None]',\n                'Ethnicity-parent',\n                'Ethnicity-order',\n                $('#chart_title').val(),\n                $('#x_axis_label').val(),\n                $('#y_axis_label').val(),\n                getNumberFormat());\n        } else if (chart_type === 'line_graph') {\n            var x_axis_column = $('#line__x-axis_column').val();\n            chartObject = linechartObject(buildDataWithClassifications(classification, chart_data, ['value', x_axis_column]),\n                x_axis_column,\n                'Ethnicity',\n                $('#chart_title').val(),\n                $('#x_axis_label').val(),\n                $('#y_axis_label').val(),\n                getNumberFormat(),\n                'Ethnicity-order');\n        } else if (chart_type === 'grouped_bar_chart') {\n            if ($('#grouped-bar__data_style').val() === 'ethnicity_as_group') {\n                var barColumn = $('#grouped-bar__bar_column').val();\n                chartObject = barchartObject(buildDataWithClassifications(classification, chart_data, ['value', barColumn]),\n                    'Ethnicity',\n                    barColumn,\n                    '[None]',\n                    'Ethnicity-order',\n                    $('#chart_title').val(),\n                    $('#x_axis_label').val(),\n                    $('#y_axis_label').val(),\n                    getNumberFormat());\n            } else {\n                var groupColumn = $('#grouped-bar__groups_column').val();\n                chartObject = barchartObject(buildDataWithClassifications(classification, chart_data, ['value', groupColumn]),\n                    groupColumn,\n                    'Ethnicity',\n                    '[None]',\n                    'Ethnicity-order',\n                    $('#chart_title').val(),\n                    $('#x_axis_label').val(),\n                    $('#y_axis_label').val(),\n                    getNumberFormat());\n            }\n        } else if (chart_type === 'component_chart') {\n            if ($('#component__data_style').val() === 'ethnicity_as_bar') {\n                var sectionColumn = $('#component__section_column').val();\n                var sectionOrder = $('#component__section_order').val();\n                var data = [];\n                if (sectionOrder && sectionOrder !== '[None]') {\n                    data = buildDataWithClassifications(classification, chart_data, ['value', sectionColumn, sectionOrder])\n                } else {\n                    data = buildDataWithClassifications(classification, chart_data, ['value', sectionColumn])\n                }\n                chartObject = componentChartObject(data,\n                    'Ethnicity',\n                    sectionColumn,\n                    $('#chart_title').val(),\n                    $('#x_axis_label').val(),\n                    $('#y_axis_label').val(),\n                    getNumberFormat(),\n                    'Ethnicity-order',\n                    sectionOrder)\n            } else {\n                var groupColumn = $('#component__bar_column').val();\n                var groupOrder = $('#component__bar_order').val();\n                var data = [];\n                if (groupOrder && groupOrder !== '[None]') {\n                    data = buildDataWithClassifications(classification, chart_data, ['value', groupColumn, groupOrder])\n                } else {\n                    data = buildDataWithClassifications(classification, chart_data, ['value', groupColumn])\n                }\n                chartObject = componentChartObject(buildDataWithClassifications(classification, chart_data, ['value', groupColumn]),\n                    groupColumn,\n                    'Ethnicity',\n                    $('#chart_title').val(),\n                    $('#x_axis_label').val(),\n                    $('#y_axis_label').val(),\n                    getNumberFormat(),\n                    groupOrder,\n                    'Ethnicity-order')\n            }\n        } else if (chart_type === 'panel_bar_chart') {\n            if ($('#panel-bar__data_style').val() === 'ethnicity_as_panel_bars') {\n                var panelColumn = $('#panel-bar__panel_column').val();\n                var panelOrder = $('#panel-bar__panel_order').val();\n                var data = [];\n                if (panelOrder && panelOrder !== '[None]') {\n                    data = buildDataWithClassifications(classification, chart_data, ['value', panelColumn, panelOrder])\n                } else {\n                    data = buildDataWithClassifications(classification, chart_data, ['value', panelColumn])\n                }\n                chartObject = panelBarchartObject(data,\n                    'Ethnicity',\n                    panelColumn,\n                    $('#chart_title').val(),\n                    '',\n                    '',\n                    getNumberFormat(),\n                    'Ethnicity-order',\n                    panelOrder)\n            } else {\n                var panelBarColumn = $('#panel-bar__bar_column').val();\n                var panelBarOrder = $('#panel-bar__bar_order').val();\n                var data = [];\n                if (panelBarColumn && panelBarOrder !== '[None]') {\n                    data = buildDataWithClassifications(classification, chart_data, ['value', panelBarColumn, panelBarOrder])\n                } else {\n                    data = buildDataWithClassifications(classification, chart_data, ['value', panelBarColumn])\n                }\n                chartObject = panelBarchartObject(data,\n                    panelBarColumn,\n                    'Ethnicity',\n                    $('#chart_title').val(),\n                    '',\n                    '',\n                    getNumberFormat(),\n                    panelBarOrder,\n                    'Ethnicity-order')\n            }\n        } else if (chart_type === 'panel_line_chart') {\n            var panel_x_axis_column = $('#panel-line__x-axis_column').val();\n            var data = buildDataWithClassifications(classification, chart_data, ['value', panel_x_axis_column]);\n            chartObject = panelLinechartObject(data,\n                panel_x_axis_column,\n                'Ethnicity',\n                $('#chart_title').val(),\n                '',\n                '',\n                getNumberFormat(),\n                'Ethnicity-order');\n        }\n        return chartObject;\n    }\n\n    function buildDataWithClassifications(classification, data, columns) {\n        var rows = [['Ethnicity', 'Ethnicity-parent', 'Ethnicity-order'].concat(columns)];\n\n        var body = _.clone(data);\n        var headers = body.shift();\n        var lowHeaders = _.map(headers, function (header) {\n            return header.toLowerCase().trim()\n        });\n        var indices = _.map(columns, function (col) {\n            var lowCol = col.toLowerCase().trim();\n            return lowHeaders.indexOf(lowCol);\n        });\n\n        for (var r in classification['data']) {\n            var item = classification['data'][r];\n            var row = [item['display_value'], item['parent'], item['order']];\n            row = row.concat(_.map(indices, function (index) {\n                return index === -1 ? '' : body[r][index]\n            }));\n            rows = rows.concat([row])\n        }\n\n        return rows;\n    }\n\n    function getClassificationById(classification_id) {\n        for (c in classifications) {\n            if (classifications[c].classification.id === classification_id) {\n                return classifications[c];\n            }\n        }\n        return null;\n    }\n\n\n    /*\n    EVENT HANDLERS\n    */\n\n    // Switch CHART_OPTIONS panels\n    $('#ethnicity_settings').change(function () {\n        showHideCustomEthnicityPanel();\n        preview();\n    })\n    $('#custom_classification__selector').change(preview);\n\n    // Switch CHART_OPTIONS panels\n    $('#chart_type_selector').change(function () {\n        selectChartType($(this).val())\n        preview()\n    });\n\n    function selectChartType(chart_type) {\n        $('#chart_type_selector').val(chart_type);\n\n        var chartOptionGroupDivs = document.getElementsByClassName('chart-option-group')\n\n        for (var i = 0; i < chartOptionGroupDivs.length; i++) {\n            chartOptionGroupDivs[i].classList.add('hidden')\n        }\n\n        if (chart_type !== 'none') {\n            document.getElementById(chart_type + '_options').classList.remove('hidden')\n            document.getElementById('chart_format_options').classList.remove('hidden')\n        }\n    }\n\n    function selectClassification(classification) {\n        $('#ethnicity_settings').val(classification);\n    }\n\n    function selectCustomValues(customObject) {\n        selectCustomClassification(customObject['code'])\n        selectCustomHasParents(customObject['hasParents'])\n        selectCustomHasAll(customObject['hasAll'])\n        selectCustomHasUnknown(customObject['hasUnknown'])\n    }\n\n    function selectCustomClassification(customClassification) {\n        $('#custom_classification__selector').val(customClassification)\n    }\n\n    function selectCustomHasParents(customValue) {\n           $('#custom_classification__has_parents').prop('checked', customValue)\n    }\n\n    function selectCustomHasUnknown(customValue) {\n            $('#custom_classification__has_unknown').prop('checked', customValue)\n    }\n\n    function selectCustomHasAll(customValue) {\n            $('#custom_classification__has_all').prop('checked', customValue)\n    }\n\n    /*\n    CHART PANEL events\n    */\n\n    // LINE events\n    $('#line__x-axis_column').change(preview);\n\n    // GROUPED-BAR events\n    $('#grouped-bar__data_style').change(function () {\n        if ($(this).val() === \"ethnicity_as_group\") {\n            document.getElementById('grouped-bar__ethnicity_is_group').classList.remove('hidden')\n            document.getElementById('grouped-bar__ethnicity_is_bar').classList.add('hidden')\n        } else {\n            document.getElementById('grouped-bar__ethnicity_is_group').classList.add('hidden')\n            document.getElementById('grouped-bar__ethnicity_is_bar').classList.remove('hidden')\n        }\n        preview();\n    });\n    $('#grouped-bar__bar_column').change(preview);\n    $('#grouped-bar__bar_order').change(preview);\n    $('#grouped-bar__groups_column').change(preview);\n    $('#grouped-bar__groups_order').change(preview);\n\n\n    // COMPONENT events\n    $('#component__data_style').change(function () {\n        if ($(this).val() === \"ethnicity_as_bar\") {\n            document.getElementById('component__ethnicity_is_bar').classList.remove('hidden')\n            document.getElementById('component__ethnicity_is_sections').classList.add('hidden')\n        } else {\n            document.getElementById('component__ethnicity_is_bar').classList.add('hidden')\n            document.getElementById('component__ethnicity_is_sections').classList.remove('hidden')\n        }\n        preview();\n    });\n    $('#component__section_column').change(preview);\n    $('#component__section_order').change(preview);\n    $('#component__bar_column').change(preview);\n    $('#component__bar_order').change(preview);\n\n    // PANEL-BAR events\n    $('#panel-bar__data_style').change(function () {\n        if ($(this).val() === \"ethnicity_as_panel_bars\") {\n            document.getElementById('panel-bar__ethnicity_as_bar').classList.remove('hidden')\n            document.getElementById('panel-bar__ethnicity_as_panels').classList.add('hidden')\n        } else {\n            document.getElementById('panel-bar__ethnicity_as_bar').classList.add('hidden')\n            document.getElementById('panel-bar__ethnicity_as_panels').classList.remove('hidden')\n        }\n        preview();\n    });\n    $('#panel-bar__bar_column').change(preview);\n    $('#panel-bar__bar_order').change(preview);\n    $('#panel-bar__panel_column').change(preview);\n    $('#panel-bar__panel_order').change(preview);\n\n    // PANEL-LINE events\n    $('#panel-line__x-axis_column').change(preview);\n\n\n    // Show-hide NUMBER-FORMAT__OTHER panel\n    $('#number_format').change(function () {\n        if ($(this).val() === 'other') {\n            document.getElementById('other_number_format').classList.remove('hidden')\n        } else {\n            document.getElementById('other_number_format').classList.add('hidden')\n        }\n        preview();\n    });\n\n\n    function initialiseForm() {\n        if (settings.data) {\n            var data_text = _.map(settings.data, function (d) {\n                return d.join('\\t')\n            }).join('\\n');\n            $('#data_text_area').val(data_text);\n\n            handleNewData(function () {\n                document.getElementById('data-panel').classList.add('hidden')\n                document.getElementById('edit-panel').classList.remove('hidden')\n                setupChartbuilderWithSettings(settings);\n                preview()\n            })\n        }\n    }\n\n    function setupChartbuilderWithSettings(settings) {\n        $('#chart_type_selector').val(settings.type);\n        selectChartType(settings.type);\n        if (settings.preset) {\n            selectClassification(settings.preset);\n        }\n        if (settings.custom) {\n            selectCustomValues(settings.custom)\n        }\n\n        showHideCustomEthnicityPanel()\n\n        $('#chart_title').val(settings.chartFormat.chart_title);\n\n        switch (settings.type) {\n            case 'line_graph':\n                var columnValue = settings.chartOptions.x_axis_column;\n                $('#line__x-axis_column').val(columnValue);\n                break;\n            case 'grouped_bar_chart':\n                var dataStyle = settings.chartOptions.data_style;\n                $('#grouped-bar__data_style').val(dataStyle);\n                if (dataStyle === 'ethnicity_as_group') {\n                    $('#grouped-bar__bar_column').val(settings.chartOptions.bar_column);\n                    document.getElementById('grouped-bar__ethnicity_is_group').classList.remove('hidden')\n                    document.getElementById('grouped-bar__ethnicity_is_bar').classList.add('hidden')\n                } else {\n                    $('#grouped-bar__groups_column').val(settings.chartOptions.group_column);\n                    document.getElementById('grouped-bar__ethnicity_is_group').classList.add('hidden')\n                    document.getElementById('grouped-bar__ethnicity_is_bar').classList.remove('hidden')\n                }\n                break;\n            case 'component_chart':\n                var dataStyle = settings.chartOptions.data_style;\n                $('#component__data_style').val(dataStyle);\n                if (dataStyle === 'ethnicity_as_sections') {\n                    $('#component__bar_column').val(settings.chartOptions.bar_column);\n                    $('#component__bar_order').val(settings.chartOptions.bar_order);\n                    document.getElementById('component__ethnicity_is_sections').classList.remove('hidden')\n                    document.getElementById('component__ethnicity_is_bar').classList.add('hidden')\n                } else {\n                    $('#component__section_column').val(settings.chartOptions.section_column);\n                    $('#component__section_order').val(settings.chartOptions.section_order);\n                    document.getElementById('component__ethnicity_is_sections').classList.add('hidden')\n                    document.getElementById('component__ethnicity_is_bar').classList.remove('hidden')\n                }\n                break;\n            case 'panel_bar_chart':\n                var dataStyle = settings.chartOptions.data_style;\n                $('#panel-bar__data_style').val(dataStyle);\n                if (dataStyle === 'ethnicity_as_panels') {\n                    $('#panel-bar__bar_column').val(settings.chartOptions.bar_column);\n                    $('#panel-bar__bar_order').val(settings.chartOptions.bar_order);\n                    document.getElementById('panel-bar__ethnicity_as_bar').classList.add('hidden')\n                    document.getElementById('panel-bar__ethnicity_as_panels').classList.remove('hidden')\n                } else {\n                    $('#panel-bar__panel_column').val(settings.chartOptions.panel_column);\n                    $('#panel-bar__panel_order').val(settings.chartOptions.panel_order);\n                    document.getElementById('panel-bar__ethnicity_as_bar').classList.remove('hidden')\n                    document.getElementById('panel-bar__ethnicity_as_panels').classList.add('hidden')\n                }\n                break;\n            case 'panel_line_chart':\n                var columnValue = settings.chartOptions.x_axis_column;\n                $('#panel-line__x-axis_column').val(columnValue);\n                break;\n            default:\n                break;\n        }\n        $('#number_format').val(settings.chartFormat.number_format);\n        $('#number_format_prefix').val(settings.chartFormat.number_format_prefix);\n        $('#number_format_suffix').val(settings.chartFormat.number_format_suffix);\n        $('#number_format_min').val(settings.chartFormat.number_format_min);\n        $('#number_format_max').val(settings.chartFormat.number_format_max);\n        if (settings.chartFormat.number_format === 'other') {\n            document.getElementById('other_number_format').classList.remove('hidden')\n        }\n    }\n\n\n\n    initialiseForm();\n});\n\n/*\nCustom number format is far more complicated than it needs to be\nHowever it is viable to just use this function to grab it until it becomes a problem\n*/\n\nfunction getNumberFormat() {\n    var format = $('#number_format').val();\n    if (format === 'none') {\n        return { 'multiplier': 1.0, 'prefix': '', 'suffix': '', 'min': '', 'max': '' }\n    } else if (format === 'percent') {\n        return { 'multiplier': 1.0, 'prefix': '', 'suffix': '%', 'min': 0.0, 'max': 100.0 }\n    } else if (format === 'other') {\n        return {\n            'multiplier': 1.0,\n            'prefix': $('#number_format_prefix').val(),\n            'suffix': $('#number_format_suffix').val(),\n            'min': $('#number_format_min').val(),\n            'max': $('#number_format_max').val()\n        }\n    }\n}\n\nfunction getTips() {\n\n    // 1. Basics\n    var basicErrors = validateChart(chart_data);\n    if (basicErrors.length !== 0) {\n        return basicErrors;\n    }\n\n    // 2. Required fields\n    var missingFields = checkRequiredFields();\n    if (missingFields.length !== 0) {\n        return missingFields\n    }\n\n    // 3. Data errors\n    var ethnicityColumn = getEthnicityColumnHeader();\n    var secondaryColumn = getSecondaryColumnHeader();\n\n    var dataErrors = validateData(chart_data, ethnicityColumn, secondaryColumn);\n    return dataErrors;\n}\n\nvar MISSING_FIELD_ERROR = 'Missing field error';\n\nfunction checkRequiredFields() {\n    if ($('#ethnicity_settings').val() === 'custom' && $('#custom_classification__selector').val() === 'Please select') {\n        return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'custom_classification__selector' }]\n    }\n\n    var chartType = $('#chart_type_selector').val();\n\n    switch (chartType) {\n        case 'bar_chart':\n            return [];\n            ;\n            break;\n        case 'line_graph':\n            if ($('#line__x-axis_column').val() === 'Please select') {\n                return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'line__x-axis_column' }]\n            }\n            ;\n            break;\n        case 'grouped_bar_chart':\n            if ($('#grouped-bar__data_style').val() === 'ethnicity_as_group') {\n                if ($('#grouped-bar__bar_column').val() === 'Please select') {\n                    return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'grouped-bar__bar_column' }]\n                }\n                ;\n            } else {\n                if ($('#grouped-bar__groups_column').val() === 'Please select') {\n                    return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'grouped-bar__groups_column' }]\n                }\n                ;\n            }\n            break;\n        case 'component_chart':\n            if ($('#component__data_style').val() === 'ethnicity_as_sections') {\n                if ($('#component__bar_column').val() === 'Please select') {\n                    return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'component__bar_column' }]\n                }\n                ;\n            } else {\n                if ($('#component__section_column').val() === 'Please select') {\n                    return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'component__section_column' }]\n                }\n                ;\n            }\n            break;\n        case 'panel_bar_chart':\n            if ($('#panel-bar__data_style').val() === 'ethnicity_as_panels') {\n                if ($('#panel-bar__bar_column').val() === 'Please select') {\n                    return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'panel-bar__bar_column' }]\n                }\n                ;\n            } else {\n                if ($('#panel-bar__panel_column').val() === 'Please select') {\n                    return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'panel-bar__panel_column' }]\n                }\n                ;\n            }\n            break;\n        case 'panel_line_chart':\n            if ($('#panel-line__x-axis_column').val() === 'Please select') {\n                return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'panel-line__x-axis_column' }]\n            }\n            ;\n            break;\n        default:\n            return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'chart_type_selector' }]\n    }\n    return [];\n}\n\n\nfunction getEthnicityColumnHeader() {\n    for (var i in chart_data[0]) {\n        var lower = chart_data[0][i].toLowerCase();\n        if (lower.search('ethnic') >= 0) {\n            return chart_data[0][i]\n        }\n    }\n    return null\n}\n\nfunction getSecondaryColumnHeader() {\n    var chartType = $('#chart_type_selector').val();\n    switch (chartType) {\n        case 'bar_chart':\n            return null;\n        case 'line_graph':\n            return $('#line__x-axis_column').val();\n        case 'grouped_bar_chart':\n            if ($('#grouped-bar__data_style').val() === 'ethnicity_as_group') {\n                return $('#grouped-bar__bar_column').val()\n            } else {\n                return $('#grouped-bar__groups_column').val()\n            }\n        case 'component_chart':\n            if ($('#component__data_style').val() === 'ethnicity_as_sections') {\n                return $('#component__bar_column').val()\n            } else {\n                return $('#component__section_column').val()\n            }\n        case 'panel_bar_chart':\n            if ($('#panel-bar__data_style').val() === 'ethnicity_as_panels') {\n                return $('#panel-bar__bar_column').val()\n            } else {\n                return $('#panel-bar__panel_column').val()\n            }\n        case 'panel_line_chart':\n            return $('#panel-line__x-axis_column').val();\n        default:\n            return null;\n    }\n}\n\nfunction pasteJson(json) {\n    var data_text_area = document.getElementById('data_text_area');\n\n    data_text_area.value = _.map(json, function (row) {\n        return row.join('\\t');\n    }).join('\\n');\n    data_text_area.dispatchEvent(new Event(\"keyup\"));\n}\n"],"sourceRoot":"../src"}