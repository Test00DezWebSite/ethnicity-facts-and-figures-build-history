{"version":3,"sources":["chartbuilder.js"],"names":["presets","chart_data","current_data","current_settings","getNumberFormat","format","$","val","multiplier","prefix","suffix","min","max","getTips","basicErrors","validateChart","length","missingFields","checkRequiredFields","ethnicityColumn","getEthnicityColumnHeader","secondaryColumn","getSecondaryColumnHeader","validateData","document","ready","handleNewData","on_success","tabbedData","textToData","message","getElementById","innerHTML","headers","listWithNone","listWithRequired","dropdownHtmlWithDefault","ethnicity_data","getEthnicityValues","ajax","type","url","url_get_classifications","dataType","data","JSON","stringify","contentType","success","response","html","p","preset_name","preset_id","populateEthnicityPresets","showHideCustomEthnicityPanel","classList","remove","failure","console","log","error","err","all_data","_","clone","column","index","cleanHeader","toLowerCase","trim","indexOf","getEthnicityColumn","shift","pluck","add","defaultValue","stripped","exclude","h","header","push","strippedHeaders","preview","evt","tips","tip_list","i","children","tipsOfType","MISSING_FIELD_ERROR","ETHNICITY_ERROR","VALUE_ERROR","RECTANGLE_ERROR","DATA_ERROR_COMPLEX_DATA","DATA_ERROR_DUPLICATION","DATA_ERROR_MISSING_DATA","displayTips","chartObject","buildChartObject","title","drawChart","dispatchEvent","Event","displayChart","errorType","filter","tip","getChartPageSettings","chartType","preset","getPresetCode","custom","getCustomObject","chartOptions","x_axis_column","dataStyle","data_style","bar_column","group_column","bar_order","section_column","section_order","panel_column","panel_order","getChartTypeOptions","chartFormat","x_axis_label","y_axis_label","number_format","number_format_prefix","number_format_suffix","number_format_min","number_format_max","getCustomClassificationCode","code","hasParents","prop","hasAll","hasUnknown","chart_type","id","getPresetWithId","barchartObject","buildDataWithPreset","linechartObject","barColumn","groupColumn","sectionColumn","sectionOrder","componentChartObject","groupOrder","panelColumn","panelOrder","panelBarchartObject","panelBarColumn","panelBarOrder","panel_x_axis_column","panelLinechartObject","columns","rows","concat","body","lowHeaders","map","indices","col","lowCol","r","item","row","selectChartType","chartOptionGroupDivs","getElementsByClassName","selectCustomValues","customObject","customClassification","customValue","setupChartbuilderWithSettings","settings","columnValue","addEventListener","textContent","attr","chartBuilderSettings","src","each","series","this","isNaN","y","url_save_chart_to_page","source","chartTitle","value","classificationCode","customClassificationCode","ethnicityValues","location","reload","change","data_text","d","join","initialiseForm","field","search","pasteJson","json","data_text_area"],"mappings":"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","file":"chartbuilder.js","sourcesContent":["\n/*\n    Functionality of chartbuilder including the main methods that run each stage\n\n\n    On open **initialiseForm()**\n    - grab current_settings from dimension.chart_settings_and_source_data if such a thing exists\n    - if current_settings doesn't exist open with the data area open.\n    - otherwise set the current_settings from file, paste data into the data panel and run the On new data routine below\n\n    On new data (changing data in the data panel area and clicking OK) **handleNewData()**\n    - use an AJAX call to the /get-valid-presets-for-data endpoint to add extra values **buildDataWithPreset()**\n    - populate the chart builder dropdowns with correct values **populateChartOptions(), populateEthnicityPresets()**\n    - if any settings currently exist apply as many as are still relevant **setupChartbuilderWithSettings()**\n\n    On settings changes\n    - validate they will make a viable chart **getTips()**\n    - if so use the rd chart object factory and renderer to display a preview **preview()**\n    - otherwise display an error and tip to fix it **displayTips()**\n\n    On save\n    - build a chart object with the rd-chart-object factory **buildChartObject()**\n    - create a chart_settings lump of json **getChartPageSettings()**\n    - post both to <dimension>/create-chart endpoint **postChartObject()**\n */\n\n// The main working data variables\nvar presets = [];\nvar chart_data = null;\n\n// Variables that needs to be maintained when the user makes changes to the text data\nvar current_data = \"\";\nvar current_settings = null;\n\n$(document).ready(function () {\n\n    // add events to buttons\n    document.getElementById('confirm-data').addEventListener('click', setChartData)\n    document.getElementById('edit-data').addEventListener('click', editChartData)\n    document.getElementById('cancel-edit-data').addEventListener('click', cancelEditData)\n    document.getElementById('save').addEventListener('click', saveChart)\n\n    /*\n    Events from the DATA ENTRY PANEL\n    */\n    function setChartData(evt) {\n        handleNewData(function () {\n            if (current_settings) {\n                setupChartbuilderWithSettings(current_settings)\n            }\n            preview()\n        });\n        document.getElementById('data-panel').classList.add('hidden')\n        document.getElementById('edit-panel').classList.remove('hidden')\n        document.getElementById('builder-title').textContent = 'Format and view chart'\n    }\n\n    function editChartData(evt) {\n        current_data = $('#data_text_area').val();\n        current_settings = getChartPageSettings();\n        document.getElementById('data-panel').classList.remove('hidden')\n        document.getElementById('edit-panel').classList.add('hidden')\n        document.getElementById('builder-title').textContent = 'Create a chart'\n    }\n\n    function cancelEditData(evt) {\n        $('#data_text_area').val(current_data);\n        document.getElementById('data-panel').classList.add('hidden')\n        document.getElementById('edit-panel').classList.remove('hidden')\n        document.getElementById('builder-title').textContent = 'Format and view chart'\n    }\n\n\n    /*\n    Initialise the main editor after DATA ENTRY PANEL change\n    */\n\n    function handleNewData(on_success) {\n        // get the data\n        var tabbedData = $(\"#data_text_area\").val();\n\n        // set the DATA DISPLAY content\n        chart_data = textToData(tabbedData);\n        if (chart_data.length > 0) {\n            message = chart_data.length - 1 + ' rows by ' + chart_data[0].length + ' columns'\n        }\n\n        document.getElementById('data-description').innerHTML = message;\n\n        // update options in drop-downs\n        var headers = chart_data[0];\n        populateChartOptions(headers);\n\n        // call the backend to do the presets heavy lifting\n        var ethnicity_data = getEthnicityValues(chart_data);\n        $.ajax({\n            type: \"post\",\n            url: url_get_classifications,\n            dataType: 'json',\n            data: JSON.stringify({ 'data': ethnicity_data }),\n            contentType: 'application/json; charset=utf-8',\n            success: function (response) {\n                // upon heavy lifting complete\n\n                // populate the ethnicity presets from the response\n                presets = response['presets'];\n                populateEthnicityPresets(presets);\n                showHideCustomEthnicityPanel()\n\n                // show the presets (step 2) and chart type (step 3) section\n                document.getElementById('ethnicity_settings_section').classList.remove('hidden')\n                document.getElementById('select_chart_type').classList.remove('hidden')\n\n\n                // any further processing\n                if (on_success) {\n                    on_success();\n                }\n            },\n            failure: function () {\n                console.log('failed to get ethnicity classifcations');\n            },\n            error: function (err) {\n                console.log(err);\n            }\n        });\n    }\n\n    function getEthnicityValues(data) {\n        var all_data = _.clone(data);\n        var headers = all_data.shift();\n\n        var column = getEthnicityColumn(headers);\n        if (column >= 0) {\n            return _.pluck(all_data, column);\n        }\n        return [];\n    }\n\n    function getEthnicityColumn(headers) {\n        for (var index = 0; index < headers.length; index++) {\n            var cleanHeader = headers[index].toLowerCase().trim();\n            if (cleanHeader.indexOf('ethnic') >= 0) {\n                return index\n            }\n        }\n        return -1;\n    }\n\n    /*\n    SETUP\n    */\n\n    function populateChartOptions(headers) {\n        var listWithNone = dropdownHtmlWithDefault(headers, '[None]');\n        var listWithRequired = dropdownHtmlWithDefault(headers, 'Please select');\n\n        document.getElementById('line__x-axis_column').innerHTML = listWithRequired\n\n        document.getElementById('grouped-bar__bar_column').innerHTML = listWithRequired\n        document.getElementById('grouped-bar__groups_column').innerHTML = listWithRequired\n\n        document.getElementById('component__bar_column').innerHTML = listWithRequired\n        document.getElementById('component__bar_order').innerHTML = listWithNone\n        document.getElementById('component__section_column').innerHTML = listWithRequired\n        document.getElementById('component__section_order').innerHTML = listWithNone\n\n        document.getElementById('panel-bar__panel_column').innerHTML = listWithRequired\n        document.getElementById('panel-bar__panel_order').innerHTML = listWithNone\n        document.getElementById('panel-bar__bar_column').innerHTML = listWithRequired\n        document.getElementById('panel-bar__bar_order').innerHTML = listWithNone\n\n        document.getElementById('panel-line__x-axis_column').innerHTML = listWithRequired\n    }\n\n    function selectDropdown(dropdown_id, value) {\n        var dropdown = document.getElementById(dropdown_id);\n        for (var i = 0; i < dropdown.length; i++) {\n            dropdown[i].selected = (dropdown[i].value === value)\n        }\n    }\n\n\n    function showHideCustomEthnicityPanel() {\n        if($('#ethnicity_settings').val() === 'custom') {\n            document.getElementById('custom_classification__panel').classList.remove('hidden')\n        } else {\n            document.getElementById('custom_classification__panel').classList.add('hidden')\n        }\n    }\n\n    function populateEthnicityPresets(presets) {\n        var html = '';\n        for (var p in presets) {\n            var preset_name = presets[p]['preset']['name'];\n            var preset_id = presets[p]['preset']['id'];\n            if (p === 0) {\n                html = html + '<option value=\"' + preset_id + '\" selected>' + preset_name + '</option>';\n            } else {\n                html = html + '<option value=\"' + preset_id + '\" >' + preset_name + '</option>';\n            }\n        }\n        document.getElementById('ethnicity_settings').innerHTML = html\n    }\n\n    function strippedHeaders(headers) {\n        var exclude = ['Measure', 'Ethnicity', 'Ethnic group', 'Value', 'Values'];\n        var stripped = [];\n        for (h in headers) {\n            var header = headers[h];\n            if (exclude.indexOf(header) < 0) {\n                stripped.push(header);\n            }\n        }\n        return stripped;\n    }\n\n    function dropdownHtmlWithDefault(headers, defaultValue) {\n        var html = '<option value=\"' + defaultValue + '\" selected>' + defaultValue + '</option>';\n        var stripped = strippedHeaders(headers);\n        for (var h in stripped) {\n            var header = stripped[h];\n            html = html + '<option value=\"' + header + '\">' + header + '</option>';\n        }\n        return html;\n    }\n\n    /*\n    PREVIEW\n    Render the chart as a preview using drawChart() from rd - graph.js (this the exact same method that is used front - end)\n    */\n\n    function preview(evt) {\n        var tips = getTips();\n        if (tips.length > 0) {\n            displayTips(tips);\n        } else {\n            displayChart();\n        }\n    }\n\n    function displayTips(tips) {\n        document.getElementById('tips_container').classList.remove('hidden')\n        document.getElementById('preview_container').classList.add('hidden')\n\n        document.getElementById('notes_container').classList.add('hidden')\n        document.getElementById('errors_container').classList.add('hidden')\n\n        var tip_list = document.getElementById('tip-list')\n        for (var i = 0; i < tip_list.children.length; i++) {\n            tip_list.children[i].classList.add('hidden')\n        }\n\n        if (tipsOfType(tips, MISSING_FIELD_ERROR).length > 0) {\n            document.getElementById('notes_container').classList.remove('hidden')\n        }\n        if (tipsOfType(tips, ETHNICITY_ERROR).length > 0) {\n            document.getElementById('errors_container').classList.remove('hidden')\n            document.getElementById('tip__ethnicity-column').classList.remove('hidden')\n        }\n        if (tipsOfType(tips, VALUE_ERROR).length > 0) {\n            document.getElementById('errors_container').classList.remove('hidden')\n            document.getElementById('tip__value-column').classList.remove('hidden')\n        }\n        if (tipsOfType(tips, RECTANGLE_ERROR).length > 0) {\n            document.getElementById('errors_container').classList.remove('hidden')\n            document.getElementById('tip__rectangular-data').classList.remove('hidden')\n        }\n        if (tipsOfType(tips, DATA_ERROR_COMPLEX_DATA).length > 0) {\n            document.getElementById('errors_container').classList.remove('hidden')\n            document.getElementById('tip__complex-data').classList.remove('hidden')\n        }\n        if (tipsOfType(tips, DATA_ERROR_DUPLICATION).length > 0) {\n            document.getElementById('errors_container').classList.remove('hidden')\n            document.getElementById('tip__duplicate-data').classList.remove('hidden')\n        }\n        if (tipsOfType(tips, DATA_ERROR_MISSING_DATA).length > 0) {\n            document.getElementById('errors_container').classList.remove('hidden')\n            document.getElementById('tip__missing-data').classList.remove('hidden')\n        }\n\n    }\n\n    function tipsOfType(tips, errorType) {\n        return _.filter(tips, function (tip) {\n            return tip.errorType === errorType;\n        })\n    }\n\n    function displayChart() {\n        document.getElementById('tips_container').classList.add('hidden')\n        document.getElementById('preview_container').classList.remove('hidden')\n\n        var chartObject = buildChartObject();\n        if (chartObject) {\n            chartObject.title = '';\n            drawChart('container', chartObject);\n\n            document.getElementById('save_section').classList.remove('hidden')\n        }\n\n        document.getElementById('chart_title').dispatchEvent(new Event(\"input\"));\n    }\n\n    /*\n    SAVE\n    Save the chart by building a chartObject and bundling up all the setting then sending it to the backend\n    */\n\n    function saveChart(evt) {\n\n        $('#save').attr('disabled', 'disabled');\n\n        var chartObject = buildChartObject();\n        var chartBuilderSettings = getChartPageSettings();\n        if (chartObject) {\n            postChartObject(chartObject, chartBuilderSettings);\n        }\n    }\n\n    function postChartObject(chartObject, src) {\n        if (chartObject) {\n            // adjust for null data\n            $.each(chartObject.series, function () {\n                for (var i = 0; i < this.data.length; i++) {\n                    if (isNaN(this.data[i].y)) {\n                        this.data[i].y = 0;\n                    }\n                }\n            });\n\n            $.ajax({\n                type: \"POST\",\n                url: url_save_chart_to_page,\n                dataType: 'json',\n                data: JSON.stringify({\n                    'chartObject': chartObject,\n                    'source': src,\n                    'chartTitle': getChartTitle(),\n                    'classificationCode': getPresetCode(),\n                    'customClassificationCode': getCustomClassificationCode(),\n                    'customClassification': getCustomObject(),\n                    'ethnicityValues': getEthnicityValues(chart_data)}),\n                contentType: 'application/json',\n                success: function () {\n                    location.reload();\n                }\n            });\n        }\n    }\n\n    function getChartPageSettings() {\n        // get the data\n        var tabbedData = $(\"#data_text_area\").val();\n        var chartType = $('#chart_type_selector').val();\n        return {\n            'data': textToData(tabbedData),\n            'type': chartType,\n            'preset': getPresetCode(),\n            'custom': getCustomObject(),\n            'chartOptions': getChartTypeOptions(chartType),\n            'chartFormat': getChartFormat(),\n        }\n    }\n\n    function getChartTypeOptions(chartType) {\n        switch (chartType) {\n            case 'bar_chart':\n                return {};\n            case 'line_graph':\n                return { 'x_axis_column': $('#line__x-axis_column').val() };\n            case 'grouped_bar_chart':\n                var dataStyle = $('#grouped-bar__data_style').val();\n                if (dataStyle === 'ethnicity_as_group') {\n                    return { 'data_style': dataStyle, 'bar_column': $('#grouped-bar__bar_column').val() }\n                } else {\n                    return { 'data_style': dataStyle, 'group_column': $('#grouped-bar__groups_column').val() }\n                }\n            case 'component_chart':\n                var dataStyle = $('#component__data_style').val();\n                if (dataStyle === 'ethnicity_as_sections') {\n                    return {\n                        'data_style': dataStyle, 'bar_column': $('#component__bar_column').val(),\n                        'bar_order': $('#component__bar_order').val()\n                    }\n                } else {\n                    return {\n                        'data_style': dataStyle, 'section_column': $('#component__section_column').val(),\n                        'section_order': $('#component__section_order').val()\n                    }\n                }\n            case 'panel_bar_chart':\n                var dataStyle = $('#panel-bar__data_style').val();\n                if (dataStyle === 'ethnicity_as_panels') {\n                    return {\n                        'data_style': dataStyle, 'bar_column': $('#panel-bar__bar_column').val(),\n                        'bar_order': $('#panel-bar__bar_order').val()\n                    }\n                } else {\n                    return {\n                        'data_style': dataStyle, 'panel_column': $('#panel-bar__panel_column').val(),\n                        'panel_order': $('#panel-bar__panel_order').val()\n                    }\n                }\n            case 'panel_line_chart':\n                return { 'x_axis_column': $('#panel-line__x-axis_column').val() };\n            default:\n                return {};\n        }\n    }\n\n    function getChartFormat() {\n        return {\n            'x_axis_label': $('#x_axis_label').val(),\n            'y_axis_label': $('#y_axis_label').val(),\n            'number_format': $('#number_format').val(),\n            'number_format_prefix': $('#number_format_prefix').val(),\n            'number_format_suffix': $('#number_format_suffix').val(),\n            'number_format_min': $('#number_format_min').val(),\n            'number_format_max': $('#number_format_max').val()\n        }\n    }\n\n    function getChartTitle() {\n        return document.getElementById('chart_title').value;\n    }\n\n    function getPresetCode() {\n        return $('#ethnicity_settings').val();\n    }\n\n    function getCustomClassificationCode() {\n        return $('#custom_classification__selector').val();\n    }\n\n    function getCustomHasParents() {\n        return $('#custom_classification__has_parents').prop('checked');\n    }\n\n    function getCustomHasAll() {\n        return $('#custom_classification__has_all').prop('checked');\n    }\n\n    function getCustomHasUnknown() {\n        return $('#custom_classification__has_unknown').prop('checked');\n    }\n\n    function getCustomObject() {\n        return {\n            'code': getCustomClassificationCode(),\n            'hasParents': getCustomHasParents(),\n            'hasAll': getCustomHasAll(),\n            'hasUnknown': getCustomHasUnknown()\n        }\n    }\n\n    function buildChartObject() {\n        var chart_type = $('#chart_type_selector').val();\n        var chartObject = null;\n        var preset = getPresetWithId($('#ethnicity_settings').val());\n        if (chart_type === 'bar_chart') {\n            chartObject = barchartObject(buildDataWithPreset(preset, chart_data, ['value']),\n                'Ethnicity',\n                '[None]',\n                'Ethnicity-parent',\n                'Ethnicity-order',\n                $('#chart_title').val(),\n                $('#x_axis_label').val(),\n                $('#y_axis_label').val(),\n                getNumberFormat());\n        } else if (chart_type === 'line_graph') {\n            var x_axis_column = $('#line__x-axis_column').val();\n            chartObject = linechartObject(buildDataWithPreset(preset, chart_data, ['value', x_axis_column]),\n                x_axis_column,\n                'Ethnicity',\n                $('#chart_title').val(),\n                $('#x_axis_label').val(),\n                $('#y_axis_label').val(),\n                getNumberFormat(),\n                'Ethnicity-order');\n        } else if (chart_type === 'grouped_bar_chart') {\n            if ($('#grouped-bar__data_style').val() === 'ethnicity_as_group') {\n                var barColumn = $('#grouped-bar__bar_column').val();\n                chartObject = barchartObject(buildDataWithPreset(preset, chart_data, ['value', barColumn]),\n                    'Ethnicity',\n                    barColumn,\n                    '[None]',\n                    'Ethnicity-order',\n                    $('#chart_title').val(),\n                    $('#x_axis_label').val(),\n                    $('#y_axis_label').val(),\n                    getNumberFormat());\n            } else {\n                var groupColumn = $('#grouped-bar__groups_column').val();\n                chartObject = barchartObject(buildDataWithPreset(preset, chart_data, ['value', groupColumn]),\n                    groupColumn,\n                    'Ethnicity',\n                    '[None]',\n                    'Ethnicity-order',\n                    $('#chart_title').val(),\n                    $('#x_axis_label').val(),\n                    $('#y_axis_label').val(),\n                    getNumberFormat());\n            }\n        } else if (chart_type === 'component_chart') {\n            if ($('#component__data_style').val() === 'ethnicity_as_bar') {\n                var sectionColumn = $('#component__section_column').val();\n                var sectionOrder = $('#component__section_order').val();\n                var data = [];\n                if (sectionOrder && sectionOrder !== '[None]') {\n                    data = buildDataWithPreset(preset, chart_data, ['value', sectionColumn, sectionOrder])\n                } else {\n                    data = buildDataWithPreset(preset, chart_data, ['value', sectionColumn])\n                }\n                chartObject = componentChartObject(data,\n                    'Ethnicity',\n                    sectionColumn,\n                    $('#chart_title').val(),\n                    $('#x_axis_label').val(),\n                    $('#y_axis_label').val(),\n                    getNumberFormat(),\n                    'Ethnicity-order',\n                    sectionOrder)\n            } else {\n                var groupColumn = $('#component__bar_column').val();\n                var groupOrder = $('#component__bar_order').val();\n                var data = [];\n                if (groupOrder && groupOrder !== '[None]') {\n                    data = buildDataWithPreset(preset, chart_data, ['value', groupColumn, groupOrder])\n                } else {\n                    data = buildDataWithPreset(preset, chart_data, ['value', groupColumn])\n                }\n                chartObject = componentChartObject(buildDataWithPreset(preset, chart_data, ['value', groupColumn]),\n                    groupColumn,\n                    'Ethnicity',\n                    $('#chart_title').val(),\n                    $('#x_axis_label').val(),\n                    $('#y_axis_label').val(),\n                    getNumberFormat(),\n                    groupOrder,\n                    'Ethnicity-order')\n            }\n        } else if (chart_type === 'panel_bar_chart') {\n            if ($('#panel-bar__data_style').val() === 'ethnicity_as_panel_bars') {\n                var panelColumn = $('#panel-bar__panel_column').val();\n                var panelOrder = $('#panel-bar__panel_order').val();\n                var data = [];\n                if (panelOrder && panelOrder !== '[None]') {\n                    data = buildDataWithPreset(preset, chart_data, ['value', panelColumn, panelOrder])\n                } else {\n                    data = buildDataWithPreset(preset, chart_data, ['value', panelColumn])\n                }\n                chartObject = panelBarchartObject(data,\n                    'Ethnicity',\n                    panelColumn,\n                    $('#chart_title').val(),\n                    '',\n                    '',\n                    getNumberFormat(),\n                    'Ethnicity-order',\n                    panelOrder)\n            } else {\n                var panelBarColumn = $('#panel-bar__bar_column').val();\n                var panelBarOrder = $('#panel-bar__bar_order').val();\n                var data = [];\n                if (panelBarColumn && panelBarOrder !== '[None]') {\n                    data = buildDataWithPreset(preset, chart_data, ['value', panelBarColumn, panelBarOrder])\n                } else {\n                    data = buildDataWithPreset(preset, chart_data, ['value', panelBarColumn])\n                }\n                chartObject = panelBarchartObject(data,\n                    panelBarColumn,\n                    'Ethnicity',\n                    $('#chart_title').val(),\n                    '',\n                    '',\n                    getNumberFormat(),\n                    panelBarOrder,\n                    'Ethnicity-order')\n            }\n        } else if (chart_type === 'panel_line_chart') {\n            var panel_x_axis_column = $('#panel-line__x-axis_column').val();\n            var data = buildDataWithPreset(preset, chart_data, ['value', panel_x_axis_column]);\n            chartObject = panelLinechartObject(data,\n                panel_x_axis_column,\n                'Ethnicity',\n                $('#chart_title').val(),\n                '',\n                '',\n                getNumberFormat(),\n                'Ethnicity-order');\n        }\n        return chartObject;\n    }\n\n    function buildDataWithPreset(preset, data, columns) {\n        var rows = [['Ethnicity', 'Ethnicity-parent', 'Ethnicity-order'].concat(columns)];\n\n        var body = _.clone(data);\n        var headers = body.shift();\n        var lowHeaders = _.map(headers, function (header) {\n            return header.toLowerCase().trim()\n        });\n        var indices = _.map(columns, function (col) {\n            var lowCol = col.toLowerCase().trim();\n            return lowHeaders.indexOf(lowCol);\n        });\n\n        for (var r in preset['data']) {\n            var item = preset['data'][r];\n            var row = [item['preset'], item['parent'], item['order']];\n            row = row.concat(_.map(indices, function (index) {\n                return index === -1 ? '' : body[r][index]\n            }));\n            rows = rows.concat([row])\n        }\n\n        return rows;\n    }\n\n    function getPresetWithId(preset_id) {\n        for (p in presets) {\n            if (presets[p].preset.id === preset_id) {\n                return presets[p];\n            }\n        }\n        return null;\n    }\n\n\n    /*\n    EVENT HANDLERS\n    */\n\n    // Switch CHART_OPTIONS panels\n    $('#ethnicity_settings').change(function () {\n        showHideCustomEthnicityPanel();\n        preview();\n    })\n    $('#custom_classification__selector').change(preview);\n\n    // Switch CHART_OPTIONS panels\n    $('#chart_type_selector').change(function () {\n        selectChartType($(this).val())\n        preview()\n    });\n\n    function selectChartType(chart_type) {\n        $('#chart_type_selector').val(chart_type);\n\n        var chartOptionGroupDivs = document.getElementsByClassName('chart-option-group')\n\n        for (var i = 0; i < chartOptionGroupDivs.length; i++) {\n            chartOptionGroupDivs[i].classList.add('hidden')\n        }\n\n        if (chart_type !== 'none') {\n            document.getElementById(chart_type + '_options').classList.remove('hidden')\n            document.getElementById('chart_format_options').classList.remove('hidden')\n        }\n    }\n\n    function selectPreset(preset) {\n        $('#ethnicity_settings').val(preset);\n    }\n\n    function selectCustomValues(customObject) {\n        selectCustomClassification(customObject['code'])\n        selectCustomHasParents(customObject['hasParents'])\n        selectCustomHasAll(customObject['hasAll'])\n        selectCustomHasUnknown(customObject['hasUnknown'])\n    }\n\n    function selectCustomClassification(customClassification) {\n        $('#custom_classification__selector').val(customClassification)\n    }\n\n    function selectCustomHasParents(customValue) {\n           $('#custom_classification__has_parents').prop('checked', customValue)\n    }\n\n    function selectCustomHasUnknown(customValue) {\n            $('#custom_classification__has_unknown').prop('checked', customValue)\n    }\n\n    function selectCustomHasAll(customValue) {\n            $('#custom_classification__has_all').prop('checked', customValue)\n    }\n\n    /*\n    CHART PANEL events\n    */\n\n    // LINE events\n    $('#line__x-axis_column').change(preview);\n\n    // GROUPED-BAR events\n    $('#grouped-bar__data_style').change(function () {\n        if ($(this).val() === \"ethnicity_as_group\") {\n            document.getElementById('grouped-bar__ethnicity_is_group').classList.remove('hidden')\n            document.getElementById('grouped-bar__ethnicity_is_bar').classList.add('hidden')\n        } else {\n            document.getElementById('grouped-bar__ethnicity_is_group').classList.add('hidden')\n            document.getElementById('grouped-bar__ethnicity_is_bar').classList.remove('hidden')\n        }\n        preview();\n    });\n    $('#grouped-bar__bar_column').change(preview);\n    $('#grouped-bar__bar_order').change(preview);\n    $('#grouped-bar__groups_column').change(preview);\n    $('#grouped-bar__groups_order').change(preview);\n\n\n    // COMPONENT events\n    $('#component__data_style').change(function () {\n        if ($(this).val() === \"ethnicity_as_bar\") {\n            document.getElementById('component__ethnicity_is_bar').classList.remove('hidden')\n            document.getElementById('component__ethnicity_is_sections').classList.add('hidden')\n        } else {\n            document.getElementById('component__ethnicity_is_bar').classList.add('hidden')\n            document.getElementById('component__ethnicity_is_sections').classList.remove('hidden')\n        }\n        preview();\n    });\n    $('#component__section_column').change(preview);\n    $('#component__section_order').change(preview);\n    $('#component__bar_column').change(preview);\n    $('#component__bar_order').change(preview);\n\n    // PANEL-BAR events\n    $('#panel-bar__data_style').change(function () {\n        if ($(this).val() === \"ethnicity_as_panel_bars\") {\n            document.getElementById('panel-bar__ethnicity_as_bar').classList.remove('hidden')\n            document.getElementById('panel-bar__ethnicity_as_panels').classList.add('hidden')\n        } else {\n            document.getElementById('panel-bar__ethnicity_as_bar').classList.add('hidden')\n            document.getElementById('panel-bar__ethnicity_as_panels').classList.remove('hidden')\n        }\n        preview();\n    });\n    $('#panel-bar__bar_column').change(preview);\n    $('#panel-bar__bar_order').change(preview);\n    $('#panel-bar__panel_column').change(preview);\n    $('#panel-bar__panel_order').change(preview);\n\n    // PANEL-LINE events\n    $('#panel-line__x-axis_column').change(preview);\n\n\n    // Show-hide NUMBER-FORMAT__OTHER panel\n    $('#number_format').change(function () {\n        if ($(this).val() === 'other') {\n            document.getElementById('other_number_format').classList.remove('hidden')\n        } else {\n            document.getElementById('other_number_format').classList.add('hidden')\n        }\n        preview();\n    });\n\n\n    function initialiseForm() {\n        if (settings.data) {\n            var data_text = _.map(settings.data, function (d) {\n                return d.join('\\t')\n            }).join('\\n');\n            $('#data_text_area').val(data_text);\n\n            handleNewData(function () {\n                document.getElementById('data-panel').classList.add('hidden')\n                document.getElementById('edit-panel').classList.remove('hidden')\n                setupChartbuilderWithSettings(settings);\n                preview()\n            })\n        }\n    }\n\n    function setupChartbuilderWithSettings(settings) {\n        $('#chart_type_selector').val(settings.type);\n        selectChartType(settings.type);\n        if (settings.preset) {\n            selectPreset(settings.preset);\n        }\n        if (settings.custom) {\n            selectCustomValues(settings.custom)\n        }\n\n        showHideCustomEthnicityPanel()\n\n        switch (settings.type) {\n            case 'line_graph':\n                var columnValue = settings.chartOptions.x_axis_column;\n                $('#line__x-axis_column').val(columnValue);\n                break;\n            case 'grouped_bar_chart':\n                var dataStyle = settings.chartOptions.data_style;\n                $('#grouped-bar__data_style').val(dataStyle);\n                if (dataStyle === 'ethnicity_as_group') {\n                    $('#grouped-bar__bar_column').val(settings.chartOptions.bar_column);\n                    document.getElementById('grouped-bar__ethnicity_is_group').classList.remove('hidden')\n                    document.getElementById('grouped-bar__ethnicity_is_bar').classList.add('hidden')\n                } else {\n                    $('#grouped-bar__groups_column').val(settings.chartOptions.group_column);\n                    document.getElementById('grouped-bar__ethnicity_is_group').classList.add('hidden')\n                    document.getElementById('grouped-bar__ethnicity_is_bar').classList.remove('hidden')\n                }\n                break;\n            case 'component_chart':\n                var dataStyle = settings.chartOptions.data_style;\n                $('#component__data_style').val(dataStyle);\n                if (dataStyle === 'ethnicity_as_sections') {\n                    $('#component__bar_column').val(settings.chartOptions.bar_column);\n                    $('#component__bar_order').val(settings.chartOptions.bar_order);\n                    document.getElementById('component__ethnicity_is_sections').classList.remove('hidden')\n                    document.getElementById('component__ethnicity_is_bar').classList.add('hidden')\n                } else {\n                    $('#component__section_column').val(settings.chartOptions.section_column);\n                    $('#component__section_order').val(settings.chartOptions.section_order);\n                    document.getElementById('component__ethnicity_is_sections').classList.add('hidden')\n                    document.getElementById('component__ethnicity_is_bar').classList.remove('hidden')\n                }\n                break;\n            case 'panel_bar_chart':\n                var dataStyle = settings.chartOptions.data_style;\n                $('#panel-bar__data_style').val(dataStyle);\n                if (dataStyle === 'ethnicity_as_panels') {\n                    $('#panel-bar__bar_column').val(settings.chartOptions.bar_column);\n                    $('#panel-bar__bar_order').val(settings.chartOptions.bar_order);\n                    document.getElementById('panel-bar__ethnicity_as_bar').classList.add('hidden')\n                    document.getElementById('panel-bar__ethnicity_as_panels').classList.remove('hidden')\n                } else {\n                    $('#panel-bar__panel_column').val(settings.chartOptions.panel_column);\n                    $('#panel-bar__panel_order').val(settings.chartOptions.panel_order);\n                    document.getElementById('panel-bar__ethnicity_as_bar').classList.remove('hidden')\n                    document.getElementById('panel-bar__ethnicity_as_panels').classList.add('hidden')\n                }\n                break;\n            case 'panel_line_chart':\n                var columnValue = settings.chartOptions.x_axis_column;\n                $('#panel-line__x-axis_column').val(columnValue);\n                break;\n            default:\n                break;\n        }\n        $('#number_format').val(settings.chartFormat.number_format);\n        $('#number_format_prefix').val(settings.chartFormat.number_format_prefix);\n        $('#number_format_suffix').val(settings.chartFormat.number_format_suffix);\n        $('#number_format_min').val(settings.chartFormat.number_format_min);\n        $('#number_format_max').val(settings.chartFormat.number_format_max);\n        if (settings.chartFormat.number_format === 'other') {\n            document.getElementById('other_number_format').classList.remove('hidden')\n        }\n    }\n\n\n\n    initialiseForm();\n});\n\n/*\nCustom number format is far more complicated than it needs to be\nHowever it is viable to just use this function to grab it until it becomes a problem\n*/\n\nfunction getNumberFormat() {\n    var format = $('#number_format').val();\n    if (format === 'none') {\n        return { 'multiplier': 1.0, 'prefix': '', 'suffix': '', 'min': '', 'max': '' }\n    } else if (format === 'percent') {\n        return { 'multiplier': 1.0, 'prefix': '', 'suffix': '%', 'min': 0.0, 'max': 100.0 }\n    } else if (format === 'other') {\n        return {\n            'multiplier': 1.0,\n            'prefix': $('#number_format_prefix').val(),\n            'suffix': $('#number_format_suffix').val(),\n            'min': $('#number_format_min').val(),\n            'max': $('#number_format_max').val()\n        }\n    }\n}\n\nfunction getTips() {\n\n    // 1. Basics\n    var basicErrors = validateChart(chart_data);\n    if (basicErrors.length !== 0) {\n        return basicErrors;\n    }\n\n    // 2. Required fields\n    var missingFields = checkRequiredFields();\n    if (missingFields.length !== 0) {\n        return missingFields\n    }\n\n    // 3. Data errors\n    var ethnicityColumn = getEthnicityColumnHeader();\n    var secondaryColumn = getSecondaryColumnHeader();\n\n    var dataErrors = validateData(chart_data, ethnicityColumn, secondaryColumn);\n    return dataErrors;\n}\n\nvar MISSING_FIELD_ERROR = 'Missing field error';\n\nfunction checkRequiredFields() {\n    if ($('#ethnicity_settings').val() === 'custom' && $('#custom_classification__selector').val() === 'Please select') {\n        return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'custom_classification__selector' }]\n    }\n\n    var chartType = $('#chart_type_selector').val();\n\n    switch (chartType) {\n        case 'bar_chart':\n            return [];\n            ;\n            break;\n        case 'line_graph':\n            if ($('#line__x-axis_column').val() === 'Please select') {\n                return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'line__x-axis_column' }]\n            }\n            ;\n            break;\n        case 'grouped_bar_chart':\n            if ($('#grouped-bar__data_style').val() === 'ethnicity_as_group') {\n                if ($('#grouped-bar__bar_column').val() === 'Please select') {\n                    return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'grouped-bar__bar_column' }]\n                }\n                ;\n            } else {\n                if ($('#grouped-bar__groups_column').val() === 'Please select') {\n                    return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'grouped-bar__groups_column' }]\n                }\n                ;\n            }\n            break;\n        case 'component_chart':\n            if ($('#component__data_style').val() === 'ethnicity_as_sections') {\n                if ($('#component__bar_column').val() === 'Please select') {\n                    return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'component__bar_column' }]\n                }\n                ;\n            } else {\n                if ($('#component__section_column').val() === 'Please select') {\n                    return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'component__section_column' }]\n                }\n                ;\n            }\n            break;\n        case 'panel_bar_chart':\n            if ($('#panel-bar__data_style').val() === 'ethnicity_as_panels') {\n                if ($('#panel-bar__bar_column').val() === 'Please select') {\n                    return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'panel-bar__bar_column' }]\n                }\n                ;\n            } else {\n                if ($('#panel-bar__panel_column').val() === 'Please select') {\n                    return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'panel-bar__panel_column' }]\n                }\n                ;\n            }\n            break;\n        case 'panel_line_chart':\n            if ($('#panel-line__x-axis_column').val() === 'Please select') {\n                return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'panel-line__x-axis_column' }]\n            }\n            ;\n            break;\n        default:\n            return [{ 'errorType': MISSING_FIELD_ERROR, 'field': 'chart_type_selector' }]\n    }\n    return [];\n}\n\n\nfunction getEthnicityColumnHeader() {\n    for (var i in chart_data[0]) {\n        var lower = chart_data[0][i].toLowerCase();\n        if (lower.search('ethnic') >= 0) {\n            return chart_data[0][i]\n        }\n    }\n    return null\n}\n\nfunction getSecondaryColumnHeader() {\n    var chartType = $('#chart_type_selector').val();\n    switch (chartType) {\n        case 'bar_chart':\n            return null;\n        case 'line_graph':\n            return $('#line__x-axis_column').val();\n        case 'grouped_bar_chart':\n            if ($('#grouped-bar__data_style').val() === 'ethnicity_as_group') {\n                return $('#grouped-bar__bar_column').val()\n            } else {\n                return $('#grouped-bar__groups_column').val()\n            }\n        case 'component_chart':\n            if ($('#component__data_style').val() === 'ethnicity_as_sections') {\n                return $('#component__bar_column').val()\n            } else {\n                return $('#component__section_column').val()\n            }\n        case 'panel_bar_chart':\n            if ($('#panel-bar__data_style').val() === 'ethnicity_as_panels') {\n                return $('#panel-bar__bar_column').val()\n            } else {\n                return $('#panel-bar__panel_column').val()\n            }\n        case 'panel_line_chart':\n            return $('#panel-line__x-axis_column').val();\n        default:\n            return null;\n    }\n}\n\nfunction pasteJson(json) {\n    var data_text_area = document.getElementById('data_text_area');\n\n    data_text_area.value = _.map(json, function (row) {\n        return row.join('\\t');\n    }).join('\\n');\n    data_text_area.dispatchEvent(new Event(\"keyup\"));\n}\n"],"sourceRoot":"../src"}